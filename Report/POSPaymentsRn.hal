globalprocedure POSPaymentsRn(record RcVc RepSpec)BEGIN  record IVVc IVr;  row IVVc IVrw;  record LocalMachineBlock LMb;  integer pos;  boolean TrHs,testf;  date chkdate;  val card,cash,cashtot,cardtot;  integer i,rwcnt;  chkdate = RepSpec.RegDate;  if (BlankDate(chkdate)) then begin  	goto LPOSPaymentsRn;  end;    StartReportJob(USetStr(3250));    Header(3,USetStr(28206) & " " & chkdate,0);  EndHeader;    BlockLoad(LMb);  pos = 0;  StartFormat(15);  OutString(pos,0,USetStr(4043),false); //IVr.SerNr  OutString(pos+=70,0,USetStr(12463),false); //IVr.TransDate  OutString(pos+=70,0,USetStr(6768),false); //cash  OutString(pos+=120,0,USetStr(31007),false); //card  EndFormat;  Black_Divider(0,1);  cashtot = 0;  cardtot = 0;  TrHs = true;  IVr.TransDate = chkdate;  while (LoopKey("TransDate",IVr,1,TrHs)) begin  	testf = true;  	if (LMb.LocalMachineCode!=IVr.MachineName) then begin testf = false; end;  	if (IVr.TransDate<chkdate) then begin testf = false; end;    if (IVr.TransDate>chkdate) then begin TrHs = false; testf = false; end;    if (testf) then begin      cash = 0;      card = 0;      rwcnt = MatRowCnt(IVr);      for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(IVr,i,IVrw);      	switch (IVrw.stp) begin      		case kInvoiceRowTypeCashPayment:	  			cash = cash + IVrw.Sum;	  			cashtot = cashtot + IVrw.Sum;	  		case kInvoiceRowTypeCreditCardPayment:		  		card = card + IVrw.Sum;		  		cardtot = cardtot + IVrw.Sum;	  	end;      end;            pos = 0;	  StartFormat(15);	  OutString(pos,0,IVr.SerNr,false);	  OutString(pos+=70,0,IVr.TransDate,false);	  if (cash<>0) then begin	  	OutString(pos+=70,0,cash,false);	  end;	  if (card<>0) then begin	  	OutString(pos+=120,0,card,false);	  end;	  EndFormat;  	end;  end;     Black_Divider(0,1);  pos = 0;  StartFormat(15);  OutString(pos+=100,0,USetStr(20537),false);  if (cashtot<>0) then begin  	OutString(pos+=40,0,cashtot,false);  end;  if (cardtot<>0) then begin  	OutString(pos+=120,0,cardtot,false);  end;  EndFormat;    endjob;  LPOSPaymentsRn:;     RETURN;END;