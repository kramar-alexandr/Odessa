SetLangMode(LangRussian,"RUS",0);globalprocedure POSPaymentsRn(record RcVc RepSpec)BEGIN  record IVVc IVr;  row IVVc IVrw;  record LocalMachineBlock LMb;  integer pos,totpos;  boolean TrHs,testf;  date chkdate;  val cash,cashtot,cardCheban,cardChebantot,cardBahchevan,cardBahchevantot,giftcard,giftcardtot,grandtotal; //Cheban;  integer i,rwcnt;  string 15 locmach;  chkdate = RepSpec.RegDate;  if (BlankDate(chkdate)) then begin  	goto LPOSPaymentsRn;  end;  locmach = RepSpec.f1;    StartReportJob(USetStr(3250));    Header(3,USetStr(28206) & " " & chkdate,0);  EndHeader;    //BlockLoad(LMb);  pos = 0;  StartFormat(15);  OutString(pos,0,USetStr(4043),false); //IVr.SerNr  OutString(pos+=50,0,USetStr(12463),false); //IVr.TransDate  OutString(pos+=50,0,USetStr(6768),false); //cash  OutString(pos+=110,0,USetStr(31007) & " Чебан",false); //card  OutString(pos+=110,0,USetStr(31007) & " Бахчеван",false); //card  //OutString(pos+=110,0,"Подар.серт.",false); //certificate  EndFormat;  Black_Divider(0,1);  cashtot = 0;  cardChebantot = 0;  cardBahchevantot = 0;  giftcardtot = 0;  grandtotal = 0;  TrHs = true;  IVr.TransDate = chkdate;  while (LoopKey("TransDate",IVr,1,TrHs)) begin  	testf = true;  	if (IVr.TransDate>chkdate) then begin TrHs = false; testf = false; end;  	if (nonblank(locmach) and locmach!=IVr.MachineName) then begin testf = false; end;  	if (IVr.SalesGroup!="SALES") then begin testf = false; end;  	if (IVr.TransDate<chkdate) then begin testf = false; end;    if (testf) then begin      cash = 0;      cardCheban = 0;      cardBahchevan = 0;      giftcard = 0;      rwcnt = MatRowCnt(IVr);      for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(IVr,i,IVrw);      	switch (IVrw.stp) begin      		case kInvoiceRowTypeCashPayment:	  			  cash = cash + IVrw.Sum;	  			  cashtot = cashtot + IVrw.Sum;	  			  grandtotal = grandtotal + IVrw.Sum;  	  		case kInvoiceRowTypeCreditCardPayment:  	  		  switch (IVrw.PayMode) begin  	  		    case "B1":  		  		    cardCheban = cardCheban + IVrw.Sum;  		  		    cardChebantot = cardChebantot + IVrw.Sum;  		  		  case "B2":  		  		    cardBahchevan = cardBahchevan + IVrw.Sum;  		  		    cardBahchevantot = cardBahchevantot + IVrw.Sum;  		  		  case "GC":  		  		    /*giftcard = giftcard + IVrw.Sum;  		  		    giftcardtot = giftcardtot + IVrw.Sum;*/  		  		    cash = cash + IVrw.Sum;	  			      cashtot = cashtot + IVrw.Sum;  		  		end;  		  		grandtotal = grandtotal + IVrw.Sum;	  	  end;      end;       if (IVr.RetnValue<>0) then begin      	cash = cash - IVr.RetnValue;      	cashtot = cashtot - IVr.RetnValue;      	grandtotal = grandtotal - IVr.RetnValue;      end;      pos = 0;  	  StartFormat(15);    	  OutString(pos,0,IVr.SerNr,false);    	  OutString(pos+=50,0,IVr.TransDate,false);    	  if (cash<>0) then begin    	   OutString(pos+=50,0,cash,false);    	  end else begin    	   OutString(pos+=50,0,"",false);    	  end;    	  if (cardCheban<>0) then begin    	   OutString(pos+=110,0,cardCheban,false);    	  end else begin    	   OutString(pos+=110,0,"",false);    	  end;    	  if (cardBahchevan<>0) then begin    	   OutString(pos+=110,0,cardBahchevan,false);    	  end else begin    	   OutString(pos+=110,0,"",false);    	  end;    	  /*if (giftcard<>0) then begin    	   OutString(pos+=110,0,giftcard,false);    	  end else begin    	   OutString(pos+=110,0,"",false);    	  end;*/  	  EndFormat;  	end;  end;     Black_Divider(0,1);  pos = 0;  StartFormat(15);  OutString(pos+=60,0,USetStr(20537),false);  //if (cashtot<>0) then begin  	OutString(pos+=40,0,cashtot,false);  //end;  //if (cardChebantot<>0) then begin  	OutString(pos+=110,0,cardChebantot,false);  	totpos = pos + 70;  //end;  //if (cardBahchevantot<>0) then begin  	OutString(pos+=110,0,cardBahchevantot,false);  //end;  //if (giftcardtot<>0) then begin  	//OutString(pos+=110,0,giftcardtot,false);  //end;  EndFormat;  StartFormat(15);    OutString(totpos,0,USetStr(22137),false);    OutString(pos,0,grandtotal,false);  EndFormat;    endjob;  LPOSPaymentsRn:;     RETURN;END;