external function val AbsoluteVal(val);

global procedure ChechIHRnold(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemHistVc IHr;
	boolean TrHs,testf;
	val incost,inqty,diff,prevcost;
	boolean foundf;
	array val puin;
	integer acnt;
	
	startreportnoheaderjob("Check IH");
		
		INr.Code = "";
		While(loopmain(INr,1,true))begin
			resetloop(IHr);
			IHr.ArtCode = INr.Code;
			incost = blankval;
			inqty = blankval;
			TrHs = true;
			foundf = false;
			prevcost = blankval;
			while(loopkey("ArtCode",IHr,1,TrHs))begin
				testf = true;
			
				if(IHr.ArtCode!=INr.Code)then begin
					TrHs = false;
					testf = false;
				end;
				if(IHr.StockAffectf==0)then begin testf = false; end;
				//if(IHr.FileName!="PUVc")then begin testf = false; end;
					
				if(testf)then begin
					if(prevcost!=0 and IHr.TotCostPrice!=0)then begin
						if((AbsoluteVal(IHr.TotCostPrice/IHr.Qty)/prevcost)>1.9)then begin
							foundf = true;
						end;
						if(prevcost/(AbsoluteVal(IHr.TotCostPrice/IHr.Qty))>1.9)then begin
							foundf = true;
						end;
					end;
					prevcost = AbsoluteVal(IHr.TotCostPrice/IHr.Qty);
					
					
					if(IHr.FileName=="PUVc")then begin
						incost = incost + IHr.TotCostPrice;
						inqty = inqty + IHr.Qty;
					end;
					if(IHr.FileName=="RetVc")then begin
						incost = incost + IHr.TotCostPrice;
						inqty = inqty + IHr.Qty;
					end;
					if(IHr.FileName=="SDVc")then begin
						incost = incost - IHr.TotCostPrice;
						inqty = inqty + IHr.Qty;
					end;
					if(IHr.FileName=="IVVc")then begin
						if(IHr.Qty>0)then begin
							incost = incost + IHr.TotCostPrice;
							inqty = inqty + IHr.Qty;
						end else begin
							incost = incost - IHr.TotCostPrice;
							inqty = inqty + IHr.Qty;
						end;
					end;
					if(IHr.FileName=="SHVc")then begin
						incost = incost - IHr.TotCostPrice;
						inqty = inqty + IHr.Qty;
					end;
					if(IHr.FileName=="ProdVc")then begin
						if(IHr.Qty>0)then begin
							incost = incost + IHr.TotCostPrice;
							inqty = inqty + IHr.Qty;
						end else begin
							incost = incost - IHr.TotCostPrice;
							inqty = inqty + IHr.Qty;
						end;
					end;
					if(IHr.FileName=="SRVc")then begin
						if(IHr.Qty>0)then begin
							incost = incost + IHr.TotCostPrice;
							inqty = inqty + IHr.Qty;
						end else begin
							incost = incost - IHr.TotCostPrice;
							inqty = inqty + IHr.Qty;
						end;
					end;
					
				end;
			end;
			
			diff = AbsoluteVal(incost/inqty/INr.InPrice);
			if(diff>1.2 and foundf)then begin
				
				Startformat(15);
					OutString(0,"DblINVc",INr.Code,false);
					OutString(50,0,INr.InPrice,false);
					OutString(100,0,incost,false);
					OutString(150,0,inqty,false);
					OutString(200,0,incost/inqty,false);
					OutString(250,0,diff,false);
				endformat;
			
			end;
		end;
	
	
	endjob;

return;
end;

function val finddif(val v1, val v2)
begin
	val res;
	
		if(v1>v2)then begin
		 res = v1/v2;
		end else begin
			res = v2/v1;
		end;
	
	finddif = res;
return;
end;

global procedure ChechIHRn(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemHistVc IHr;
	boolean TrHs,testf;
	val incost,inqty,diff,prevcost,smc;
	boolean foundf,error;
	array val puin,smin;
	integer acnt,sacnt,i,j;
	
	startreportnoheaderjob("Check IH");
		
		//INr.Code = "5635234";
		While(loopmain(INr,1,true))begin
			resetloop(IHr);
			
			/*if(INr.Code!="5635234")then begin
				goto lend;
			end;*/
			
			acnt = 0;
			TrHs = true;
			IHr.ArtCode = INr.Code;
			while(loopkey("ArtCode",IHr,1,TrHs))begin
				testf = true;
			
				if(IHr.ArtCode!=INr.Code)then begin
					TrHs = false;
					testf = false;
				end;
				if(IHr.StockAffectf==0)then begin testf = false; end;
				//if(IHr.FileName!="PUVc")then begin testf = false; end;
					
				if(testf)then begin
					
					if(IHr.FileName=="PUVc")then begin
						puin[acnt] = IHr.TotCostPrice/IHr.Qty;
						acnt = acnt + 1;
						//logtext(0,"puin	" & IHr.TotCostPrice/IHr.Qty);
					end;
					if(IHr.FileName=="ProdVc")then begin
						puin[acnt] = IHr.TotCostPrice/IHr.Qty;
						acnt = acnt + 1;
						//logtext(0,"puin	" & IHr.TotCostPrice/IHr.Qty);
					end;
					if(IHr.FileName=="StockMovVc" and IHr.Qty<0)then begin
						smc = -IHr.TotCostPrice/IHr.Qty;
						//logtext(0,"smout	" & -IHr.TotCostPrice/IHr.Qty & " " & IHr.TransDate & " " & IHr.SerNr & " " & IHr.TransNr);
						error = true;
						for(i=0;i<acnt;i=i+1)begin
							if(finddif(smc,puin[i])<2)then begin
								error = false;
							end;
						end;
						if(error)then begin
							TrHs = false;
							Startformat(15);
								OutString(0,"DblINVc",INr.Code,false);
								OutString(50,0,INr.InPrice,false);
								OutString(100,0,-IHr.TotCostPrice/IHr.Qty,false);
							endformat;
							goto lerr;
						end;

					end;
				end;
			end;
lerr:;			
		end;
lend:;	
	
	endjob;

return;
end;




global updating procedure RecalcItemHistCost(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemHistVc IHr;
	boolean TrHs,testf;
	val incost,inqty,diff,prevcost;
	boolean foundf;
	
	
	startreportnoheaderjob("Check IH");
		if(nonblank(RepSpec.f1))then begin
			IHr.ArtCode = RepSpec.f1;
			incost = blankval;
			inqty = blankval;
			TrHs = true;
			foundf = false;
			prevcost = blankval;
			while(loopkey("ArtCode",IHr,1,TrHs))begin
				testf = true;
			
				if(IHr.ArtCode!=RepSpec.f1)then begin
					TrHs = false;
					testf = false;
				end;
				if(IHr.StockAffectf==0)then begin testf = false; end;
				
				
			end;
		
		
		end;
	endjob;
	
return;
end;