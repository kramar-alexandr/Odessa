external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);



global
procedure LocationsRn(record RcVc RepSpec)
begin
  record ItemStatusVc ISr;
  record INVc INr;
  record LocationVc Locr;
  vector Integer Locations;// positions of columns
  array string 20 LocCodes;
  string 20 curCode;
  Integer i,rw;
  real h,step;
  boolean TrHs,testf,testf0;
  real sum;
  Integer startPos,pos;
  string 15 keySort;
  string 40 class,a,b;
  Array string 40 groups;

	TrHs=true;

	if (RepSpec.ArtMode == 0) then begin	//сортировка
	keySort = "Code";
	end;
	if (RepSpec.ArtMode == 1) then begin
	keySort = "Name";
	end;


	i=0;
	while (LoopMain(Locr,1,TrHs)) begin
	LocCodes[i]=Locr.Code;
	i=i+1;
	end;

	rw=1;
	StartReportJob("Отчет по складам");
  	Header(rw,"Все склады",1);
  	rw = rw + 1;

	if (nonblank(RepSpec.f1)) then begin
  		Header(rw,"Классификация товара: " & RepSpec.f1,1);
  		rw = rw + 1;	
	end;

	if (keysort=="Code") then begin
	Header(rw,"Сортировка по  коду товара",1);
	end;
	if (keysort=="Name") then begin
	Header(rw,"Сортировка по  названию товара",1);
	end;	

	EndHeader;

	StartFormat(15);
	OutString(0,0,"Код товара",false);
	OutString(30,0,"Наименование",false);
	step=380/LocCodes.length;
	startPos = 90;

	for(i=0; i < LocCodes.length; i=i+1) begin
		Locr.Code = LocCodes[i];
		if (ReadFirstMain(Locr,1,true)) then begin
			OutString(startPos+step*i,0,Locr.Name,false);	
		end;	
		Locations[LocCodes[i]]=startPos+step*i;
	end;

	OutString(460,0,"Всего",false);
	Locations[";;;"]=460;//Total sum

	EndFormat;
	Black_Divider(0,1);

	TrHs=true;

	
	While(LoopKey(keySort,INr,1,TrHs)) begin
		testf0 = true;

		if (nonblank(RepSpec.f1) and (SetInSet(RepSpec.f1,INr.DispGroups) == false)) then begin
		testf0 = false;
		end;

		if(testf0) then begin

			curCode = INr.Code;
			ISr.Code = INr.Code;
			OutString(0,0,INr.Code,false);
			OutString(30,0,INr.Name,false);


			While(LoopMain(ISr,1,TrHs)) begin					
				if(curCode==ISr.Code) then begin 
					testf=true; 
				end else begin 
					TrHs=false;
					testf=false;
				end;
	     	
				if (ISr.Location == ";;;") then begin
				sum = ISr.Instock;
				testf=false;
				end;
	     	
				if(testf) then begin
					OutString(Locations[ISr.Location],0,Isr.Instock,false);	
				end;	
			end;
					
			OutString(Locations[";;;"],0,sum,false);	//Output sum of items
			EndFormat;
			ResetLoop(ISr);
			TrHs=true;
			sum=0;

		end;			
	end;
	
	EndJob;



return;
end;



global updating procedure PricesRepRn(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemStatusVc ISr;
	integer qty;
	record PLVc PLr;
	
	StartReportNoHeaderJob("Отчет по ценам");
	
	StartFormat(15);
		OutString(0,0,"Код товара",false);
		OutString(70,0,"Наименование",false);
		OutString(160,0,"Цена Опт",false);
		OutString(200,0,"Цена Розн.",false);
		OutString(240,0,"На скл.",false);
		OutString(280,0,"Группа",false);
		OutString(350,0,"В ящ.",false);	
		OutString(390,0,"В упак.",false);
	EndFormat;
	
	while(loopmain(INr,1,true))begin
		
		ISr.Code = INr.Code;
		if(nonblank(RepSpec.f1))then begin
			ISr.Location = RepSpec.f1;
		end else begin
			ISr.Location = ";;;";
		end;
		qty = 0;
		if(readfirstmain(ISr,2,true))then begin
			qty = ISr.Instock;
		end;
		
		StartFormat(15);
			OutString(0,0,INr.Code,false);
			OutString(70,0,INr.Name,false);
			PLr.ArtCode = INr.Code;
			PLr.PLCode = "OPT";
			readfirstmain(PLr,2,true);
			OutString(160,0,PLr.ExVatPrice,false);
			PLr.ArtCode = INr.Code;
			PLr.PLCode = "RRP";
			readfirstmain(PLr,2,true);
			OutString(200,0,PLr.ExVatPrice,false);
			OutString(240,0,qty,false);
			OutString(280,0,INr.Group,false);
			OutString(350,0,INr.AddUnitCoef2,false);	//Edit by Victor 30.01.15
			OutString(390,0,INr.AddUnitCoef3,false);	//Edit by Victor 30.01.15
		EndFormat;
		
	
	end;
	endjob;
return;
end;