external procedure ExtractObj(string,var Integer,var string);
forward procedure CollectPORowsForTransit(var record POVc);

SetLangMode(LangRussian,"RUS",0);



global
procedure LocationsRn(record RcVc RepSpec)	//Edit-------------------------Dima 04.12.2014
begin
  record ItemStatusVc ISr;
  record INVc INr;
  record LocationVc Locr;
  vector Integer Locations;// positions of columns
  array string 20 LocCodes;
  string 20 curCode;
  Integer i,rw,j;
  real h,step;
  boolean TrHs,testf,testf0,found;
  Integer startPos,pos;
  string 15 keySort;  
  record POVc PO2r;
  row POVc PO2rw;
  integer rwcnt;
  val inTransit;
  
  RecordNew(PO2r);
  CollectPORowsForTransit(PO2r);
	rwcnt = MatRowCnt(PO2r);
	
	TrHs=true;
	inTransit = BlankVal;

	if (RepSpec.ArtMode == 0) then begin	//сортировка
	keySort = "Code";
	end;
	if (RepSpec.ArtMode == 1) then begin
	keySort = "Name";
	end;


	i=0;
	while (LoopMain(Locr,1,TrHs)) begin
	LocCodes[i]=Locr.Code;		
	i=i+1;
	end;
	LocCodes[i]=";;;";
	
	rw=1;
	StartReportJob("Отчет по складам");
  	Header(rw,"Все склады",1);
  	rw = rw + 1;

	if (nonblank(RepSpec.f1)) then begin
  		Header(rw,"Классификация товара: " & RepSpec.f1,1);
  		rw = rw + 1;	
	end;

	if (keysort=="Code") then begin
	Header(rw,"Сортировка по  коду товара",1);
	end;
	if (keysort=="Name") then begin
	Header(rw,"Сортировка по  названию товара",1);
	end;	

	EndHeader;

	StartFormat(15);
	OutString(0,0,"Код товара",false);
	OutString(30,0,"Наименование",false);
	step=380/LocCodes.length;
	startPos = 90;

	for(i=0; i < LocCodes.length; i=i+1) begin
		Locr.Code = LocCodes[i];
		if (ReadFirstMain(Locr,1,true)) then begin
			OutString(startPos+step*i,0,Locr.Name,false);	
		end;	
		Locations[LocCodes[i]]=startPos+step*i;
	end;

	OutString(480,0,"Всего на складах",true);
	Locations[";;;"]=460;//Total sum

	EndFormat;
	Black_Divider(0,1);

	TrHs=true;

	
	While(LoopKey(keySort,INr,1,TrHs)) begin
		testf0 = true;

		if (nonblank(RepSpec.f1) and (SetInSet(RepSpec.f1,INr.DispGroups) == false)) then begin
		testf0 = false;
		end;

		if(testf0) then begin

			curCode = INr.Code;
			ISr.Code = INr.Code;
			OutString(0,0,INr.Code,false);
			OutString(30,0,INr.Name,false);


			for(i=0; i < LocCodes.length; i=i+1) begin
				ISr.Location = LocCodes[i];
				ISr.Code = INr.Code;				
				
				if (LocCodes[i]=="TRANSIT") then begin
									found = false;							 		
  								for (j=0;j<rwcnt;j=j+1) begin
  									MatRowGet(PO2r,j,PO2rw);
  									if (PO2rw.ArtCode==INr.Code) then begin	
  										inTransit = PO2rw.Shipd1;
  										OutString(Locations["TRANSIT"],0,inTransit,false);
  										found = true;
  										inTransit = blankval; 								
  									end;
  								end;
  								if (found==false) then begin	
				  						OutString(Locations["TRANSIT"],0,"",false);
  								end;						
				end else begin
  		
								if (ReadFirstMain(ISr,2,true)) then begin	
									OutString(Locations[ISr.Location],0,ISr.Instock,false);	
								end else begin
									OutString(Locations[LocCodes[i]],0,"",false);
								end;
				
				end;
			end;
					
			EndFormat;

		end;			
	end;

	
	EndJob;

return;
end;



procedure PricesRepRnHeader(record RcVc RepSpec)	//Edit----------------------Dima  06.02.2015
begin
		string 50 tstr;

  	StartFormat(15);
		if (nonblank(RepSpec.f1)) then begin
				tstr = RepSpec.f1;
		end else begin
				tstr = "ВСЕ";
		end;
		OutString(15,0,"Склад: " & tstr,false);
		EndFormat;

		if (nonblank(RepSpec.f2)) then begin
				tstr = RepSpec.f2;
		end else begin
				tstr = "ВСЕ";
		end;
		OutString(15,0,"Товары: " & tstr,false);
		EndFormat;

		if (nonblank(RepSpec.f3)) then begin
				tstr = RepSpec.f3;
		end else begin
				tstr = "ВСЕ";
		end;
		OutString(15,0,"Классификация: " & tstr,false);
		EndFormat;

		Gray_Divider(0,1);
		EndFormat;
end;



global updating procedure PricesRepRn(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemStatusVc ISr;
	integer qty;
	record PLVc PLr;
	record PLDefVc PLDr;
	array string 20 PLCode;
	integer k,i,pos,step;
	string 20 frin,toin;
	boolean testf,TrHs;
	
	StartReportNoHeaderJob("Отчет по ценам");
	PricesRepRnHeader(RepSpec);  //Edit----------------------Dima  06.02.2015		

	PLDr.Code = "";
	k=0;
	while(loopmain(PLDr,1,true))begin
		PLCode[k] = PLDr.Code;
		k=k+1;
	end;
	
	step = (350-160)/PLCode.length;	//Edit-----------------Dima 06.02.2015
	pos = 160;

  frin = FirstInRange(RepSpec.f2,20);
  toin = LastInRange(RepSpec.f2,20);

	StartFormat(15);
		OutString(0,0,"Код товара",false);
		OutString(50,0,"Наименование",false);
		OutString(120,0,"Себестоимость",false);		
		For(i=0;i<k;i=i+1) begin
	  	OutString(pos,0,PLCode[i],false);
	  	pos = pos + step;
		end; 
		OutString(350,0,"На скл.",false);
		OutString(380,0,"Группа",false);
		OutString(420,0,"В ящ.",false);	
		OutString(450,0,"В упак.",false);
	EndFormat;
	


	TrHs = true;
	if (nonblank(frin)) then begin
			INr.Code = frin;
	end;
	
	while(loopmain(INr,1,TrHs))begin
		testf = true;
		
		if (nonblank(toin)) then begin
			if (INr.Code>toin) then begin
				 TrHs = false; 						//Edit----------------------Dima  06.02.2015
				 testf = false;
			end;
		end;

		if (nonblank(RepSpec.f3) and (SetInSet(RepSpec.f3,INr.DispGroups) == false)) then begin
				testf = false;						//Edit----------------------Dima  06.02.2015
		end;
			
		if(testf)  then begin

				ISr.Code = INr.Code;
				if(nonblank(RepSpec.f1))then begin
					ISr.Location = RepSpec.f1;
				end else begin
					ISr.Location = ";;;";
				end;
				qty = 0;
				if(readfirstmain(ISr,2,true))then begin
					qty = ISr.Instock;
				end;
				
				StartFormat(15);
					OutString(0,0,INr.Code,false);
					OutString(50,0,INr.Name,false);
					OutVal(120,0,INr.InPrice,M4Val,false);
					pos = 160;
					For(i=0;i<k;i=i+1) begin
						PLr.ArtCode = INr.Code;
						PLr.PLCode = PLCode[i];
						readfirstmain(PLr,2,true);
						OutVal(pos,0,PLr.ExVatPrice,M4Val,false);
						pos = pos + step;
					end; 
					OutString(350,0,qty,false);
					OutString(380,0,INr.Group,false);
					OutString(420,0,INr.AddUnitCoef2,false);	//Edit by Victor 30.01.15
					OutString(450,0,INr.AddUnitCoef3,false);	//Edit by Victor 30.01.15
				EndFormat;
		end;
	
	end;	
	endjob;
		
return;
end;




global
procedure CollectPORowsForTransit(var record POVc PO2r) //Edit----------------------Dima  19.03.2015
BEGIN 
  integer i,j,rwcnt,rwcnt2,existsItem,k;
  Boolean TrHs,testf;
  record POVc POr;
  row POVc POrw,PO2rw;
  
  k=0;
	POr.ActOkFlag = 1;
	TrHs = true;
	while (LoopKey("ActOkFlag",POr,1,TrHs)) begin	
		testf = true;
				
		if (POr.ActOkFlag==0) then begin TrHs = false; testf = false; end;
		if (POr.OKFlag==0) then begin testf=false; end;
		
		if (testf) then begin
					rwcnt = MatRowCnt(POr);
					for (i=0;i<rwcnt;i=i+1) begin
						MatRowGet(POr,i,POrw);
						if(nonblank(POrw.ArtCode) and POrw.stp==kInvoiceRowTypeNormal)then begin
								rwcnt2 = MatRowCnt(PO2r);							
								existsItem = 0;
								if (rwcnt2>0) then begin
									for (j=0;j<rwcnt2;j=j+1) begin
										MatRowGet(PO2r,j,PO2rw);
										if (PO2rw.ArtCode==POrw.ArtCode) then begin	
												PO2rw.Quant = PO2rw.Quant + POrw.Quant;
												PO2rw.Shipd1 = PO2rw.Shipd1 + (POrw.Quant - POrw.Shipd2);																								
												MatRowPut(PO2r,j,PO2rw);
												existsItem = 1;										
										end;
									end;
								end;
								if (existsItem==0) then begin
										clearrow(PO2r,PO2rw,1);									
										PO2rw.ArtCode = POrw.ArtCode;
										PO2rw.Quant = POrw.Quant;
										PO2rw.Shipd1 = POrw.Quant - POrw.Shipd2;
										MatRowPut(PO2r,k,PO2rw);
										k=k+1;
								end;		

						end;							
					end; 
		end;
	end;
	
return;
end;