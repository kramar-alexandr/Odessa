external procedure SumBalRnVectors(string,LongInt,Boolean,vector val,vector val,vector val,vector val,vector val,vector val,vector Boolean,Array record UserDefRepLinesVc,Integer);
external procedure ListPerTrans(record RcVc);
external function roundmode SetRoundModeD(Integer);
external procedure FindAccSD(Date,var Date,var Boolean);
external function val AbsoluteVal(val);
external function roundmode DefaultRoundMode();
external procedure FindRepDefHeader(string,string,var string);
external function Boolean GetNextSep(string,var Integer,var string);
external procedure AGrHeader(record RcVc,Boolean,Boolean,Date);
external procedure SumListPerBal(string,Integer,var Array val,var Array val,var Array val,
                                 var Array val,var Array val,var Array val,Integer,var Array LongInt,Boolean);
external procedure AGrSumLine(record RcVc,Integer,string,string,string,
                              val,val,val,val,val,val,Boolean,val,Boolean,Boolean,string,LongInt,Boolean,Boolean);
external procedure GetUserDefRepDescription(record UserDefRepLinesVc,string,var string);
external procedure Get2WholePeriods(record RcVc,Date,Date,var string,var string);
external procedure GetNotStr(Integer,var string);
external procedure GetNext2Sep(string,var Integer,var string);
external procedure GetNextToken(string,var Integer,var string);
external function Boolean GetNextTokenReturn(string,var Integer,var string);
external procedure GetAccountDescription2(string,string,var string);
external procedure SumLine2(record RcVc,Boolean,string,string,string,var val,var val,var val,var val,var val,
                            var val,Boolean,val,Boolean,Date,Integer,LongInt,Boolean);
external function Boolean AccRuPerBal(record RcVc,Boolean,string,string,var val,var val,var val,var val,var val,var val,
                                      Integer,Boolean,Date,Date,Date);
external function Boolean AccObjTypePerBal(record RcVc,Boolean,string,string,var val,var val,var val,var val,var val,var val,
                                      Integer,Boolean,Date,Date,Date);
external procedure InitValArray(Integer,var Array val);
external procedure InitLongArray(Integer,var Array LongInt);

SetLangMode(LangRussian,"RUS",0);	

global
procedure ItHistProdRn(record RcVc RepSpec) 		
begin
	record ItemHistVc ItemHistr;
	boolean TrHs, testf, testf2, rc, rc2;
	real v, vs;
	record SHVc SHr;
	record IVVc IVr;
	array string 255 DepStr;
	array Val CostStr, TotAllCostStr, QtyStr;
	Val TotCostStr1, CurQty, TotCostStr2, TotQty, AllTotalCostEstm, AllTotalCostIH, x1, x2, x3, Diff;
	integer i, j, y, aQty, CalcCostDiff, DiffSumm;
	vector Val MovVcCorr, CostStockH, SumIV, SumSH;
	
	StartReportNoHeaderJob("Отчет по истории товара");
	
	Diff = 0.5;
	AllTotalCostEstm = 0;
	AllTotalCostIH = 0;
	v = 11;
	vs = 40;
	StartFormat(15);
		OutString(v,0,"Дата",false);
		OutString(v=v+vs,0,"Стоим. єд. расч.",false);
		OutString(v=v+vs,0,"Стоим. єд. факт.",false);
		OutString(v=v+vs,0,"Разница за ед.",false);
		OutString(v=v+vs,0,"Количество",false);
		OutString(v=v+vs,0,"Расчетн. сумма",false);
		OutString(v=v+vs,0,"Факт. сумма",false);
		OutString(v=v+vs,0,"Разница",false);
		OutString(v=v+vs,0,"№_док.",false);
		OutString(v=v+vs,0,"Регистр",false);
		OutString(v=v+vs,0,"Действие",false);
		OutString(v=v+vs,0,"Склад",false);
	EndFormat;
	Gray_Divider(0,1);
	ItemHistr.ArtCode = RepSpec.f1;
	i = 0;
	j = 0;
	TrHs = true;
	CurQty = 0;
	while(loopkey("ArtCodeFD",ItemHistr,1,TrHs)) begin
		testf = true;
		if(nonblank(RepSpec.f1) and ItemHistr.ArtCode!=RepSpec.f1)then begin TrHs = false; testf = false; end;
		if(nonblank(RepSpec.f2) and ItemHistr.Location!=RepSpec.f2)then begin testf = false; end;
		if(ItemHistr.StockAffectf==0)then begin testf = false; end;
		if(testf)then begin
			v = 11;
			StartFormat(15);
				if(ItemHistr.Qty>0)then begin
					if(ItemHistr.FileName=="StockMovVc" and MovVcCorr[ItemHistr.TransNr & ";" & ItemHistr.Row]!=BlankVal)then begin
						TotCostStr1 = MovVcCorr[ItemHistr.TransNr & ";" & ItemHistr.Row];
						QtyStr[i] = ItemHistr.Qty;
						TotAllCostStr[i] = TotCostStr1 * QtyStr[i];
					end else begin
						TotCostStr1 = ItemHistr.TotCostPrice / ItemHistr.Qty;
						QtyStr[i] = ItemHistr.Qty;
						TotAllCostStr[i] = ItemHistr.TotCostPrice;
					end;
					CostStockH[ItemHistr.Location & ";" & i] = TotCostStr1;
					AllTotalCostEstm = AllTotalCostEstm + TotAllCostStr[i];
					AllTotalCostIH = AllTotalCostIH + ItemHistr.TotCostPrice;
					OutString(v,0,ItemHistr.FIFODate,false);
					OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & i],false);
					OutString(v=v+vs,0,ItemHistr.TotCostPrice/ItemHistr.Qty,false);
					OutString(v=v+vs,0,ItemHistr.TotCostPrice/ItemHistr.Qty-CostStockH[ItemHistr.Location & ";" & i],false);
					OutString(v=v+vs,0,QtyStr[i],false);
					OutString(v=v+vs,0,TotAllCostStr[i],false);
					OutString(v=v+vs,0,ItemHistr.TotCostPrice,false);
					OutString(v=v+vs,0,ItemHistr.TotCostPrice-TotAllCostStr[i],false);
					OutString(v=v+vs,0,ItemHistr.TransNr,false);
					OutString(v=v+vs,0,ItemHistr.FileName,false);
					x1 = Round(CostStockH[ItemHistr.Location & ";" & i],SetRoundModeD(2));
					x2 = Round(ItemHistr.TotCostPrice/ItemHistr.Qty,SetRoundModeD(2));
					x3 = AbsoluteVal(x1-x2);
					if(x3 > Diff)then begin
						OutString(v=v+vs,0,"Будет изменено",false);
						OutString(v=v+vs,0,ItemHistr.Location,false);
					end else begin
						OutString(v=v+vs*2,0,ItemHistr.Location,false);
					end;
					i = i+1;
				end;
				TotQty = 0;
				/*for(y=0;y<=i;y=y+1)begin
					TotQty = TotQty + QtyStr[y];
				end;*/
				if(ItemHistr.Qty<0)then begin
					for(j=0;j<=i;j=j+1) begin
						if((QtyStr[j] + ItemHistr.Qty)>=0 and CostStockH[ItemHistr.Location & ";" & j]!=BlankVal)then begin
							QtyStr[j] = QtyStr[j] + ItemHistr.Qty;
							AllTotalCostEstm = AllTotalCostEstm - CostStockH[ItemHistr.Location & ";" & j]*-ItemHistr.Qty;
							AllTotalCostIH = AllTotalCostIH - ItemHistr.TotCostPrice;
							OutString(v,0,ItemHistr.FIFODate,false);
							OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & j],false);
							OutString(v=v+vs,0,ItemHistr.TotCostPrice/-ItemHistr.Qty,false);
							OutString(v=v+vs,0,ItemHistr.TotCostPrice/-ItemHistr.Qty-CostStockH[ItemHistr.Location & ";" & j],false);
							OutString(v=v+vs,0,ItemHistr.Qty,false);
							OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & j]*-ItemHistr.Qty,false);
							OutString(v=v+vs,0,ItemHistr.TotCostPrice,false);
							OutString(v=v+vs,0,ItemHistr.TotCostPrice-CostStockH[ItemHistr.Location & ";" & j]*-ItemHistr.Qty,false);
							OutString(v=v+vs,0,ItemHistr.TransNr,false);
							OutString(v=v+vs,0,ItemHistr.FileName,false);
							x1 = Round(CostStockH[ItemHistr.Location & ";" & i],SetRoundModeD(2));
							x2 = Round(ItemHistr.TotCostPrice/-ItemHistr.Qty,SetRoundModeD(2));
							x3 = AbsoluteVal(x1-x2);
							if(ItemHistr.FileName=="StockMovVc" and CostStockH[ItemHistr.Location & ";" & j]!=ItemHistr.TotCostPrice/-ItemHistr.Qty)then begin
								MovVcCorr[ItemHistr.TransNr & ";" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j];
							end;
							if(x3 > Diff)then begin
								OutString(v=v+vs,0,"Будет изменено",false);
								OutString(v=v+vs,0,ItemHistr.Location,false);
								if(ItemHistr.FileName=="IVVc")then begin
									SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j]*-ItemHistr.Qty;
									IVr.SerNr = ItemHistr.TransNr;
									if(ReadFirstmain(IVr,1,true))then begin
										LogText(0,"IVVc" & " > " & IVr.SerNr & " > " & ItemHistr.Row & " > " & -ItemHistr.Qty & " > " & SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row]);
									end;
								end;
								if(ItemHistr.FileName=="SHVc")then begin
									SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j]*-ItemHistr.Qty;
									SHr.SerNr = ItemHistr.TransNr;
									if(ReadFirstmain(SHr,1,true))then begin
										LogText(0,"SHVc" & " > " & SHr.SerNr & " > " & ItemHistr.Row & " > " & -ItemHistr.Qty & " > " & SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row]);
									end;
								end;
							end else begin
								OutString(v=v+vs*2,0,ItemHistr.Location,false);
							end;
							OutString(v=v+vs,0,ItemHistr.Location,false);
							j = i + 1;
						end else begin
							CurQty = ItemHistr.Qty;
							TotCostStr2 = 0;
							y = 0;
							DiffSumm = 0;
							testf2 = false;
							for(j=j;j<=i;j=j+1)begin
								v = 11;
								if(QtyStr[j]!=0 and CostStockH[ItemHistr.Location & ";" & j]!=BlankVal)then begin
									if(QtyStr[j]<-CurQty)then begin
										CurQty = CurQty + QtyStr[j];
										TotCostStr2 = TotCostStr2 + CostStockH[ItemHistr.Location & ";" & j] * QtyStr[j];
										OutString(v,0,ItemHistr.FIFODate,false);
										OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & j],false);
										OutString(v=v+vs,0,ItemHistr.TotCostPrice/-ItemHistr.Qty,false);
										OutString(v=v+vs,0,ItemHistr.TotCostPrice/-ItemHistr.Qty-CostStockH[ItemHistr.Location & ";" & j],false);
										OutString(v=v+vs,0,-QtyStr[j],false);
										OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & j]*-QtyStr[j],false);
										OutString(v=v+vs-20,0,"+",false);
										CalcCostDiff = (ItemHistr.TotCostPrice/-ItemHistr.Qty+CostStockH[ItemHistr.Location & ";" & j])/2;
										if(ItemHistr.FileName=="StockMovVc" and CostStockH[ItemHistr.Location & ";" & j]!=ItemHistr.TotCostPrice/-ItemHistr.Qty)then begin
											MovVcCorr[ItemHistr.TransNr & ";" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j];
										end;
										x1 = Round(CostStockH[ItemHistr.Location & ";" & j],SetRoundModeD(2));
										x2 = Round(ItemHistr.TotCostPrice/-ItemHistr.Qty,SetRoundModeD(2));
										x3 = AbsoluteVal(x1-x2);
										if(x3 > Diff)then begin
											OutString(v=v+vs,0,"Будет изменено",false);
											OutString(v=v+vs,0,ItemHistr.Location,false);
											testf2 = true;
										end else begin
											OutString(v=v+vs*2,0,ItemHistr.Location,false);
										end;
										OutString(v=v+vs,0,ItemHistr.Location,false);
										QtyStr[j] = 0;
										y = y + 1;
									end else begin
										QtyStr[j] = QtyStr[j] + CurQty;
										TotCostStr2 = TotCostStr2 + CostStockH[ItemHistr.Location & ";" & j] * -CurQty;
										AllTotalCostEstm = AllTotalCostEstm - TotCostStr2;
										AllTotalCostIH = AllTotalCostIH - ItemHistr.TotCostPrice;
										OutString(v,0,ItemHistr.FIFODate,false);
										OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & j],false);
										OutString(v=v+vs,0,ItemHistr.TotCostPrice/-ItemHistr.Qty,false);
										OutString(v=v+vs,0,ItemHistr.TotCostPrice/-ItemHistr.Qty-CostStockH[ItemHistr.Location & ";" & j],false);
										OutString(v=v+vs,0,CurQty,false);
										OutString(v=v+vs,0,CostStockH[ItemHistr.Location & ";" & j]*-CurQty,false);
										if(y>0)then begin
											OutString(v,0,TotCostStr2,false);
											OutString(v=v+vs,0,ItemHistr.TotCostPrice,false);
											OutString(v=v+vs,0,ItemHistr.TotCostPrice-TotCostStr2,false);
											OutString(v=v+vs,0,ItemHistr.TransNr,false);
											OutString(v=v+vs,0,ItemHistr.FileName,false);
											if(ItemHistr.FileName=="StockMovVc" and CostStockH[ItemHistr.Location & ";" & j]!=ItemHistr.TotCostPrice/-ItemHistr.Qty)then begin
												MovVcCorr[ItemHistr.TransNr & ";" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j];
											end;
											x1 = Round(CostStockH[ItemHistr.Location & ";" & j],SetRoundModeD(2));
											x2 = Round(ItemHistr.TotCostPrice/-ItemHistr.Qty,SetRoundModeD(2));
											x3 = AbsoluteVal(x1-x2);
											if(x3 > Diff)then begin
												OutString(v=v+vs,0,"Будет изменено",false);
												OutString(v=v+vs,0,ItemHistr.Location,false);
												if(ItemHistr.FileName=="IVVc")then begin
													SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row] = TotCostStr2;
													IVr.SerNr = ItemHistr.TransNr;
													if(ReadFirstmain(IVr,1,true))then begin
														LogText(0,"IVVc" & " > " & IVr.SerNr & " > " & ItemHistr.Row & " > " & -ItemHistr.Qty & " > " & SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row]);
													end;
												end;
												if(ItemHistr.FileName=="SHVc")then begin
													SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row] = TotCostStr2;
													SHr.SerNr = ItemHistr.TransNr;
													if(ReadFirstmain(SHr,1,true))then begin
														LogText(0,"SHVc" & " > " & SHr.SerNr & " > " & ItemHistr.Row & " > " & -ItemHistr.Qty & " > " & SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row]);
													end;
												end;
												testf2 = false;
											end;
											if(testf2==true)then begin
												OutString(v=v+vs,0,"Будет изменено",false);
												OutString(v=v+vs,0,ItemHistr.Location,false);
												if(ItemHistr.FileName=="IVVc")then begin
													SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row] = TotCostStr2;
													IVr.SerNr = ItemHistr.TransNr;
													if(ReadFirstmain(IVr,1,true))then begin
														LogText(0,"IVVc" & " > " & IVr.SerNr & " > " & ItemHistr.Row & " > " & -ItemHistr.Qty & " > " & SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row]);
													end;
												end;
												if(ItemHistr.FileName=="SHVc")then begin
													SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row] = TotCostStr2;
													SHr.SerNr = ItemHistr.TransNr;
													if(ReadFirstmain(SHr,1,true))then begin
														LogText(0,"SHVc" & " > " & SHr.SerNr & " > " & ItemHistr.Row & " > " & -ItemHistr.Qty & " > " & SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row]);
													end;
												end;
												testf2 = false;
											end else begin
												OutString(v=v+vs*2,0,ItemHistr.Location,false);
											end;
											OutString(v=v+vs,0,ItemHistr.Location,false);
										end else begin
											OutString(v=v+vs,0,ItemHistr.TotCostPrice,false);
											OutString(v=v+vs,0,ItemHistr.TotCostPrice-CostStockH[ItemHistr.Location & ";" & j]*-CurQty,false);
											OutString(v=v+vs,0,ItemHistr.TransNr,false);
											OutString(v=v+vs,0,ItemHistr.FileName,false);
											if(ItemHistr.FileName=="StockMovVc" and CostStockH[ItemHistr.Location & ";" & j]!=ItemHistr.TotCostPrice/-ItemHistr.Qty)then begin
												MovVcCorr[ItemHistr.TransNr & ";" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j];
											end;
											x1 = Round(CostStockH[ItemHistr.Location & ";" & j],SetRoundModeD(2));
											x2 = Round(ItemHistr.TotCostPrice/-ItemHistr.Qty,SetRoundModeD(2));
											x3 = AbsoluteVal(x1-x2);
											if(x3 > Diff)then begin
												OutString(v=v+vs,0,"Будет изменено",false);
												OutString(v=v+vs,0,ItemHistr.Location,false);
												if(ItemHistr.FileName=="IVVc")then begin
													SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j]*-CurQty;
													IVr.SerNr = ItemHistr.TransNr;
													if(ReadFirstmain(IVr,1,true))then begin
														LogText(0,"IVVc" & " > " & IVr.SerNr & " > " & ItemHistr.Row & " > " & -CurQty & " > " & SumIV[ItemHistr.TransNr & ":" & ItemHistr.Row]);
													end;
												end;
												if(ItemHistr.FileName=="SHVc")then begin
													SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row] = CostStockH[ItemHistr.Location & ";" & j]*-CurQty;
													SHr.SerNr = ItemHistr.TransNr;
													if(ReadFirstmain(SHr,1,true))then begin
														LogText(0,"SHVc" & " > " & SHr.SerNr & " > " & ItemHistr.Row & " > " & -CurQty & " > " & SumSH[ItemHistr.TransNr & ":" & ItemHistr.Row]);
													end;
												end;
												testf2 = true;
											end else begin
												OutString(v=v+vs*2,0,ItemHistr.Location,false);
											end;
										end;
										CurQty = 0;
										j = i + 1;
									end;
								end;
							end;
							
						end;
					end;
				end;
			EndFormat;
		end;
	end;
	ResetLoop(ItemHistr);
	v = 171;
	StartFormat(15);
		OutString(v,0,"Расчетн. сумма",false);
		OutString(v+vs*2,0,"Факт. сумма",false);
		OutString(v,0,AllTotalCostEstm,false);
		OutString(v+vs*2,0,AllTotalCostIH,false);
	EndFormat;
	
	testf = true;
	TrHs = true;
	ItemHistr.ArtCode = RepSpec.f1;
	/*while(loopkey("ArtCode",ItemHistr,1,TrHs)) begin
	v = 11;
	vs = 50;
		if(nonblank(RepSpec.f1) and ItemHistr.ArtCode!=RepSpec.f1)then begin TrHs = false; testf = false; end;
		if (testf) then begin
			StartFormat(15);
				outstring(v,0,ItemHistr.ArtCode,false);
				outstring(v=v+vs,0,ItemHistr.FileName,false);
				outstring(v=v+vs,0,ItemHistr.Qty,false);
				outstring(v=v+vs,0,ItemHistr.TransDate,false);
				outstring(v=v+vs,0,ItemHistr.SerNr,false);
				outstring(v=v+vs,0,ItemHistr.Source,false);
				outstring(v=v+vs,0,ItemHistr.TotCostPrice,false);
				outstring(v=v+vs,0,ItemHistr.Location,false);
			EndFormat;
		end;
	end;*/
	ResetLoop(ItemHistr);
	endjob;
end;