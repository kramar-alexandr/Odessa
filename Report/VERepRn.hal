external procedure LookupInHist(string, Date, Date, string,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var vector val,var vector val);
external function Boolean SetInSet2(string,string);
remote procedure CollectOrderRows(var record ORVc,Date,Date,string);
remote procedure CollectPORows(var record POVc,Date,Date,string);
remote procedure GetISStatus(string,var val,var val,var val,string);
external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);



global procedure ItemPUOrderReportRn(record RcVc RepSpec)
begin
	string 200 artcode,dispgroups,vecode;
	record POVc POr;
	row POVc POrw;
	record ItemStatusVc ISr;
	longint ordered,toorder;
	integer mtrw,i,showall,pos;
	boolean TrHs,TrHs1,testf,testf1;
	record INVc INr;
	
	artcode = RepSpec.f1;
	vecode = RepSpec.f2;
	dispgroups = RepSpec.f3;
	showall = RepSpec.flags[0];
	
	startreportnoheaderjob("Отчет о заказанных товарах");

		startformat(15);
			pos = 20;
			OutString(pos,0,"Код",false); 
   		OutString(pos+=30,0,"Наименование",false);
   		OutString(pos+=100,0,"Заказ поставщику",false);
   		OutString(pos+=30,0,"Дата",false);
   		//OutString(pos+=50,0,"Заплани. отгрузка",false);
   		OutString(pos+=30,0,"Поставщик",false);
   		OutString(pos+=30,0,"Наименование",false);
   		OutString(pos+=50,0,"Долг",false);
   		OutString(pos+=20,0,"Цена",false);
   		//OutString(pos+=20,0,"Сумма",false);
   		OutString(pos+=20,0,"Валюта",false);
   		OutString(pos+=20,0,"Статус заказа",false);
   		OutString(pos+=30,0,"Комментарий",false);
		endformat;
		
		INr.Code = artcode;
		TrHs1 = true;
		while(loopmain(INr,1,TrHs1))begin
			testf1 = true;
			if(nonblank(artcode) and INr.Code!=artcode)then begin testf1 = false; TrHs1 = false; end;
			if(nonblank(dispgroups) and !setinset(dispgroups,INr.Code))then begin testf1 = false; end;
			
			if(testf1)then begin
				ISr.Code = artcode;
				ISr.Location = ";;;";
				ordered = 0;
				toorder = 0;
				if(readfirstmain(ISr,2,true))then begin
					if(true/*ISr.POUnOKQty>0 or (showall==1 and ISr.POUnOKQty>0)*/)then begin
						toorder = ISr.POUnOKQty;
						/*if(showall==0)then begin
							toorder = ISr.POQty;
						end else begin
							toorder = ISr.POUnOKQty;
						end;*/
						//POr.SerNr = 9999999;
						TrHs = true;
						resetloop(POr);
						while(LoopKey("SerNr",POr,1,TrHs))begin
							testf = true;
							if(nonblank(vecode) and POr.VECode!=vecode)then begin testf = false; end;
							
							if(testf)then begin
								if(TrHs and POr.Closed==0)then begin
									mtrw = matrowcnt(POr);
									For(i=0;i<mtrw;i=i+1) begin
										matrowget(POr,i,POrw);
										if(POrw.ArtCode==artcode)then begin
											if(true /*(POrw.Quant-POrw.Shipd2)>0*/)then begin
												startformat(15);
													pos = 20;
													OutString(pos,0,POrw.ArtCode,false);
													OutString(pos+=30,0,POrw.Spec,false);
													OutString(pos+=100,"DblPOVc",POr.SerNr,false);
													OutString(pos+=30,0,POr.TransDate,false);
													//OutString(pos+=50,0,POr.PlanShip,false);
													OutString(pos+=30,0,POr.VECode,false);
													OutString(pos+=30,0,POr.Addr0,false);
													OutString(pos+=50,0,POrw.Quant-POrw.Shipd2,false);
													OutString(pos+=20,0,POrw.Price,false);
													//OutString(pos+=20,0,POrw.Sum,false);
													OutString(pos+=20,0,POr.CurncyCode,false);
													if(POr.OKFlag==0)then begin
														OutString(pos+=20,0,"Не подп.",false);
													end else begin
														OutString(pos+=20,0,"Подписан",false);
													end;
													OutString(pos+=30,0,POrw.Comment,false);
												endformat;
												ordered = POrw.Quant-POrw.Shipd2;
												if(ordered>=toorder)then begin
													//TrHs = false;
												end;
											end;
										end;
									end; 
								end;
							end else begin
								mtrw = matrowcnt(POr);
								For(i=0;i<mtrw;i=i+1) begin
									matrowget(POr,i,POrw);
									if(POrw.ArtCode==artcode)then begin
										ordered = POrw.Quant-POrw.Shipd2;
										if(ordered>=toorder)then begin
											//TrHs = false;
										end;
									end;
								end;
							end;
						end;
					end;
				end;
			end;
		end;
	endjob;
return;
end;



function string 255 SumupAllValuesByCode(string tstr)	//Edit----------------------Dima  13.03.2015
begin
	string 255 res;
	string 50 code;
	string 15 value;
	vector longint Codes;
	array string 30 listCodes;
	integer pos,size,i;
	boolean exist;
	longint t;

	pos = 0;
	
  ExtractObj(tstr,pos,code);
  while(nonblank(code)) begin
 		 ExtractObj(tstr,pos,value);	
 		 
 		 exist = false;
 		 for(i=0;i<listCodes.length;i=i+1) begin
			if (listCodes[i]==code) then begin
				exist = true;
				goto LContinueFindingCodes8;
			end;			 
		 end;
		 if(exist==false) then begin
				listCodes[i]=code;	
		 end; 		
 		 LContinueFindingCodes8:; 		 
	 	
	 	 Codes[code] = Codes[code] + StringToLongInt(value);;
  	 ExtractObj(tstr,pos,code);
  end;
	
	for(i=0;i<listCodes.length;i=i+1) begin
		t = Codes[listCodes[i]]+1; // because blankvalue is not 0, but -1 (for Longint)
		res = res & listCodes[i] & ":" & t & " ";
	end;
		
	SumupAllValuesByCode = res;
return;
end;


procedure HeaderItems(string a,  var string res)
begin
  if (blank(a)) then begin
     res = USetStr(1106);
  end else begin
     res = USetStr(1088);
     res = res &": " & a;
  end;
return;
end;

procedure HeaderLocations(string a,  var string res)
begin
  if (blank(a)) then begin
     res = USetStr(8961);
  end else begin
     res = USetStr(2768);
     res = res &": " & a;
  end;
return;
end;


procedure HeaderClassifications(string a,  var string res)
begin
  if (blank(a)) then begin
     res = USetStr(16395);
  end else begin
     res = USetStr(16396);
     res = res & ": " & a;
  end;
return;
end;


procedure OutHeaderToExcel(record RcVc RepSpec)	
begin
  string 255 tstr; 

  	startformat(15);
  	OutString(0,0,USetStr(1413),false);	//Enterprise by Hansa, Print Date
  	OutString(10,0,"",false);
  	OutString(20,0,"",false);
  	OutString(30,0,CurrentDate,false);
  	OutString(40,0,CurrentTime,false);
  	EndFormat;
  		
  	HeaderItems(RepSpec.f1,tstr);
  	OutString(0,0,tstr,false);
  	EndFormat;
  	HeaderLocations(RepSpec.f2,tstr);
  	OutString(0,0,tstr,false);
  	EndFormat;
  	HeaderClassifications(RepSpec.f3,tstr);
  	OutString(0,0,tstr,false);  	
  	EndFormat;
  	
  	if (nonblank(RepSpec.f4)) then begin
  			OutString(0,0,USetStr(31008) & ": " & RepSpec.f4,false); 
  	end;
  	if (nonblank(RepSpec.f5)) then begin
				OutString(0,0,USetStr(31135) & ": " & RepSpec.f5,false); 
  	end; 
    	
  	EndFormat;
  	EndFormat;  
	
end;




global
procedure VERepRn(record RcVc RepSpec)
BEGIN    
  record INVc INr;
  record ORVc ORr, OR2r;
  record POVc POr, PO2r;
  record ItemStatusVc ISr;
  record PISVc PISr;
  record POSVc POSr;
  row ORVc ORrw, OR2rw;
  row POVc POrw, PO2rw;
  Boolean TrHs,testf,loopORVc;
  integer i,j,rwcnt;
  array val sold;// Edit ************************** Monday, 19 October 2015 10:10:53
  val strRest,gotval,curRest,TRWH,restok,restunok;
  val soldall,sold0,strRest0,gotval0,curRest0,SDqty0,saleopt0,saleroz0;
  boolean nofindf;
  val OrdQty,POQty,POUnOkQty,retPU,SDqty,stin,stout,saleopt,saleroz;
  val OrdQty0,POQty0,POUnOkQty0; 
  longint OrdQtyInt;
  integer rw,pos,size,size2,startPos;
  string 255 tstr,frin,toin;
  string 20 loc;
  Array string 20 locations;
  Array string 20 locationsBal;
  Array string 20 positions;
  Array string 20 positionsBal;  
  Array Integer LocPos;	//position of columns
  Array Integer PosPos; //position of columns
  vector val LocBalValues;
  vector val PosBalValues;
 // vector string 20 LocationOfPosition;
  val step;
  string 255 VendorsListUnOK, VendorsListOK;
  

RecordNew(ISr);

  pos = 0;
  size =0;
  loc = "";
  ExtractObj(RepSpec.f2,pos,loc);
  while(nonblank(loc))begin		//Edit---------------------------------------Dima  19.12.2014
		if(nonblank(loc))then begin
			locations[size] = loc;
			size = size + 1;  	
			ExtractObj(RepSpec.f2,pos,loc);
  	end;
  end;

  pos = 0;
  size2 =0;
  ExtractObj(RepSpec.f4,pos,loc);
  while(nonblank(loc))begin
	LocBalValues[loc] = i;		
  	locationsBal[size2] = loc;
  	size2 = size2 + 1;  	
  	ExtractObj(RepSpec.f4,pos,loc);
  end;


  pos = 0;
  size2 =0;
  ExtractObj(RepSpec.f5,pos,loc);
  while(nonblank(loc))begin
	  PosBalValues[loc] = i;		
  	positionsBal[size2] = loc;
  	POSr.Code = loc;
  	ReadFirstMain(POSr,1,true);
  	//LocationOfPosition[loc] = POSr.Location;
  	size2 = size2 + 1;  	
  	ExtractObj(RepSpec.f5,pos,loc);
  end;

  
  StartReportJob("Отчет по товарам по классификации(поставщику)");
  rw=1;
  HeaderItems(RepSpec.f1,tstr);	//Edit-------------------------------------------Dima 19.12.2014
  Header(rw,tstr,1);
  rw = rw + 1;
  HeaderLocations(RepSpec.f2,tstr);	
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f4)) then begin
  	  Header(rw,USetStr(31008) & ": " & RepSpec.f4 ,1);
  	  rw = rw + 1;
  end;
  if (nonblank(RepSpec.f5)) then begin
  	  Header(rw,USetStr(31135) & ": " & RepSpec.f5 ,1);
  	  rw = rw + 1;
  end;  
  HeaderClassifications(RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;

  if (RepSpec.Media == mtExcel) then begin	//Edit -------------------------------Dima 22.12.2014
  	OutHeaderToExcel(RepSpec);
  end;

  StartFormat(15);
   OutString(0,0,"Код",false);
   OutString(30,0,"Альт.код",false);
   OutString(60,0,"Наименование",false);
   OutString(140,0,"Продано",false);
   if(size>0)then begin
		 For(i=0;i<size;i=i+1) begin
			OutString(140,0,"Продано " & locations[i],false);
		 end; 
	 end;
   
   OutString(165,0,"Продано опт.",false);
   OutString(190,0,"Продано розн.",false);
   OutString(220,0,"Нач. остаток",false);
   OutString(240,0,"Получено",false);
   OutString(260,0,"Списано",false);
   OutString(280,0,"Остаток",false);
   OutString(300,0,"К отгрузке клиентам",false);

   step=(360-320)/(locationsBal.length + positionsBal.length);
   startPos = 320;

   for(i=0; i < locationsBal.length; i=i+1) begin
		LocPos[i] = startPos+step*i;
   	OutString(LocPos[i],0,"Ост. " & locationsBal[i],false);
   end;	
   
   startPos = startPos+step*locationsBal.length;
   for(i=0; i < positionsBal.length; i=i+1) begin
		PosPos[i] = startPos+step*i;
   	OutString(PosPos[i],0,"Ост.\(место\) " & positionsBal[i],false);	
   end;	   

   OutString(360,0,"Заказ подпис.",false);
   OutString(370,0,"",false);				//VendorsListOK
   OutString(400,0,"Заказ не подпис.",false);
   OutString(370,0,"",false); 			//VendorsListUnOK
   OutString(440,0,"Остаток с заказом",false);
   
       
  EndFormat;
  Gray_Divider(0,1);
  
  INr.Code = RepSpec.f1;
  TrHs = true;
	//RECORDNEW(OR2r);
	//CollectOrderRows(OR2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);
	RECORDNEW(PO2r);
	CollectPORows(PO2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f3);
  			/*rwcnt = MatRowCnt(PO2r);	
  			for (i=0;i<rwcnt;i=i+1) begin
  				MatRowGet(PO2r,i,PO2rw);
  				//LogText(0,PO2rw.ArtCode & "  *  " & PO2rw.Quant & "  ^  " & PO2rw.Shipd1 & "  %  " & PO2rw.Shipd2);
  			end;		*/

  
  while (LoopMain(INr,1,TrHs)) begin
  	testf = true;
  	if (nonblank(RepSpec.f1) and INr.Code != RepSpec.f1) then begin testf = false; TrHs = false; end;
  	if (nonblank(RepSpec.f3) and SetInSet2(RepSpec.f3,INr.DispGroups)==false) then begin testf = false; end;
  	if (INr.Terminated>0) then begin testf = false; end;		//Edit----------------------Dima  08.04.2015
  	
  	if (testf) then begin

  		restok = 0;
  		restunok = 0;
  		TRWH = 0;
  		retPU = blankval;
  		SDqty = blankval;
  		stin = blankval;
  		stout = blankval;
  		sold[0] = blankval;
  		soldall = blankval;
  		For(i=0;i<size;i=i+1) begin// Edit ************************** Monday, 19 October 2015 10:10:28
				sold[i] = blankval; //Edit***************************Sasha2,15:44 17.02.2015
			end; 
  		//
  		strRest = blankval; //Edit***************************Sasha2,15:44 17.02.2015
  		gotval = blankval; //Edit***************************Sasha2,15:44 17.02.2015
  		curRest = blankval; //Edit***************************Sasha2,15:44 17.02.2015
  		saleopt = blankval; //Edit***************************Sasha2,15:44 17.02.2015
  		saleroz = blankval; //Edit***************************Sasha2,15:44 17.02.2015
  		//Edit-------------------------------------------Dima 19.12.2014
  		POQty = blankval;
  		POUnOkQty	= blankval;	
  		OrdQty = blankval;	
  		
  		if(size>0)then begin
				for(i=0; i<size; i=i+1) begin
					GetISStatus(INr.Code,OrdQty0,POQty0,POUnOkQty0,locations[i]);
					OrdQty = OrdQty + OrdQty0;
					POQty = POQty + POQty0;
					POUnOkQty = POUnOkQty + POUnOkQty0;
					
					ClearVector(LocBalValues);
					ClearVector(PosBalValues);
					LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,locations[i],sold0,strRest0,gotval0,curRest0,TRWH,retPU,SDqty0,stin,stout,saleopt0,saleroz0,LocBalValues,PosBalValues);
					sold[i] = sold[i] + sold0;
					soldall = soldall + sold0;
					strRest = strRest + strRest0;
					strRest = strRest0;// Edit ************************** Tuesday, 27 October 2015 17:30:30
					gotval = gotval0;		//Edit----------------------Dima  13.01.2016
					curRest = curRest + curRest0;
					CurRest = curRest0;// Edit ************************** Tuesday, 27 October 2015 17:37:41
					SDqty = SDqty + SDqty0;
					SDqty = SDqty0;// Edit ************************** Tuesday, 27 October 2015 17:37:49
					saleopt = saleopt0;
					saleroz = saleroz0;
				end;	
			end else begin
				GetISStatus(INr.Code,OrdQty,POQty,POUnOkQty,RepSpec.f2);		//Edit ------------------------------Dima.                склад - f2, не f1		
				LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,RepSpec.f2,sold0,strRest,gotval,curRest,TRWH,retPU,SDqty,stin,stout,saleopt,saleroz,LocBalValues,PosBalValues);
				soldall = sold0;
  		end;
  		//Edit end-----------------------------------------------------
  /*
  		for(i = 0; i < locationsBal.length; i = i+1) begin
  			ISr.Code = INr.Code;
  			ISr.Location = locationsBal[i];
  			if (ReadFirstMain(ISr,2,true)) then begin
  				LocBalValues[locationsBal[i]] = ISr.Instock;
  			end;
  		end;
  		for(i = 0; i < positionsBal.length; i = i+1) begin
  			PISr.ArtCode = INr.Code;
  			PISr.Position = positionsBal[i];
  			PISr.Location = LocationOfPosition[positionsBal[i]];
  			if (ReadFirstMain(PISr,3,true)) then begin
  				PosBalValues[positionsBal[i]] = PISr.Instock;
  			end;
  		end;  		
*/
  		StartFormat(15);
  			OutString(20,0,INr.Code,true);
  			OutString(30,0,INr.AlternativeCode,false);
  			OutString(60,0,INr.Name,false);
  			
				OutString(140,0,-soldall,false);
				For(i=0;i<size;i=i+1) begin
					OutString(140,0,-sold[i],false);
				end;
  			OutString(165,0,-saleopt,false);
  			OutString(190,0,-saleroz,false);
  			OutString(220,0,strRest,false);
				OutString(240,0,gotval + retPU,false); //Edit***************************Sasha2,16:12 17.02.2015		//Edit----------------------Dima  10.03.2015  (from - to +)
				OutString(260,0,-(retPU+SDqty),false);
				OutString(280,0,curRest,false);
				OutString(300,0,OrdQty,false);


  			for(i = 0; i < locationsBal.length; i = i+1) begin
  				OutString(LocPos[i],0,LocBalValues[locationsBal[i]],false);  
  			end;
  			for(i = 0; i < positionsBal.length; i = i+1) begin
  				OutString(PosPos[i],0,PosBalValues[positionsBal[i]],false);  
  			end;  			
  			ClearVector(LocBalValues);
  			ClearVector(PosBalValues);
				

  			POQty = POUnOkQty;
  			POUnOkQty = blankval;
  			nofindf = true;
  			rwcnt = MatRowCnt(PO2r);	
  			for (i=0;i<rwcnt;i=i+1) begin
  				MatRowGet(PO2r,i,PO2rw);
  				if (PO2rw.ArtCode==INr.Code) then begin
  					POUnOkQty = PO2rw.Shipd2;
					//POQty = POQty - PO2rw.Shipd2;
  					POQty = PO2rw.Shipd1;//Edit----------------------Dima  20.03.2015
  					VendorsListOK = SumupAllValuesByCode(PO2rw.Comment);		//Edit----------------------Dima  13.03.2015
  					VendorsListUnOK = SumupAllValuesByCode(PO2rw.Spec);			
						nofindf = false;
  				end;
  			end; 			
  			OrdQtyInt = 0;
				OrdQtyInt = POQty;
  			OutStringID(360,"DblOpenRepRn",OrdQtyInt,false,INr.Code);
  			OutString(368,0,VendorsListOK,false);
  			OrdQtyInt = 0;
				OrdQtyInt = POUnOkQty;
  			OutStringID(400,"DblOpenRepRn",OrdQtyInt,false,INr.Code);
  			OutString(410,0,VendorsListUnOK,false);									//Edit----------------------Dima  13.03.2015
				
				restok = restok + curRest + POQty + POUnOkQty;
				restunok = restunok + curRest + POUnOkQty;
  			///OutVal(440,0,restok,M4Val,false);
				OutString(440,0,restok,false);				//Edit----------------------Dima  13.02.2015
  			//outval(450,0,restunok,M4Val,false);
  		EndFormat;
  			VendorsListOK = blankval;
  			VendorsListUnOK = blankval;
  	end;
  end;

  EndJob;
  return;
end;


