remote procedure LookupInHist(string, Date, Date, string,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val);external function Boolean SetInSet2(string,string);remote procedure CollectOrderRows(var record ORVc,Date,Date,string);remote procedure CollectPORows(var record POVc,Date,Date,string);remote procedure GetISStatus(string,var val,var val,var val,string);SetLangMode(LangRussian,"RUS",0);global procedure ItemPUOrderReportRn(record RcVc RepSpec)begin	string 200 artcode,dispgroups,vecode;	record POVc POr;	row POVc POrw;	record ItemStatusVc ISr;	longint ordered,toorder;	integer mtrw,i,showall;	boolean TrHs,TrHs1,testf,testf1;	record INVc INr;		artcode = RepSpec.f1;	vecode = RepSpec.f2;	dispgroups = RepSpec.f3;	showall = RepSpec.flags[0];		startreportnoheaderjob("Отчет о заказанных товарах");			startformat(15);			OutString(30,0,"Код",true);   		OutString(40,0,"Наименование",false);   		OutString(100,0,"Заказ поставщику",false);   		OutString(150,0,"Дата",false);   		OutString(200,0,"Заплани. отгрузка",false);   		OutString(260,0,"Поставщик",false);   		OutString(310,0,"Наименование",false);   		OutString(360,0,"Долг",false);   		OutString(410,0,"Статус заказа",false);		endformat;				INr.Code = artcode;		TrHs1 = true;		while(loopmain(INr,1,TrHs1))begin			testf1 = true;			if(nonblank(artcode) and INr.Code!=artcode)then begin testf1 = false; TrHs1 = false; end;			if(nonblank(dispgroups) and !setinset(dispgroups,INr.Code))then begin testf1 = false; end;						if(testf1)then begin				ISr.Code = artcode;				ISr.Location = ";;;";				ordered = 0;				toorder = 0;				if(readfirstmain(ISr,2,true))then begin					if(ISr.POUnOKQty>0/* or (showall==1 and ISr.POUnOKQty>0)*/)then begin						toorder = ISr.POUnOKQty;						/*if(showall==0)then begin							toorder = ISr.POQty;						end else begin							toorder = ISr.POUnOKQty;						end;*/						POr.SerNr = 9999999;						TrHs = true;						resetloop(POr);						while(LoopBackKey("SerNr",POr,1,TrHs))begin							testf = true;							if(nonblank(vecode) and POr.VECode!=vecode)then begin testf = false; end;														if(testf)then begin								if(TrHs and POr.Closed==0)then begin									mtrw = matrowcnt(POr);									For(i=0;i<mtrw;i=i+1) begin										matrowget(POr,i,POrw);										if(POrw.ArtCode==artcode)then begin											if((POrw.Quant-POrw.Shipd2)>0)then begin												startformat(15);													OutString(30,0,POrw.ArtCode,true);													OutString(40,0,POrw.Spec,false);													OutString(100,"DblPOVc",POr.SerNr,false);													OutString(150,0,POr.TransDate,false);													OutString(200,0,POr.PlanShip,false);													OutString(260,0,POr.VECode,false);													OutString(310,0,POr.Addr0,false);													OutString(360,0,POrw.Quant-POrw.Shipd2,false);													if(POr.OKFlag==0)then begin														OutString(410,0,"Не подп.",false);													end else begin														OutString(410,0,"Подписан",false);													end;												endformat;												ordered = POrw.Quant-POrw.Shipd2;												if(ordered>=toorder)then begin													TrHs = false;												end;											end;										end;									end; 								end;							end else begin								mtrw = matrowcnt(POr);								For(i=0;i<mtrw;i=i+1) begin									matrowget(POr,i,POrw);									if(POrw.ArtCode==artcode)then begin										ordered = POrw.Quant-POrw.Shipd2;										if(ordered>=toorder)then begin											TrHs = false;										end;									end;								end;							end;						end;					end;				end;			end;		end;	endjob;return;end;globalprocedure VERepRn(record RcVc RepSpec)BEGIN      record INVc INr;  record ORVc ORr, OR2r;  record POVc POr, PO2r;  row ORVc ORrw, OR2rw;  row POVc POrw, PO2rw;  Boolean TrHs,testf,loopORVc;  integer i,rwcnt;  val sold,strRest,gotval,curRest,TRWH,restok,restunok;  boolean nofindf;  val OrdQty,POQty,POUnOkQty,retPU,SDqty,stin,stout,saleopt,saleroz;  integer OrdQtyInt;    StartReportJob("Отчет по товарам по классификации(поставщику)");    Header(0,"", 1);  EndHeader;  SetRepCol(2,30);  SetRepCol(3,40);  SetRepCol(4,100);  SetRepCol(5,120);  SetRepCol(6,150);  SetRepCol(7,170);  SetRepCol(8,190);  SetRepCol(9,310);  StartFormat(15);   OutString(30,0,"Код",true);   OutString(40,0,"Наименование",false);   OutString(100,0,"Продано",false);   OutString(125,0,"Продано опт.",false);   OutString(150,0,"Продано розн.",false);   OutString(180,0,"Нач. остаток",false);   OutString(200,0,"Получено",false);   OutString(220,0,"Списано",false);   OutString(240,0,"Остаток",false);   OutString(260,0,"К отгрузке клиентам",false);   OutString(320,0,"Заказ подпис.",false);   OutString(360,0,"Заказ не подпис.",false);    OutString(420,0,"Остаток с заказом",false);   //OutString(100,0,"Нач. остаток",false);   //OutString(125,0,"Получено",false);   //OutString(145,0,"Возврат поставщику",false);   //OutString(180,0,"Продано",false);   //OutString(200,0,"Списано",false);   //OutString(220,0,"Вн. приход",false);   //OutString(240,0,"Вн. расход",false);   //OutString(260,0,"Остаток",false);   //OutString(280,0,"К отгрузке клиентам",false);    //OutString(320,0,"Товар в дороге",false);     //OutString(360,0,"Долг под.",false);   //OutString(380,0,"Долг по не под.",false);   //OutString(420,0,"Остаток (подтв.)",false);   //OutString(450,0,"Остаток (не подтв.)",false);         EndFormat;  Gray_Divider(0,1);    INr.Code = RepSpec.f1;  TrHs = true;	//RECORDNEW(OR2r);	//CollectOrderRows(OR2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);	RECORDNEW(PO2r);	CollectPORows(PO2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);      while (LoopMain(INr,1,TrHs)) begin  	testf = true;  	if (nonblank(RepSpec.f1) and INr.Code != RepSpec.f1) then begin testf = false; TrHs = false; end;  	if (nonblank(RepSpec.f3) and SetInSet2(RepSpec.f3,INr.DispGroups)==false) then begin testf = false; end;  	  	if (testf) then begin  		GetISStatus(INr.Code,OrdQty,POQty,POUnOkQty,RepSpec.f1);  		restok = 0;  		restunok = 0;  		TRWH = 0;  		retPU = blankval;  		SDqty = blankval;  		stin = blankval;  		stout = blankval;  		StartFormat(15);  			OutString(30,0,INr.Code,true);  			OutString(40,0,INr.Name,false);  			LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,RepSpec.f2,sold,strRest,gotval,curRest,TRWH,retPU,SDqty,stin,stout,saleopt,saleroz);  			OutVal(100,0,-sold,M4Val,false);  			OutVal(125,0,-saleopt,M4Val,false);  			OutVal(150,0,-saleroz,M4Val,false);  			OutVal(180,0,strRest,M4Val,false);				OutVal(200,0,gotval,M4Val,false);				OutVal(220,0,-(RetPU+SDqty),M4Val,false);				OutVal(240,0,curRest,M4Val,false);				OutVal(260,0,OrdQty,M4Val,false);								//OrdQtyInt = 0;				//OrdQtyInt = OrdQty;  			//OutStringID(280,"DblOpenRepRn",OrdQtyInt,false,INr.Code);  			//outval(280,0,OrdQty,M4Val,false);				//restok = curRest + TRWH;				//restunok = curRest + TRWH;  			  			  			//OutVal(320,0,TRWH,M4Val,false);  			POQty = POUnOkQty;  			POUnOkQty = blankval;  			nofindf = true;  			rwcnt = MatRowCnt(PO2r);	  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(PO2r,i,PO2rw);  				if (PO2rw.ArtCode==INr.Code) then begin  					POUnOkQty = PO2rw.Shipd2;  					POQty = POQty - PO2rw.Shipd2;						nofindf = false;  				end;  			end;  			  			OrdQtyInt = 0;				OrdQtyInt = POQty;  			OutStringID(320,"DblOpenRepRn",OrdQtyInt,false,INr.Code);  			//outval(360,0,POQty,M4Val,false);  			OrdQtyInt = 0;				OrdQtyInt = POUnOkQty;  			OutStringID(360,"DblOpenRepRn",OrdQtyInt,false,INr.Code);				//outval(380,0,POUnOkQty,M4Val,false);								restok = restok + curRest + POQty + POUnOkQty;				restunok = restunok + curRest + POUnOkQty;  			outval(420,0,restok,M4val,false);  			//outval(450,0,restunok,M4Val,false);  		EndFormat;  	end;  end;      EndJob;  return;end;