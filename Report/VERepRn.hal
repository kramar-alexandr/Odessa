remote procedure LookupInHist(string, Date, Date, string,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val);external function Boolean SetInSet2(string,string);remote procedure CollectOrderRows(var record ORVc,Date,Date,string);remote procedure CollectPORows(var record POVc,Date,Date,string);remote procedure GetISStatus(string,var val,var val,var val,string);external procedure ExtractObj(string,var Integer,var string);SetLangMode(LangRussian,"RUS",0);global procedure ItemPUOrderReportRn(record RcVc RepSpec)begin	string 200 artcode,dispgroups,vecode;	record POVc POr;	row POVc POrw;	record ItemStatusVc ISr;	longint ordered,toorder;	integer mtrw,i,showall;	boolean TrHs,TrHs1,testf,testf1;	record INVc INr;		artcode = RepSpec.f1;	vecode = RepSpec.f2;	dispgroups = RepSpec.f3;	showall = RepSpec.flags[0];		startreportnoheaderjob("Отчет о заказанных товарах");			startformat(15);			OutString(30,0,"Код",true);   		OutString(40,0,"Наименование",false);   		OutString(100,0,"Заказ поставщику",false);   		OutString(150,0,"Дата",false);   		OutString(200,0,"Заплани. отгрузка",false);   		OutString(260,0,"Поставщик",false);   		OutString(310,0,"Наименование",false);   		OutString(360,0,"Долг",false);   		OutString(380,0,"Цена",false);   		OutString(400,0,"Сумма",false);   		OutString(420,0,"Статус заказа",false);		endformat;				INr.Code = artcode;		TrHs1 = true;		while(loopmain(INr,1,TrHs1))begin			testf1 = true;			if(nonblank(artcode) and INr.Code!=artcode)then begin testf1 = false; TrHs1 = false; end;			if(nonblank(dispgroups) and !setinset(dispgroups,INr.Code))then begin testf1 = false; end;						if(testf1)then begin				ISr.Code = artcode;				ISr.Location = ";;;";				ordered = 0;				toorder = 0;				if(readfirstmain(ISr,2,true))then begin					if(ISr.POUnOKQty>0/* or (showall==1 and ISr.POUnOKQty>0)*/)then begin						toorder = ISr.POUnOKQty;						/*if(showall==0)then begin							toorder = ISr.POQty;						end else begin							toorder = ISr.POUnOKQty;						end;*/						POr.SerNr = 9999999;						TrHs = true;						resetloop(POr);						while(LoopBackKey("SerNr",POr,1,TrHs))begin							testf = true;							if(nonblank(vecode) and POr.VECode!=vecode)then begin testf = false; end;														if(testf)then begin								if(TrHs and POr.Closed==0)then begin									mtrw = matrowcnt(POr);									For(i=0;i<mtrw;i=i+1) begin										matrowget(POr,i,POrw);										if(POrw.ArtCode==artcode)then begin											if((POrw.Quant-POrw.Shipd2)>0)then begin												startformat(15);													OutString(30,0,POrw.ArtCode,true);													OutString(40,0,POrw.Spec,false);													OutString(100,"DblPOVc",POr.SerNr,false);													OutString(150,0,POr.TransDate,false);													OutString(200,0,POr.PlanShip,false);													OutString(260,0,POr.VECode,false);													OutString(310,0,POr.Addr0,false);													OutString(360,0,POrw.Quant-POrw.Shipd2,false);													OutString(380,0,POrw.Price,false);													OutString(400,0,POrw.Sum,false);																										if(POr.OKFlag==0)then begin														OutString(420,0,"Не подп.",false);													end else begin														OutString(420,0,"Подписан",false);													end;												endformat;												ordered = POrw.Quant-POrw.Shipd2;												if(ordered>=toorder)then begin													TrHs = false;												end;											end;										end;									end; 								end;							end else begin								mtrw = matrowcnt(POr);								For(i=0;i<mtrw;i=i+1) begin									matrowget(POr,i,POrw);									if(POrw.ArtCode==artcode)then begin										ordered = POrw.Quant-POrw.Shipd2;										if(ordered>=toorder)then begin											TrHs = false;										end;									end;								end;							end;						end;					end;				end;			end;		end;	endjob;return;end;procedure HeaderItems(string a,  var string res)begin  if (blank(a)) then begin     res = USetStr(1106);  end else begin     res = USetStr(1088);     res = res &": " & a;  end;return;end;procedure HeaderLocations(string a,  var string res)begin  if (blank(a)) then begin     res = USetStr(8961);  end else begin     res = USetStr(2768);     res = res &": " & a;  end;return;end;procedure HeaderClassifications(string a,  var string res)begin  if (blank(a)) then begin     res = USetStr(16395);  end else begin     res = USetStr(16396);     res = res & ": " & a;  end;return;end;procedure OutHeaderToExcel(record RcVc RepSpec)begin  string 255 tstr;   	startformat(15);  	OutString(0,0,USetStr(1413),false);	//Enterprise by Hansa, Print Date  	OutString(10,0,"",false);  	OutString(20,0,"",false);  	OutString(30,0,CurrentDate,false);  	OutString(40,0,CurrentTime,false);  	EndFormat;  		  	HeaderItems(RepSpec.f1,tstr);  	OutString(0,0,tstr,false);  	EndFormat;  	HeaderLocations(RepSpec.f2,tstr);  	OutString(0,0,tstr,false);  	EndFormat;  	HeaderClassifications(RepSpec.f3,tstr);  	OutString(0,0,tstr,false);  	EndFormat;  	EndFormat;  	EndFormat;  	end;globalprocedure VERepRn(record RcVc RepSpec)BEGIN      record INVc INr;  record ORVc ORr, OR2r;  record POVc POr, PO2r;  record ItemStatusVc ISr;  row ORVc ORrw, OR2rw;  row POVc POrw, PO2rw;  Boolean TrHs,testf,loopORVc;  integer i,rwcnt;  val sold,strRest,gotval,curRest,TRWH,restok,restunok;  val sold0,strRest0,gotval0,curRest0,SDqty0,saleopt0,saleroz0;  boolean nofindf;  val OrdQty,POQty,POUnOkQty,retPU,SDqty,stin,stout,saleopt,saleroz;  val OrdQty0,POQty0,POUnOkQty0;   integer OrdQtyInt;  integer rw,pos,size,size2,startPos;  string 255 tstr,frin,toin;  string 20 loc;  Array string 20 locations;  Array string 20 locationsBal;  Array Integer LocPos;  vector val LocBalValues;  val step;RecordNew(ISr);  pos = 0;  size =0;  ExtractObj(RepSpec.f2,pos,loc);  while(nonblank(loc))begin		//Edit---------------------------------------Dima  19.12.2014	locations[size] = loc;  	size = size + 1;  	  	ExtractObj(RepSpec.f2,pos,loc);  end;  pos = 0;  size2 =0;  ExtractObj(RepSpec.f4,pos,loc);  while(nonblank(loc))begin	LocBalValues[loc] = i;		  	locationsBal[size2] = loc;  	size2 = size2 + 1;  	  	ExtractObj(RepSpec.f4,pos,loc);  end;    StartReportJob("Отчет по товарам по классификации(поставщику)");  rw=1;  HeaderItems(RepSpec.f1,tstr);	//Edit-------------------------------------------Dima 19.12.2014  Header(rw,tstr,1);  rw = rw + 1;  HeaderLocations(RepSpec.f2,tstr);	  Header(rw,tstr,1);  rw = rw + 1;  if (nonblank(RepSpec.f4)) then begin  	  Header(rw,USetStr(31008) & ": " & RepSpec.f4 ,1);  	  rw = rw + 1;  end;  HeaderClassifications(RepSpec.f3,tstr);  Header(rw,tstr,1);  rw = rw + 1;  EndHeader;  if (RepSpec.Media == mtExcel) then begin	//Edit -------------------------------Dima 22.12.2014  	OutHeaderToExcel(RepSpec);  end;  StartFormat(15);   OutString(20,0,"Код",false);   OutString(30,0,"Наименование",false);   OutString(140,0,"Продано",false);   OutString(165,0,"Продано опт.",false);   OutString(190,0,"Продано розн.",false);   OutString(220,0,"Нач. остаток",false);   OutString(240,0,"Получено",false);   OutString(260,0,"Списано",false);   OutString(280,0,"Остаток",false);   OutString(300,0,"К отгрузке клиентам",false);   step=(360-320)/locationsBal.length;   startPos = 320;   for(i=0; i < locationsBal.length; i=i+1) begin	LocPos[i] = startPos+step*i;   	OutString(LocPos[i],0,"Ост. " & locationsBal[i],false);	   end;	   OutString(360,0,"Заказ подпис.",false);   OutString(400,0,"Заказ не подпис.",false);    OutString(440,0,"Остаток с заказом",false);   //OutString(100,0,"Нач. остаток",false);   //OutString(125,0,"Получено",false);   //OutString(145,0,"Возврат поставщику",false);   //OutString(180,0,"Продано",false);   //OutString(200,0,"Списано",false);   //OutString(220,0,"Вн. приход",false);   //OutString(240,0,"Вн. расход",false);   //OutString(260,0,"Остаток",false);   //OutString(280,0,"К отгрузке клиентам",false);    //OutString(320,0,"Товар в дороге",false);     //OutString(360,0,"Долг под.",false);   //OutString(380,0,"Долг по не под.",false);   //OutString(420,0,"Остаток (подтв.)",false);   //OutString(450,0,"Остаток (не подтв.)",false);         EndFormat;  Gray_Divider(0,1);    INr.Code = RepSpec.f1;  TrHs = true;	//RECORDNEW(OR2r);	//CollectOrderRows(OR2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);	RECORDNEW(PO2r);	CollectPORows(PO2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);    while (LoopMain(INr,1,TrHs)) begin  	testf = true;  	if (nonblank(RepSpec.f1) and INr.Code != RepSpec.f1) then begin testf = false; TrHs = false; end;  	if (nonblank(RepSpec.f3) and SetInSet2(RepSpec.f3,INr.DispGroups)==false) then begin testf = false; end;  	  	if (testf) then begin  		restok = 0;  		restunok = 0;  		TRWH = 0;  		retPU = blankval;  		SDqty = blankval;  		stin = blankval;  		stout = blankval;  		sold = blankval; //Edit***************************Sasha2,15:44 17.02.2015  		strRest = blankval; //Edit***************************Sasha2,15:44 17.02.2015  		gotval = blankval; //Edit***************************Sasha2,15:44 17.02.2015  		curRest = blankval; //Edit***************************Sasha2,15:44 17.02.2015  		saleopt = blankval; //Edit***************************Sasha2,15:44 17.02.2015  		saleroz = blankval; //Edit***************************Sasha2,15:44 17.02.2015  		//Edit-------------------------------------------Dima 19.12.2014		  		for(i=0; i<size; i=i+1) begin  			GetISStatus(INr.Code,OrdQty0,POQty0,POUnOkQty0,locations[i]);  			OrdQty = OrdQty + OrdQty0;  			POQty = POQty + POQty0;  			POUnOkQty = POUnOkQty + POUnOkQty0;    			LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,locations[i],sold0,strRest0,gotval0,curRest0,TRWH,retPU,SDqty0,stin,stout,saleopt0,saleroz0);  			sold = sold + sold0;  			strRest = strRest + strRest0;  			gotval = gotval + gotval0;  			curRest = curRest + curRest0;  			SDqty = SDqty + SDqty0;  			saleopt = saleopt + saleopt0;  			saleroz = saleroz + saleroz0;  		end;	    		if (size==0) then begin		//для всех складов  		GetISStatus(INr.Code,OrdQty,POQty,POUnOkQty,RepSpec.f2);		//Edit ------------------------------Dima.                склад - f2, не f1		  		LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,RepSpec.f2,sold,strRest,gotval,curRest,TRWH,retPU,SDqty,stin,stout,saleopt,saleroz);  		end;  		//Edit end-----------------------------------------------------    		for(i = 0; i < locationsBal.length; i = i+1) begin  			ISr.Code = INr.Code;  			ISr.Location = locationsBal[i];  			if (ReadFirstMain(ISr,2,true)) then begin  				LocBalValues[locationsBal[i]] = ISr.Instock;  			end;  		end;  		StartFormat(15);  			OutString(20,0,INr.Code,true);  			OutString(30,0,INr.Name,false);  			//LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,RepSpec.f2,sold,strRest,gotval,curRest,TRWH,retPU,SDqty,stin,stout,saleopt,saleroz);    //Edit Dima /* 			OutVal(140,0,-sold,M4Val,false);  			OutVal(165,0,-saleopt,M4Val,false);  			OutVal(190,0,-saleroz,M4Val,false);  			OutVal(220,0,strRest,M4Val,false);				OutVal(240,0,gotval,M4Val,false);				OutVal(260,0,-(retPU+SDqty),M4Val,false);				OutVal(280,0,curRest,M4Val,false);				OutVal(300,0,OrdQty,M4Val,false);	*/	//Edit----------------------Dima  13.02.2015  			OutString(140,0,-sold,false);  			OutString(165,0,-saleopt,false);  			OutString(190,0,-saleroz,false);  			OutString(220,0,strRest,false);				OutString(240,0,gotval - retPU,false); //Edit***************************Sasha2,16:12 17.02.2015				OutString(260,0,-(retPU+SDqty),false);				OutString(280,0,curRest,false);				OutString(300,0,OrdQty,false);  			for(i = 0; i < locationsBal.length; i = i+1) begin  //				if (NonBlank(LocBalValues[locationsBal[i]]))  				OutString(LocPos[i],0,LocBalValues[locationsBal[i]],false);    			end;  			ClearVector(LocBalValues);								//OrdQtyInt = 0;				//OrdQtyInt = OrdQty;  			//OutStringID(280,"DblOpenRepRn",OrdQtyInt,false,INr.Code);  			//outval(280,0,OrdQty,M4Val,false);				//restok = curRest + TRWH;				//restunok = curRest + TRWH;  			  			  			//OutVal(320,0,TRWH,M4Val,false);  			POQty = POUnOkQty;  			POUnOkQty = blankval;  			nofindf = true;  			rwcnt = MatRowCnt(PO2r);	  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(PO2r,i,PO2rw);  				if (PO2rw.ArtCode==INr.Code) then begin  					POUnOkQty = PO2rw.Shipd2;  					POQty = POQty - PO2rw.Shipd2;						nofindf = false;  				end;  			end;  			  			OrdQtyInt = 0;				OrdQtyInt = POQty;  			OutStringID(360,"DblOpenRepRn",OrdQtyInt,false,INr.Code);  			//outval(360,0,POQty,M4Val,false);  			OrdQtyInt = 0;				OrdQtyInt = POUnOkQty;  			OutStringID(400,"DblOpenRepRn",OrdQtyInt,false,INr.Code);				//outval(380,0,POUnOkQty,M4Val,false);								restok = restok + curRest + POQty + POUnOkQty;				restunok = restunok + curRest + POUnOkQty;  			///OutVal(440,0,restok,M4Val,false);				OutString(440,0,restok,false);				//Edit----------------------Dima  13.02.2015  			//outval(450,0,restunok,M4Val,false);  		EndFormat;  	end;  end;      EndJob;  return;end;