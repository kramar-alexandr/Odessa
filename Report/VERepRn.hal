remote procedure LookupInHist(string, Date, Date, string,var val,var val,var val,var val,var val,var val,var val,var val,var val);external function Boolean SetInSet2(string,string);remote procedure CollectOrderRows(var record ORVc,Date,Date,string);remote procedure CollectPORows(var record POVc,Date,Date,string);remote procedure GetISStatus(string,var val,var val,var val,string);SetLangMode(LangRussian,"RUS",0);globalprocedure VERepRn(record RcVc RepSpec)BEGIN      record INVc INr;  record ORVc ORr, OR2r;  record POVc POr, PO2r;  row ORVc ORrw, OR2rw;  row POVc POrw, PO2rw;  Boolean TrHs,testf,loopORVc;  integer i,rwcnt;  val sold,strRest,gotval,curRest,TRWH,restok,restunok;  boolean nofindf;  val OrdQty,POQty,POUnOkQty,retPU,SDqty,stin,stout;    StartReportJob("Отчет по товарам по классификации(поставщику)");    Header(0,"", 1);  EndHeader;  SetRepCol(2,30);  SetRepCol(3,40);  SetRepCol(4,100);  SetRepCol(5,120);  SetRepCol(6,150);  SetRepCol(7,170);  SetRepCol(8,190);  SetRepCol(9,310);  StartFormat(15);   OutString(30,0,"Код",true);   OutString(40,0,"Наименование",false);   OutString(100,0,"Нач. остаток",false);   OutString(125,0,"Получено",false);   OutString(145,0,"Возврат поставщику",false);   OutString(180,0,"Продано",false);   OutString(200,0,"Списано",false);   OutString(220,0,"Вн. приход",false);   OutString(240,0,"Вн. расход",false);   OutString(260,0,"Остаток",false);      OutString(280,0,"К отгрузке клиентам",false);    OutString(320,0,"Товар в дороге",false);     OutString(360,0,"Долг под.",false);   OutString(380,0,"Долг по не под.",false);   OutString(420,0,"Остаток (подтв.)",false);   OutString(450,0,"Остаток (не подтв.)",false);         EndFormat;  Gray_Divider(0,1);    INr.Code = RepSpec.f1;  TrHs = true;	//RECORDNEW(OR2r);	//CollectOrderRows(OR2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);	RECORDNEW(PO2r);	CollectPORows(PO2r,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f2);      while (LoopMain(INr,1,TrHs)) begin  	testf = true;  	if (nonblank(RepSpec.f1) and INr.Code != RepSpec.f1) then begin testf = false; TrHs = false; end;  	if (nonblank(RepSpec.f3) and SetInSet2(RepSpec.f3,INr.DispGroups)==false) then begin testf = false; end;  	  	if (testf) then begin  		GetISStatus(INr.Code,OrdQty,POQty,POUnOkQty,RepSpec.f1);  		restok = 0;  		restunok = 0;  		TRWH = 0;  		retPU = blankval;  		SDqty = blankval;  		stin = blankval;  		stout = blankval;  		StartFormat(15);  			OutString(30,0,INr.Code,true);  			OutString(40,0,INr.Name,false);  			LookupInHist(INr.Code, RepSpec.sStartDate, RepSpec.sEndDate,RepSpec.f2,sold,strRest,gotval,curRest,TRWH,retPU,SDqty,stin,stout);  			OutVal(100,0,strRest,M4Val,false);  			OutVal(125,0,gotval,M4Val,false);  			OutVal(145,0,retPU,M4Val,false);  			OutVal(180,0,-sold,M4Val,false);				OutVal(200,0,SDqty,M4Val,false);				OutVal(220,0,stin,M4Val,false);				OutVal(240,0,stout,M4Val,false);				OutVal(260,0,curRest,M4Val,false);				  			/*nofindf = true;  			rwcnt = MatRowCnt(OR2r);	  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(OR2r,i,OR2rw);  				if (OR2rw.ArtCode==INr.Code) then begin  					//OutString(8,0,OR2rw.Quant,true);  					//OutString(9,0,OR2rw.Shipd2,true);  					OutString(9,0,OrdQty,true);  					restok = curRest + TRWH;						restunok = curRest + TRWH;						nofindf = false;  				end;  			end;  			if(nofindf)then begin  				//OutString(8,0,"",true);					OutString(9,0,"",true);					restok = curRest + TRWH;					restunok = curRest + TRWH;  			end;*/  			  			OutString(280,0,OrdQty,false);				restok = curRest + TRWH;				restunok = curRest + TRWH;  			  			  			  			OutVal(320,0,TRWH,M4Val,false);  			POQty = POUnOkQty;  			POUnOkQty = blankval;  			nofindf = true;  			rwcnt = MatRowCnt(PO2r);	  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(PO2r,i,PO2rw);  				if (PO2rw.ArtCode==INr.Code) then begin  					//OutString(390,0,PO2rw.Quant,true);  					//OutString(400,0,PO2rw.Price,true);  					//OutString(420,0,PO2rw.Shipd1,true);  					//OutString(430,0,PO2rw.Shipd2,true);  					//OutString(420,0,POQty,true);  					//OutString(430,0,POUnOkQty,true);  					//POQty = PO2rw.Shipd1;  					POUnOkQty = PO2rw.Shipd2;  					POQty = POQty - PO2rw.Shipd2;  					//restok = restok + POQty;						//restunok = restunok + POUnOkQty;						nofindf = false;  				end;  			end;  			/*if(nofindf)then begin  				//OutString(390,0,"",true);					//OutString(400,0,"",true);					OutString(420,0,"",true);					OutString(430,0,"",true);  			end;*/  			OutString(360,0,POQty,false);				OutString(380,0,POUnOkQty,false);												restok = restok + POQty;				restunok = restunok + POUnOkQty;  			OutString(420,0,restok,false);  			OutString(450,0,restunok,false);  		EndFormat;  	end;  end;      EndJob;  return;end;