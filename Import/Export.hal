external function LongInt TimeDiffInSeconds(Time,Time);global procedure ExpSalesStatEn(record RcVc RepSpec)beginrecord IVVc IVr;row IVVc IVrw;string 50 location;boolean TrHs,testf;integer i,mtrw,lines;	location = RepSpec.f1;		if(nonblank(location))then begin				IVr.Location = location;		TrHs = true;		While(loopkey("Location",IVr,1,true)) begin	  	testf = true;	  	if(IVr.Location!=location)then begin testf = false; TrHs = false; end;	  	if(IVr.OKFlag==0)then begin testf = false; end;	  	if(IVr.Invalid==1)then begin testf = false; end;	  	lines = 0;	  		  	if(testf)then begin	  		mtrw = matrowcnt(IVr);	  		For(i=0;i<mtrw;i=i+1) begin	  			matrowget(IVr,i,IVrw);	  			if(IVrw.stp==kInvoiceRowTypeNormal)then begin	  				if(IVrw.Sum!=0)then begin	  					lines = lines + 1;	  				end;	  			end;				end; 	 				ExportPadString("\"" & location & "\",",len(location)+3,"",false);				ExportPadString("\"" & DateToString(IVr.InvDate,"YYYY/MM/DD") & "\",",len(DateToString(IVr.InvDate,"YYYY/MM/DD"))+3,"",false);				ExportPadString(TimeDiffInSeconds(stringtotime("0:0:0"),addhours(IVr.TransTime,1)) & ",",len(TimeDiffInSeconds(stringtotime("0:0:0"),addhours(IVr.TransTime,1)))+1,"",false);				ExportPadString(GetDateID(IVr.InvDate) & ",",len(GetDateID(IVr.InvDate))+1,"",false);				ExportPadString(gethour(IVr.TransTime)+1 & ",",len(gethour(IVr.TransTime)+1)+1,"",false);				ExportPadString(lines & ",",len(lines)+1,"",false);				ExportPadString(valtostring(IVr.Sum4,M4UVal,"",".",0),len(valtostring(IVr.Sum4,M4UVal,"",".",0)),"",false);				ExportPadString(chr(13) & chr(10),2,"",false);	  	end;		end; 					end;return;end;global procedure ExpItemsBarCodesEn(record RcVc RepSpec)beginrecord INVc INr;boolean TrHs,testf;integer i,mtrw,lines;record PLVc PLr;record ItemStatusVc ISr;val rrpprice;				setexportcodepage("UTF-8");		INr.Code = "";		TrHs = true;		While(loopmain(INr,1,true)) begin	  	testf = true;	  	if (INr.NotForSales!=0) then begin testf = false; end;	  		  	if(testf)then begin	  		testf = false;				ISr.Code = INr.Code;				ISr.Location = "3-RAY";				if(readfirstmain(ISr,2,true))then begin testf = true; end;				ISr.Code = INr.Code;				ISr.Location = "4-NIZ";				if(readfirstmain(ISr,2,true))then begin testf = true; end;				ISr.Code = INr.Code;				ISr.Location = "6-KV";				if(readfirstmain(ISr,2,true))then begin testf = true; end;				ISr.Code = INr.Code;				ISr.Location = "RYBRAY";				if(readfirstmain(ISr,2,true))then begin testf = true; end;	  		  	end;	  		  	rrpprice = blankval;	  	if(testf)then begin	  		PLr.ArtCode = INr.Code;				PLr.PLCode = "RRP";				if(!readfirstmain(PLr,2,true))then begin					testf = false;				end else begin					rrpprice = PLr.ExVatPrice;				end;	  	end;	  		  	if(testf)then begin				ExportPadString(INr.BarCode & ";",BytesInString(INr.BarCode)+1,"",false);				ExportPadString(INr.Code & ";",BytesInString(INr.Code)+1,"",false);				ExportPadString(INr.Name & ";",BytesInString(INr.Name)+1,"",false);				/*PLr.ArtCode = INr.Code;				PLr.PLCode = "RRP";				readfirstmain(PLr,2,true);*/				ExportPadString(";",1,"",false);				ExportPadString(rrpprice & ";",len(rrpprice)+1,"",false);				ExportPadString(INr.UserStr1 & ";",BytesInString(INr.UserStr1)+1,"",false);				ExportPadString(chr(13) & chr(10),2,"",false);	  	end;		end; return;end;global procedure ExpItemsBarCodeOptsEn(record RcVc RepSpec)beginrecord INVc INr;boolean TrHs,testf;integer i,mtrw,lines;record PLVc PLr;record ItemStatusVc ISr;val rrpprice,optprice;		setexportcodepage("UTF-8");		INr.Code = "";		TrHs = true;		While(loopmain(INr,1,true)) begin	  	testf = true;	  	if (INr.NotForSales!=0) then begin testf = false; end;	  		  	if(testf)then begin	  		testf = false;				ISr.Code = INr.Code;				ISr.Location = "3-RAY";				if(readfirstmain(ISr,2,true))then begin testf = true; end;				ISr.Code = INr.Code;				ISr.Location = "4-NIZ";				if(readfirstmain(ISr,2,true))then begin testf = true; end;				ISr.Code = INr.Code;				ISr.Location = "6-KV";				if(readfirstmain(ISr,2,true))then begin testf = true; end;				ISr.Code = INr.Code;				ISr.Location = "RYBRAY";				if(readfirstmain(ISr,2,true))then begin testf = true; end;	  	end;	  		  	//rrpprice = blankval;	  	optprice = blankval;	  		  	if(testf)then begin	  		PLr.ArtCode = INr.Code;				PLr.PLCode = "OPT";				if(!readfirstmain(PLr,2,true))then begin					testf = false;				end else begin					optprice = PLr.ExVatPrice;				end;	  	end;	  		  	if(testf)then begin				ExportPadString(INr.BarCode & ";",BytesInString(INr.BarCode)+1,"",false);				ExportPadString(INr.Code & ";",BytesInString(INr.Code)+1,"",false);				ExportPadString(INr.Name & ";",BytesInString(INr.Name)+1,"",false);				/*PLr.ArtCode = INr.Code;				PLr.PLCode = "OPT";				readfirstmain(PLr,2,true);*/				ExportPadString(optprice & ";",len(optprice)+1,"",false);				PLr.ArtCode = INr.Code;				PLr.PLCode = "RRP";				readfirstmain(PLr,2,true);				ExportPadString(PLr.ExVatPrice & ";",len(PLr.ExVatPrice)+1,"",false);				ExportPadString(INr.UserStr1 & ";",BytesInString(INr.UserStr1)+1,"",false);				ExportPadString(chr(13) & chr(10),2,"",false);	  	end;		end; return;end;global procedure ExportAllItems(record RcVc RepSpec)begin	record ExportStockCSVBlock ExportStockCSVb;	string 250 tstr;		BlockLoad(ExportStockCSVb);	setfileonserver(true);		createfile("ItemsOPT.csv");		openexportfile("ItemsOPT.csv",false);			ExpItemsBarCodeOptsEn(RepSpec);		closefile;				createfile("ItemsRRP.csv");		openexportfile("ItemsRRP.csv",false);			ExpItemsBarCodesEn(RepSpec);		closefile;						tstr = "188.40.105.5" & " " & "21" & " ";		tstr = tstr & "mobileapp" & " ";		tstr = tstr & "5UTp4G4c" & " ";		tstr = tstr & "/" & " " & "ItemsOPT.csv ItemsRRP.csv";		RunProgram("./ftptransfercsv.sh", tstr);			setfileonserver(true);return;end;