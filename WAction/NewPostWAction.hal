function Boolean NPSettingsTClassSenderEFAfter(Integer wn,Integer changed)		//Edit----------------------Dima  27.04.2015begin  	record NPCounterpartySenderVc NPCSr;	record NPSettingsBlock NPSettingsb;	record NPCityVc NPCityr;	  if (changed!=0) then begin      GetWindowRecord(wn,NPSettingsb);		NPCSr.Ref = NPSettingsb.DefSenderRef;		if (ReadFirstKey("Ref",NPCSr,1,true))  then begin				NPSettingsb.DefSenderDescription = NPCSr.Description;				NPSettingsb.DefSenderCityDescription = NPCSr.CityDescription;				NPSettingsb.DefSenderCityRef = NPCSr.CityRef;						end;    PutWindowRecord(wn,NPSettingsb);  end;    NPSettingsTClassSenderEFAfter = true;  return;end;function Boolean NPSettingsTClassSender1EFAfter(Integer wn,Integer changed)		//Edit----------------------Dima  27.04.2015begin  	record NPCounterpartySenderVc NPCSr;	record NPSettingsBlock NPSettingsb;	record NPCityVc NPCityr;	  if (changed!=0) then begin      GetWindowRecord(wn,NPSettingsb);		NPCSr.Ref = NPSettingsb.DefSenderRef1;		if (ReadFirstKey("Ref",NPCSr,1,true))  then begin				NPSettingsb.DefSenderDescription1 = NPCSr.Description;				NPSettingsb.DefSenderCityDescription1 = NPCSr.CityDescription;				NPSettingsb.DefSenderCityRef1 = NPCSr.CityRef;						end;    PutWindowRecord(wn,NPSettingsb);  end;    NPSettingsTClassSender1EFAfter = true;  return;end;globalfunction Boolean NPSettingsTClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)	//Edit----------------------Dima  27.04.2015BEGIN  Boolean res;  switch (fieldname) begin    case "DefSenderRef": res = NPSettingsTClassSenderEFAfter(wn,changed);    case "DefSenderRef1": res = NPSettingsTClassSender1EFAfter(wn,changed);  end;  NPSettingsTClassAfterEditField = res;  RETURN;END; procedure NPPasteWarehouseSH(integer wn,var string subset)begin  record SHVc SHr;    GetWindowRecord(wn,SHr);  switch (WindowActiveField(wn)) begin		case "NPSenderWarehouse":			subset = SHr.NPCitySender;		case "NPRecipientWarehouse":			subset = SHr.NPCityRecipient;			case "AdNPRecipientWarehouse":			subset = SHr.NPCityRecipient;			end;end;procedure NPPasteStreetSH(integer wn,var string subset)begin  record SHVc SHr;    GetWindowRecord(wn,SHr);  switch (WindowActiveField(wn)) begin		case "NPAdresStreet":			subset = SHr.NPCityRecipient;			end;end;procedure NPPasteWarehouseOR(integer wn,var string subset)begin  record ORVc ORr;    GetWindowRecord(wn,ORr);  switch (WindowActiveField(wn)) begin		case "NPWarehouse":			subset = ORr.NPCityRecipient;			case "AdNPWarehouse":			subset = ORr.NPCityRecipient;	end;end;procedure NPPasteStreetOR(integer wn,var string subset)begin  record ORVc ORr;    GetWindowRecord(wn,ORr);  switch (WindowActiveField(wn)) begin		case "NPAdresStreet":			subset = ORr.NPCityRecipient;		end;end;procedure NPPasteWarehouseSettings(integer wn,var string subset)begin  record NPSettingsBlock NPSettb;    GetWindowRecord(wn,NPSettb);	subset = NPSettb.DefSenderCityDescription;	end;globalfunction Boolean NPWarehouseSClassOnOpenWindow(Integer wn)begin  string 200 subset;  string 50 windowClass;  integer mwn;    mwn = MotherWindow(wn);    windowClass = GetWindowClass(mwn);  switch(windowClass) begin  case "ORDClass":    		NPPasteWarehouseOR(mwn,subset);  case "SHDClass":    		NPPasteWarehouseSH(mwn,subset);   case "NPSettingsTClass":    		NPPasteWarehouseSettings(mwn,subset);  end;     SetWindowSubset(wn,subset);    NPWarehouseSClassOnOpenWindow = false;  return;end;globalfunction Boolean NPStreetSClassOnOpenWindow(Integer wn)begin  string 200 subset;  string 50 windowClass;  integer mwn;    mwn = MotherWindow(wn);    windowClass = GetWindowClass(mwn);  switch(windowClass) begin  case "ORDClass":    		NPPasteStreetOR(mwn,subset);  case "SHDClass":    		NPPasteStreetSH(mwn,subset);   end;     SetWindowSubset(wn,subset);    NPStreetSClassOnOpenWindow = false;  return;end;