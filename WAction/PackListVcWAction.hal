remote procedure SumUpPackList(var record PackListVc);function Boolean PackListDClassCodeEFAfter(Integer wn,Integer changed,Integer rownr)begin    record PackListVc PackListr;  record StandBoxesVc StandBoxesr;  row PackListVc PackListrw;  if (changed!=0 and rownr>-1) then begin      GetWindowRecord(wn,PackListr);    MatRowGet(PackListr,rownr,PackListrw);    StandBoxesr.Code = PackListrw.Code;    if (NonBlank(PackListrw.Code) and ReadFirstMain(StandBoxesr,1,true)) then begin      PackListrw.Name = StandBoxesr.Name;      PackListrw.Length = StandBoxesr.Length;      PackListrw.Width = StandBoxesr.Width;      PackListrw.Height = StandBoxesr.Height;      PackListrw.Volume = StandBoxesr.Volume;      PackListrw.Weight = StandBoxesr.Weight;      MatRowPut(PackListr,rownr,PackListrw);    end;    if (Blank(PackListrw.Code)) then begin      PackListrw.Name = "";      PackListrw.Length = BlankVal;      PackListrw.Width = BlankVal;      PackListrw.Height = BlankVal;      PackListrw.Volume = BlankVal;      PackListrw.Weight = BlankVal;      MatRowPut(PackListr,rownr,PackListrw);    end;     SumUpPackList(PackListr);    PutWindowRecord(wn,PackListr);  end;    PackListDClassCodeEFAfter = true;  return;end;function Boolean PackListDClassVolumeEFAfter(Integer wn,Integer changed,Integer rownr)begin    record PackListVc PackListr;  row PackListVc PackListrw;  if (changed!=0 and rownr>-1) then begin      GetWindowRecord(wn,PackListr);    SumUpPackList(PackListr);    PutWindowRecord(wn,PackListr);  end;    PackListDClassVolumeEFAfter = true;  return;end;function Boolean PackListDClassWeightEFAfter(Integer wn,Integer changed,Integer rownr)begin    record PackListVc PackListr;  row PackListVc PackListrw;  if (changed!=0 and rownr>-1) then begin      GetWindowRecord(wn,PackListr);    SumUpPackList(PackListr);    PutWindowRecord(wn,PackListr);  end;    PackListDClassWeightEFAfter = true;  return;end;globalfunction Boolean PackListDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)BEGIN  Boolean res;  switch (fieldname) begin    case "Code": res = PackListDClassCodeEFAfter(wn,changed,rownr);    case "Volume": res = PackListDClassVolumeEFAfter(wn,changed,rownr);    case "Weight": res = PackListDClassWeightEFAfter(wn,changed,rownr);  end;  PackListDClassAfterEditField = res;  RETURN;END;globalfunction Boolean PackListDClassOnOverStrike(Integer wn,Integer rownr)BEGIN  record PackListVc PackListr;  if (rownr>=0) then begin    GetWindowRecord(wn,PackListr);    SumUpPackList(PackListr);    PutWindowRecord(wn,PackListr);      end;  PackListDClassOnOverStrike = true;  RETURN;END;