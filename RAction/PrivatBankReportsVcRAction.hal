external function Boolean PasteInvIn2IPr(var record IPVc,Integer,Date,var val,Boolean,var Boolean); //Edit***************************Sasha2,14:50 18.02.2015
external function Boolean IPVc_PasteCustCode(var record IPVc,Integer,var LongInt); //Edit***************************Sasha2,14:55 18.02.2015
external procedure IPVc_PasteRecCurncy(var record IPVc,Integer); //Edit***************************Sasha2,14:59 18.02.2015
external procedure IPVc_PasteRecVal(var record IPVc,Integer); //Edit***************************Sasha2,15:03 18.02.2015
external procedure IPSumup(var record IPVc); //Edit***************************Sasha2,15:00 18.02.2015
external function LongInt IPVcRecordCheck(var record IPVc,record IPVc,LongInt,LongInt); //Edit***************************Sasha2,15:56 18.02.2015
external procedure IPPastePayMode(var record IPVc); //Edit***************************Sasha2,16:12 18.02.2015
external function longint NextCUPNumber(); //Edit***************************Sasha2,9:45 19.02.2015
external procedure IPVc_PasteBankCurncy(var record IPVc,Integer); //Edit***************************Sasha2,10:19 19.02.2015
external procedure RecordAction_raExpandAllPayments(var record IPVc);// Edit ************************** Thursday, 12 January 2017 11:54:55



global updating procedure FillIPVcPayment(record PrivatBankReportsVc PBRr, var record IPVc IPr)
begin
  record IPVc oldIPr;
  row IPVc IPrw;
  record IVVc IVr;
  record ORVc ORr;
  integer rwcnt;
  boolean TrHs,exist;
  Boolean installmentf;
  val chk;  
  record IPrsVc IPrsr;
	record DefCashBlock DCBlb;
	string 255 tstr,ordnum,temordnum,custcode,c;
	integer i,length;
	longint error;
  
  BlockLoad(DCBlb);
  	
	rwcnt = MatRowCnt(IPr);
	
	tstr = PBRr.Purpose;
	length = len(tstr);
	if(length>9)then begin
		For(i=0;i<length;i=i+1) begin
			c = mid(tstr,i,1);
	  	if((asc(c)>47 and asc(c)<58) or c=="-")then begin
	  		temordnum = temordnum & c;
	  	end else begin
	  		temordnum = "";
	  	end;
	  	if(len(temordnum)==9 or len(temordnum)==11)then begin
				ordnum = temordnum;
			end;
	  	
		end; 
	end;
	
	custcode = "NONAME";
	
	if(len(ordnum)==9 or len(ordnum)==11)then begin
		
		ORr.CustOrdNr = ordnum;
		logtext(0,"******************************FindOrder " & ORr.CustOrdNr);
		if(readfirstkey("CustOrdNr",ORr,1,true))then begin
			custcode = ORr.CustCode;
		end else begin
			if(len(ordnum)==11)then begin
				ORr.CustOrdNr = StringToLongInt(left(ordnum,9));
				if(readfirstkey("CustOrdNr",ORr,1,true))then begin
					custcode = ORr.CustCode;
				end else begin
					if(len(ordnum)==9)then begin
						ordnum = ordnum & "-1";
						ORr.CustOrdNr = ordnum;
						if(readfirstkey("CustOrdNr",ORr,1,true))then begin
							custcode = ORr.CustCode;
						end;
					end;
				end;
			end;
		end;
	end;
	
	ClearRow(IPr,IPrw,kReceiptRowTypeNormal);
	IPrw.CustCode = custcode;
	MatRowPut(IPr,rwcnt,IPrw);
	IPVc_PasteCustCode(IPr,rwcnt,error);
	MatRowGet(IPr,rwcnt,IPrw);
	IPrw.RecCurncy = "UAH_R";
	MatRowPut(IPr,rwcnt,IPrw);
	IPVc_PasteRecCurncy(IPr,rwcnt);
	MatRowGet(IPr,rwcnt,IPrw);
	IPrw.RecVal = PBRr.Sum;
	logtext(0,PBRr.Sum);
	IPrw.CustName = left(PBRr.Name & " " & PBRr.Purpose & " " & PBRr.TransTime,200);
	logtext(0,IPrw.CustName);
	MatRowPut(IPr,rwcnt,IPrw);
	IPVc_PasteRecVal(IPr,rwcnt);
	MatRowGet(IPr,rwcnt,IPrw);
	//RecordAction_raExpandAllPayments(IPr);// Edit ************************** Thursday, 12 January 2017 11:58:59
	
	IPr.PayMode = DCBlb.DefCredCashPayDeal;
	IPPastePayMode(IPr);
	
	//IPr.OKFlag = 1;
	IPSumup(IPr);
	//IPVcRecordCheck(IPr,IP2r,1,0); //for MakeTransFromIP
	IPr.Comment = "Privat Bank Import";
	RecordStore(IPr,true);      

return;
end;




global
updating function LongInt PrivatBankReportsVcRecordSaveAfter(var record PrivatBankReportsVc PBRr,record PrivatBankReportsVc PBR2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
	record IPVc IPr;
  boolean TrHs,testf,foundf;
  integer i,mtrw;
  
  
  IPr.TransDate = PBRr.TransDate;
  
  logtext(0,"PrivatBankReportsVcRecordSaveAfter");
  
  if(PBRr.State=="r" and PBRr.FlInfo=="r")then begin
		foundf = false;
		TrHs = true;
		while(loopkey("TransDate",IPr,1,TrHs))begin
			testf = true;
			if(IPr.TransDate!=PBRr.TransDate)then begin TrHs = false; testf = false; end;
			if(IPr.OKFlag==1)then begin testf = false; end;
			if(IPr.Comment!="Privat Bank Import")then begin testf = false; end;
			if(IPr.CollectPayments!=2)then begin testf = false; end;
		
			if(testf)then begin
				foundf = true;
				FillIPVcPayment(PBRr,IPr); 
				TrHs = false; 		
			end;
		
		end;
	
		if(foundf==false)then begin
			recordnew(IPr);
			IPr.Comment = "Privat Bank Import";
			IPr.SerNr = NextSerNr("IPVc",CurrentDate,-1,false,"");		
			logtext(0,"IPr.SerNr " & IPr.SerNr);
			IPr.CollectPayments = 2;
			IPr.TransDate = PBRr.TransDate;	 
			FillIPVcPayment(PBRr,IPr);
		end;
  end;
    
  PrivatBankReportsVcRecordSaveAfter = res;
  RETURN;
END;