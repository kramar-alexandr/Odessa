external function longint DateDiff(date,date);
external function longint TimeDiff(time,time);
external function longint ExactTimeDiff(Time,Time,var Time);
external function longint TimeDiffInSeconds(Time,Time);
external function Boolean FindTheUser(var record UserVc);
external procedure ExtractObj(string,var Integer,var string);
external function LongInt POSNETHexToLong(string);
//external function boolean MySendRawWebmainRequest(string, string, boolean, string, string, string, string, boolean, area, var area, integer);
external procedure TSVc_PastePRCode(var record TSVc,Integer);
external procedure TSVc_PasteEMCode(var record TSVc,Integer);
external function Boolean TSVc_PasteArtCode(var record TSVc,Integer,var string);
external function Boolean FindStringInString(string, string);
//external function Boolean SendRawWebRequest(string,LongInt,Boolean,string,string,string,string,Boolean,area,area,LongInt);
external function boolean MySendRawWebRequest(string, string, boolean, string, string, string, string, boolean, area, var area, integer);
external function string 255 ConvertXml(string);
external function string 255 ConvertXmlString(string,Boolean);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);


SetLangMode(LangRussian,"RUS",0); 

global
procedure GetXMLArea(var area a)
begin
  longint alen,i,outlen;
  area out;
  longint nodelen,res;
  string 100 str;
  		
  res = 0;
  
  alen = GetAreaLength(a);
  if(alen>0)then begin  
		for(i=0;i<alen;i=i+1)begin
			str = GetStringFromArea(a,i,1);
			if(str==(chr(60)))then begin
				res = GetAreaFromArea(a,i,alen-i,out);
				goto GetXMLAreaPoint;
			end;
		end;
	end else begin
				logtext(0,"XML file is empty.")
				SetAreaZeroSize(a);
				goto GetXMLAreaPoint2;
		end;
	
	GetXMLAreaPoint:;
	
	setareazerosize(a);
	outlen = GetAreaLength(out);
	GetAreaFromArea(out,0,outlen,a);
	
	GetXMLAreaPoint2:;
	   
  return;
end;


function val CalculateCostFromORVc(record SHVc SHr)
begin
 val cost;
 record ORVc ORr;
 row ORVc ORrw;
 row SHVc SHrw;
 integer i,rwcnt,qty;
 val t,fr,to1,to2,br1,br2;
 string 5 curncy;
 
 cost = 0;
 rwcnt = MatRowCnt(SHr);
 ORr.SerNr = SHr.OrderNr;
 if (ReadFirstMain(ORr,1,true)) then begin
  	for (i=0; i<rwcnt;i=i+1) begin
			MatRowGet(SHr,i,SHrw);
			MatRowGet(ORr,SHrw.OrdRow,ORrw);
			cost = cost + ORrw.Sum*SHrw.Ordered/ORrw.Quant;  	
  	end; 
 end; 
  
 if(ORr.CurncyCode == "USD") then begin
		curncy = "UAH";
 		GetFullCurncyRate(curncy,CurrentDate,fr,to1,to2,br1,br2);
 		cost = cost * fr/to1;
 end;
 
 CalculateCostFromORVc = cost;
return;  
end;


procedure NPParseErrors(xml xdata,var string errors)
begin
	integer nodecnt,i;
	string 50 nodeName;
	string 255 err;
	
	
  	nodecnt = XmlCountChildren(xdata,"root/errors");
  	if (nodecnt>2) then begin nodecnt=2; end; 	//!! some bullshit. I can't get children more than 2
  	
		for(i=0;i<nodecnt;i=i+1) begin	
			nodeName = XmlGetChildName(xdata,"root/errors",i);
			err = XmlGet(xdata,"root/errors/" & nodeName);
			errors = errors & i+1 & ". " & err & chr(13);
		end;						
			
end; 

procedure NPCreateENRequest(record SHVc SHr, string aHost, string aPage, string aKey, string aModel, string aMethod, string aParam, var area aRequest)
begin
	string 255 TypeOfPayer, PaymentForm, CargoType, Descrip, Sender, SenderAddress, ContactSender;
	string 255 SendersPhone, CityRecipient, Recipient, RecipientAddress, ContactRecipient, RecipientsPhone;
	string 255 CitySender,BackDeliveryType,BackDeliveryPayer;
	val Volume, Weight;
	integer SeatsAmount,i;
	val Cost;
	record NPTypesOfPayersVc TypeOfPayerr;
	record NPPaymentFormsVc PaymentFormr;
	record NPCargoTypeVc CargoTyper;
	record PackListVc PackListr;
	row PackListVc PackListrw;
	record NPDescripVc Descripr;
	record ORVc ORr;
	record NPCounterpartySenderVc CounterpartySenderr;
	row NPCounterpartySenderVc Senderrw;
	date curdate;
	integer dd, mm, yyyy;
	record NPCityVc Cityr;
	record NPWarehouseVc Warehouser;
	record NPCounterpartyVc Counterpartyr;
	row NPCounterpartyVc Counterpartyrw;
	record NPBackDelivCargoTypeVc BackCargoTyper;
	record NPTypesOfPayersRedeliveryVc BackTypeOfPayer;
  record SysFormatBlock SysFormatRec;
  val length,width,height;
  
  
  BlockLoad(SysFormatRec);	
	
  TypeOfPayerr.Description = SHr.NPPayer;
  if(ReadFirstMain(TypeOfPayerr, 1, true)) then begin
	  TypeOfPayer = TypeOfPayerr.Ref;
  end;
  
  PaymentFormr.Description = SHr.NPPaymentMethod;
  if(ReadFirstMain(PaymentFormr, 1, true)) then begin
	  PaymentForm = PaymentFormr.Ref;
  end;
  
  CargoTyper.Description = SHr.NPCargoType;
  if(ReadFirstMain(CargoTyper, 1, true)) then begin
	  CargoType = CargoTyper.Ref;
  end;
  
  PackListr.SerNr = SHr.SerNr;
  if(readFirstMain(PackListr, 1, true)) then begin
		if(PackListr.TotWeight < 0.1) then begin
	  	Weight = 0.1;
	  end else begin
	  	Weight = PackListr.TotWeight;
	  end;
		logtext(0, PackListr.TotVolume);
	  Volume = PackListr.TotVolume;
	  SeatsAmount = MatRowCnt(PackListr);
  end;
  
  Descripr.Description = SHr.NPCargoDescription;
  if(ReadFirstMain(Descripr, 1, true)) then begin
	  Descrip = Descripr.Ref;
  end;
  
  ORr.SerNr = SHr.OrderNr;
  if(ReadFirstMain(ORr, 1, true)) then begin
  	Cost = CalculateCostFromORVc(SHr);
  	RecipientsPhone = ORr.NPPhone;
  end;
  
  Cityr.City = SHr.NPCitySender;
  if(ReadFirstMain(Cityr, 1, true)) then begin
	  CitySender = Cityr.Ref;
  end;
  
  SendersPhone = SHr.NPSendersPhone;
  

  Warehouser.Number = SHr.NPSenderWarehouse;	
  Warehouser.City = SHr.NPCitySender;
  if(ReadFirstkey("City", Warehouser, 2, true)) then begin
	  SenderAddress = Warehouser.Ref;									//NP Warehouse
  end;
  
  Cityr.City = SHr.NPCityRecipient;
  if(ReadFirstMain(Cityr, 1, true)) then begin
	  CityRecipient = Cityr.Ref;
  end;
  
  
  
  CounterpartySenderr.Description = SHr.NPSender;
  CounterpartySenderr.CityDescription = SHr.NPCitySender;
  CounterpartySenderr.Phone = SHr.NPSendersPhone;
  if(ReadFirstKey("Description",CounterpartySenderr, 3, true))then begin
  	Sender = CounterpartySenderr.Ref;
  	matrowget(CounterpartySenderr, 0, Senderrw);
  		ContactSender = Senderrw.Ref;  
  end;
  
  Counterpartyr.LastName = SHr.NPRecipientLastName;
  Counterpartyr.FirstName = SHr.NPRecipientFirstName;
  Counterpartyr.Phone = RecipientsPhone;
  Counterpartyr.CityRef = CityRecipient;
  if(ReadFirstMain(Counterpartyr, 4, true))then begin
  	Recipient = Counterpartyr.Ref;
  	matrowget(Counterpartyr, 0, Counterpartyrw);
  		ContactRecipient = Counterpartyrw.Ref;
  
  end;
  
  
  Warehouser.Number = SHr.NPRecipientWarehouse;
  Warehouser.City = SHr.NPCityRecipient;
  if(ReadFirstkey("City", Warehouser, 2, true)) then begin
	  RecipientAddress = Warehouser.Ref;									
  end;  
  
	curdate = CurrentDate;
	dd = GetDay(curdate);
	mm = GetMonth(curdate);
	yyyy = GetYear(curdate);
	
	BackCargoTyper.Description = SHr.NPBackDeliveryType;
	if (ReadFirstMain(BackCargoTyper,1,true)) then begin
		BackDeliveryType = BackCargoTyper.Ref;
	end;	
	
	BackTypeOfPayer.Description = SHr.NPBackDeliveryPayer;
	if (ReadFirstMain(BackTypeOfPayer,1,true)) then begin
		BackDeliveryPayer = BackTypeOfPayer.Ref;
	end;		

  addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aHost & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
  	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("		<methodProperties>"& chr(13),aRequest);
	
	if(aMethod == "update")then begin
		AddTextToArea("				<Ref>" & ConvertXml(SHr.NPDocumentRef) & "</Ref>" & chr(13),aRequest);
	end;

  AddTextToArea("				<PayerType>" & ConvertXml(TypeOfPayer) & "</PayerType>" & chr(13),aRequest);
  AddTextToArea("				<PaymentMethod>" & ConvertXml(PaymentForm) & "</PaymentMethod>" & chr(13),aRequest);
  AddTextToArea("				<DateTime>" & ConvertXml(dd & "." & mm & "." & yyyy) & "</DateTime>" & chr(13),aRequest);//"29.04.2015"
  AddTextToArea("				<CargoType>" & ConvertXml(CargoType) & "</CargoType>" & chr(13),aRequest);
  AddTextToArea("				<VolumeGeneral>" & ConvertXml(ValToString(Volume,M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,0)) & "</VolumeGeneral>" & chr(13),aRequest);
  AddTextToArea("				<Weight>" & ConvertXml(Weight) & "</Weight>" & chr(13),aRequest);
  AddTextToArea("				<ServiceType>" & ConvertXml("WarehouseWarehouse") & "</ServiceType>" & chr(13),aRequest);
  AddTextToArea("				<SeatsAmount>" & ConvertXml(SeatsAmount) & "</SeatsAmount>" & chr(13),aRequest);
  AddTextToArea("				<Description>" & ConvertXml(Descrip) & "</Description>" & chr(13),aRequest);
  AddTextToArea("				<Cost>" & ConvertXml(Cost) & "</Cost>" & chr(13),aRequest);
  AddTextToArea("				<CitySender>" & ConvertXml(CitySender) & "</CitySender>" & chr(13),aRequest);	//!
  AddTextToArea("				<Sender>" & ConvertXml(Sender) & "</Sender>" & chr(13),aRequest);
  AddTextToArea("				<SenderAddress>" & ConvertXml(SenderAddress) & "</SenderAddress>" & chr(13),aRequest);
  AddTextToArea("				<ContactSender>" & ConvertXml(ContactSender) & "</ContactSender>" & chr(13),aRequest);
  AddTextToArea("				<SendersPhone>" & ConvertXml(SendersPhone) & "</SendersPhone>" & chr(13),aRequest);
  AddTextToArea("				<CityRecipient>" & ConvertXml(CityRecipient) & "</CityRecipient>" & chr(13),aRequest);
  AddTextToArea("				<Recipient>" & ConvertXml(Recipient) & "</Recipient>" & chr(13),aRequest);
  AddTextToArea("				<RecipientAddress>" & ConvertXml(RecipientAddress) & "</RecipientAddress>" & chr(13),aRequest);
  AddTextToArea("				<ContactRecipient>" & ConvertXml(ContactRecipient) & "</ContactRecipient>" & chr(13),aRequest);
  AddTextToArea("				<RecipientsPhone>" & ConvertXml(RecipientsPhone) & "</RecipientsPhone>" & chr(13),aRequest);
  
	if (SeatsAmount>1) then begin
		AddTextToArea("		<OptionsSeat>"& chr(13),aRequest);
		for(i=0;i<SeatsAmount;i=i+1) begin
			MatRowGet(PackListr,i,PackListrw);
				if (nonblank(PackListrw.Volume) and nonblank(PackListrw.Weight)) then begin
					length = PackListrw.Length;
					width = PackListrw.Width;
					height = PackListrw.Height;
					if (blank(length) or blank(width) or blank(height)) then begin
						height = 0;
						width = 0;
						length = 0;
					end;
					AddTextToArea("		<item>"& chr(13),aRequest);
 					AddTextToArea("				<volumetricWidth>" & ConvertXml(width) & "</volumetricWidth>" & chr(13),aRequest);	
 					AddTextToArea("				<volumetricLength>" & ConvertXml(length) & "</volumetricLength>" & chr(13),aRequest);
 					AddTextToArea("				<volumetricHeight>" & ConvertXml(height) & "</volumetricHeight>" & chr(13),aRequest);
	 				AddTextToArea("				<volumetricVolume>" & ConvertXml(ValToString(PackListrw.Volume,M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,0)) & "</volumetricVolume>" & chr(13),aRequest);
 					AddTextToArea("				<weight>" & ConvertXml(PackListrw.Weight) & "</weight>" & chr(13),aRequest);		
 					AddTextToArea("		</item>" & chr(13),aRequest);
 				end;
		end;
		AddTextToArea("		</OptionsSeat>"& chr(13),aRequest);	
	end;  
	
	if (ORr.NPPaymentType == 1) then begin	//cash on delivery
				AddTextToArea("		<BackwardDeliveryData>"& chr(13),aRequest);
				AddTextToArea("		<item>"& chr(13),aRequest);
 				AddTextToArea("				<PayerType>" & ConvertXml(BackDeliveryPayer) & "</PayerType>" & chr(13),aRequest);	
 				AddTextToArea("				<CargoType>" & ConvertXml(BackDeliveryType) & "</CargoType>" & chr(13),aRequest);
 				AddTextToArea("				<RedeliveryString>" & ConvertXml(Cost) & "</RedeliveryString>" & chr(13),aRequest);	
 				AddTextToArea("		</item>" & chr(13),aRequest);
				AddTextToArea("		</BackwardDeliveryData>"& chr(13),aRequest);	
	end;	

  AddTextToArea("		</methodProperties>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);		//Working get doc status
	
	//writeareatofile(aRequest,"1autorization.txt",0);
  
return;
end;

global updating
procedure NPCreateRequestMn(var record SHVc SHr,var string errors)
begin
  area request,replyarea,mainRequest,extracted;
  string 255 username,filename;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  longint i;
  record NPSettingsBlock NPSettingsb;
  string 255 www;
  
	BlockLoad(NPSettingsb);  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	if(nonblank(SHr.NPIntDocNumber) and nonblank(SHr.NPDocumentRef))then begin
		NPCreateENRequest(SHr, host, page, NPSettingsb.APIkey, "InternetDocument","update", "", mainRequest);	
	end else
	begin
		NPCreateENRequest(SHr, host, page, NPSettingsb.APIkey, "InternetDocument","save", "", mainRequest);	
	end;

	AddTextToArea("" & chr(13) & chr(10),mainRequest);
	AddTextToArea("" & chr(13) & chr(10),mainRequest);

	writeareatofile(mainRequest,"1Request.txt",0);
	//messagebox(0,"In");

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,100))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    //logtext(0,"Hansa World: Connection on. Document has been saved.");
    writeareatofile(replyarea,"1reply.txt",0);
    
    GetXMLArea(replyarea);
    //writeareatofile(replyarea,"1CreateENReply.txt",0);
    xdata = ParseXMLArea(replyarea);
		i = 0;
		
		NPParseErrors(xdata,errors);

		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/IntDocNumber")) begin
		
			SHr.NPIntDocNumber = XmlGet(xdata,"root/data/item[" & i & "]/IntDocNumber");
			SHr.NPCostOnSite = XmlGet(xdata,"root/data/item[" & i & "]/CostOnSite");
			SHr.NPDocumentRef = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
		
			i = i + 1;
		end;
		
    
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
  return;
end;

procedure CreateAddressRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam, var area aRequest)
begin
  area request,replyarea,test;
  string 100 tstr;
  string 200 getParam, host, page, webAddr;
  string 20 timed;
  area basestring;   

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	//messagebox(0, urlencode("https://" & aWeb));
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("		<methodProperties>"& chr(13),aRequest);
  AddTextToArea("				<Page>" & ConvertXml("1") & "</Page>" & chr(13),aRequest);
  AddTextToArea("		</methodProperties>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1addresRequest.txt",0);
  
return;
end;


global updating
procedure NPGetCytiesRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, city, cityRU;
  longint i;
  record NPCityVc NPCityr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb); 
  
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetCytiesRequestMn;
  end;
   
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateAddressRequest(host, page, NPSettingsb.APIkey, "Address","getCities", "", mainRequest); //get status

	//messagebox(0,"In");

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: Connection on");
    //writeareatofile(replyarea,"1getStatusReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);

		i = 0;  
		
		if(CountRecords("NPCityVc") > 0) then begin
			NPCityr.City = "";
			while (LoopMain(NPCityr,1,true)) begin
				NPCityr.synchFlag = 0;
				if (RecordStore(NPCityr,true)) then begin		end;
			end;
		end;
		
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			city = XmlGet(xdata,"root/data/item[" & i & "]/Description");
			if(ReadFirstMain(NPCityr, 1, true))then begin //existing city
				NPCityr.synchFlag = 1;
				NPCityr.City = city;
				NPCityr.CityRU = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRu");
				NPCityr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
				NPCityr.Delivery1 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery1"));
				NPCityr.Delivery2 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery2"));
				NPCityr.Delivery3 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery3"));
				NPCityr.Delivery4 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery4"));
				NPCityr.Delivery5 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery5"));
				NPCityr.Delivery6 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery6"));
				NPCityr.Delivery7 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery7"));
				NPCityr.NPArea  = XmlGet(xdata,"root/data/item[" & i & "]/Area");
			
				if (RecordStore(NPCityr,true)) then begin		end;
			end else begin	//new city
				RecordNew(NPCityr);
					NPCityr.synchFlag = 1;
					NPCityr.City = city;
					NPCityr.CityRU = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRu");
					NPCityr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
					NPCityr.Delivery1 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery1"));
					NPCityr.Delivery2 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery2"));
					NPCityr.Delivery3 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery3"));
					NPCityr.Delivery4 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery4"));
					NPCityr.Delivery5 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery5"));
					NPCityr.Delivery6 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery6"));
					NPCityr.Delivery7 = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/Delivery7"));
					NPCityr.NPArea  = XmlGet(xdata,"root/data/item[" & i & "]/Area");
				if (RecordStore(NPCityr,true)) then begin		end;
			end;		
			logtext(0,"cityRU: " & i & " " & city);
			i = i + 1;
		end;
	
		ResetLoop	(NPCityr);

		TrHs = true;
		NPCityr.synchFlag = 0;
		//NPCityr.City = "";
		while (LoopKey("synchFlag",NPCityr,1,TrHs)) begin
			if (NPCityr.synchFlag!=0) then begin TrHs = false; end;
			if (TrHs) then begin
				RecordDelete(NPCityr);
				StepBack(NPCityr);
			end;
		end;
    
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
	LNPGetCytiesRequestMn:;
  return;
end;

procedure CreateCommonRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam, var area aRequest)
begin
  area request,replyarea,test;
  string 100 tstr;
  string 200 getParam, host, page, webAddr;
  string 20 timed;
  area basestring;   

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	//messagebox(0, urlencode("https://" & aWeb));
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1descriptionRequest.txt",0);
  
return;
end;

global updating
procedure NPGetDescriptionRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr, descrRU;
  longint i;
  record NPDescripVc NPDr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb); 
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetDescriptionRequestMn;
  end;
  
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getCargoDescriptionList", "", mainRequest); //get status
	

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetDescription");
    //writeareatofile(replyarea,"1getStatusReply.txt",0);
    
    GetXMLArea(replyarea);
    
   //addfiletoarea("1XML.txt",replyarea,false); 
  xdata = ParseXMLArea(replyarea);
    
  i = 0;  
  if(CountRecords("NPDescripVc") > 0) then begin
		NPDr.Description = "";
		while (LoopMain(NPDr,1,true)) begin
			NPDr.synchFlag = 0;
			if (RecordStore(NPDr,true)) then begin		end;
		end;
  end;
    
  while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
		descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");
		if(ReadFirstMain(NPDr, 1, true))then begin 
			NPDr.synchFlag = 1;
			NPDr.Description = descr;
			NPDr.DescriptionRU = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRu");
			NPDr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
					
			if (RecordStore(NPDr,true)) then begin		end;
		end else begin
			RecordNew(NPDr);
			NPDr.synchFlag = 1;
			NPDr.Description = descr;
			NPDr.DescriptionRU = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRu");
			NPDr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");			
			if (RecordStore(NPDr,true)) then begin		end;
		end;	
    i = i + 1;
  end;
  
  ResetLoop	(NPDr);

  TrHs = true;
  NPDr.synchFlag = 0;
  //NPDr.City = "";
  while (LoopKey("synchFlag",NPDr,1,TrHs)) begin
  	if (NPDr.synchFlag!=0) then begin TrHs = false; end;
    if (TrHs) then begin
    	RecordDelete(NPDr);
      StepBack(NPDr);
    end;
  end;
    
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
 	LNPGetDescriptionRequestMn:;
  return;
end;

global updating
procedure NPGetCargoTypeRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr, descrRU;
  longint i;
  record NPCargoTypeVc NPCTr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
	
	if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetCargoTypeRequestMn;
  end;  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getCargoTypes", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetCargoType");
    //writeareatofile(replyarea,"1CargoTypeReply.txt",0);
    
    GetXMLArea(replyarea);
    //writeareatofile(replyarea,"1CargoTypeReply2.txt",0);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPCTr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPCTr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPCTr.Description = descr;
				NPCTr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPCTr,true)) then begin		end;

			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
 	LNPGetCargoTypeRequestMn:;
  return;
end;

procedure CreateBackwardDeliveryCargoTypesRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam, var area aRequest)
begin
  area request,replyarea,test;
  string 100 tstr;
  string 200 getParam, host, page, webAddr;
  string 20 timed;
  area basestring;   

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	//messagebox(0, urlencode("https://" & aWeb));
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("			<methodProperties>"& chr(13),aRequest);
 // AddTextToArea("   		<CounterpartyRef>" & ConvertXml(aParam) & "</CounterpartyRef>" & chr(13),aRequest);
	 AddTextToArea("		</methodProperties>" & chr(13),aRequest)
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1descriptionRequest.txt",0);
  
return;
end;

global updating
procedure NPGetBackCargoTypeRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr, descrRU;
  string 60 delivRef;
  longint i;
  record NPBackDelivCargoTypeVc NPBr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
	
	if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetBackCargoTypeRequestMn;
  end; 	  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/"; 
 
	CreateBackwardDeliveryCargoTypesRequest(host, page, NPSettingsb.APIkey, "Common","getBackwardDeliveryCargoTypes", " ", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetBackCargoType");
    //writeareatofile(replyarea,"1GetBackCargoType.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPBr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPBr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPBr.Description = descr;
				NPBr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPBr,true)) then begin		end;		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
 	LNPGetBackCargoTypeRequestMn:;
  return;
end;

global updating
procedure NPgetDocumentStatusesMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr, descrRU;
  longint i;
  record NPDocStateVc NPDSr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
	
	if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPgetDocumentStatusesMn;
  end; 	 	  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getDocumentStatuses", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: getDocumentStatuses");
    //writeareatofile(replyarea,"1CargoTypeReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPDSr.StateId = 0;
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/StateId"))begin
			RecordNew(NPDSr);
				descr = XmlGet(xdata,"root/data/item[" & i & "]/StateId");
				NPDSr.StateId = StringToInt(descr);
				NPDSr.StateName = XmlGet(xdata,"root/data/item[" & i & "]/StateName"); 
				NPDSr.GroupId = StringToInt(XmlGet(xdata,"root/data/item[" & i & "]/GroupId")); 
					
				if (RecordStore(NPDSr,true)) then begin		end;

			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
  LNPgetDocumentStatusesMn:;
  return;
end;

procedure CreateOwnershipFormRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam, var area aRequest)
begin
  string 200 getParam, host, page, webAddr;
  area basestring;   

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	//messagebox(0, urlencode("https://" & aWeb));
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("   <language>" & ConvertXml(aParam) & "</language>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
		  
return;
end;

global updating
procedure NPGetOwnershipFormRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 5 lang;
  string 255 xpath, descr, descrRU;
  longint i;
  record NPOwnershipFormVc NPOFr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
	if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetOwnershipFormRequestMn;
  end;	  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
  lang = "ru"; //ua ru en 
	CreateOwnershipFormRequest(host, page, NPSettingsb.APIkey, "Common","getOwnershipFormsList", lang, mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetCargoType");
    //writeareatofile(replyarea,"1OwnershipFormReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPOFr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPOFr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPOFr.Description = descr;
				NPOFr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
				NPOFr.FullName = XmlGet(xdata,"root/data/item[" & i & "]/FullName"); 
					
				if (RecordStore(NPOFr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
 	LNPGetOwnershipFormRequestMn:;
  return;
end;

procedure CreateWarehouseRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam, var area aRequest)
begin
  area request,replyarea,test;
  string 100 tstr;
  string 200 getParam, host, page, webAddr;
  string 20 timed;
  area basestring;   

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	//messagebox(0, urlencode("https://" & aWeb));
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("			<methodProperties>"& chr(13),aRequest);
  AddTextToArea("   		<CityRef>" & ConvertXml(aParam) & "</CityRef>" & chr(13),aRequest);
  AddTextToArea("			</methodProperties>"& chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	  
return;
end;

global updating
procedure NPGetWarehouseMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 60 cityRef, cityName,number;
  string 255 xpath, descr, descrRU;
  longint i;
  integer repeat;
  record NPWarehouseVc NPWr;
  record NPCityVc NPCr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);  
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetWarehouseMn;
  end;
  
  repeat = 0;
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
  //cityRef = "ru"; //ua ru en 
  
  NPCr.City = "";
		while (LoopMain(NPCr,1,true)) begin
			cityRef = NPCr.Ref;
			cityName = NPCr.City;
			SetAreaZeroSize(mainRequest);
			CreateWarehouseRequest(host, page, NPSettingsb.APIkey, "Address","getWarehouses", cityRef, mainRequest); 
			
			LsendRequestAgainGet1: ;
			if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin 
				logtext(0,"Hansa World: GetWarehouses - " & cityName);
		
				GetXMLArea(replyarea);
				//writeareatofile(replyarea,"1CargoTypeReply2.txt",0);
		
				xdata = ParseXMLArea(replyarea);
				i = 0;

//				NPWr.Description = "";
				while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
					RecordNew(NPWr);
					descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");
						NPWr.Description = descr;
						number = XmlGet(xdata,"root/data/item[" & i & "]/Number");	//Edit----------------------Dima  29.04.2015
						if (nonblank(number)) then begin 
							NPWr.Number = StringToInt(number);
						end; 
						NPWr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
						NPWr.DescriptionRu = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRu"); 
						NPWr.TypeOfWarehouse = XmlGet(xdata,"root/data/item[" & i & "]/TypeOfWarehouse"); 
						NPWr.CityRef = cityRef; 
						NPWr.Longitude = XmlGet(xdata,"root/data/item[" & i & "]/Longitude"); 
						NPWr.Latitude = XmlGet(xdata,"root/data/item[" & i & "]/Latitude"); 
						NPWr.City = cityName;
					
						if (RecordStore(NPWr,true)) then begin		end;
		
					i = i + 1;
				end;
		
				end else begin
				repeat = repeat + 1;
				if(repeat < 3) then begin
					millisleep(100);
					goto LsendRequestAgainGet1;
				end;
				repeat = 0;
				
				logtext(0,"Hansa World: No Connection to api.novaposhta.ua. There is no "  & cityName);
			end;
		end;
		
 	LNPGetWarehouseMn:;
  return;
end;





procedure CreateDescriptRequestWithMethod(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam, var area aRequest)
begin
  area request,replyarea,test;
  string 100 tstr;
  string 200 getParam, host, page, webAddr;
  string 20 timed;
  area basestring;   

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);

 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("		<methodProperties>"& chr(13),aRequest);
  AddTextToArea(aParam & chr(13),aRequest);
  AddTextToArea("		</methodProperties>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1descriptionRequest.txt",0);
  
return;
end;

global 
function string 255 NPGetDocumentStatusRequest(string documentID)
begin
  area replyarea,mainRequest;
  string 200 getParam,host,page,properties,response;
  area basestring;
  xml xdata;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
	response = "";
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetDocumentStatusRequest;
  end;	   
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
  properties = "<Documents>" & documentID & "</Documents><Documents></Documents>"; // doubling "<Documents>" need for array form
  
	CreateDescriptRequestWithMethod(host, page, NPSettingsb.APIkey, "InternetDocument","documentsTracking", properties, mainRequest);   
   

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin 
    //writeareatofile(replyarea,"1getDocStatusReply.txt",0);
    GetXMLArea(replyarea);
		xdata = ParseXMLArea(replyarea);

		response = XmlGet(xdata,"root/data/item/StateName"); 
		   
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
	LNPGetDocumentStatusRequest:; 
 	NPGetDocumentStatusRequest = response;
  return;
end;



global 
function boolean NPDeleteDocumentRequest(string documentRef)
begin
  area replyarea,mainRequest;
  string 200 getParam,host,page,properties,response;
  area basestring;
  xml xdata;
  record NPSettingsBlock NPSettingsb;
  boolean res;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPDeleteDocumentRequest;
  end;	 	   
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
  properties = "<DocumentRefs><item>" & documentRef & "</item></DocumentRefs>"; 
  
	CreateDescriptRequestWithMethod(host, page, NPSettingsb.APIkey, "InternetDocument","delete", properties, mainRequest);   
   

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin 
    //writeareatofile(replyarea,"1getDocStatusReply.txt",0);
    GetXMLArea(replyarea);
		xdata = ParseXMLArea(replyarea);

		response = XmlGet(xdata,"root/success"); 
		if (response=="true") then begin
			res = true;
		end;
				   
  end;
    
 	LNPDeleteDocumentRequest:;
 	NPDeleteDocumentRequest = res;
  return;
end;



global updating
procedure NPGetCounterpartyTypesRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr, descrRU;
  longint i;
  record NPCounterpartyTypesVc NPCTr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetCounterpartyTypesRequestMn;
  end;	  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getTypesOfCounterparties", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetCounterpartyType");
    //writeareatofile(replyarea,"1CounterpartyTypeReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPCTr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPCTr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");

				NPCTr.Description = descr;
				NPCTr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPCTr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
 	LNPGetCounterpartyTypesRequestMn:;
  return;
end;



global updating
procedure NPGetTypesOfPayerRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i;
  record NPTypesOfPayersVc NPTPr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetTypesOfPayerRequestMn;
  end;	  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getTypesOfPayers", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  //WORK! 
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetTypesOfPayers");
    //writeareatofile(replyarea,"1TypesOfPayersReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPTPr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPTPr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");

				NPTPr.Description = descr;
				NPTPr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPTPr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
 	LNPGetTypesOfPayerRequestMn:;
  return;
end;



global updating
procedure NPGetPaymentFormsMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i;
  record NPPaymentFormsVc NPPFr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetPaymentFormsMn;
  end;	
	  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getPaymentForms", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetPaymentForms");
    //writeareatofile(replyarea,"1PaymentFormsReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPPFr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPPFr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");

				NPPFr.Description = descr;
				NPPFr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPPFr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
	LNPGetPaymentFormsMn:;
  return;
end;



global updating
procedure NPGetServiceTypesRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i;
  record NPServiceTypesVc NPSTr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetServiceTypesRequestMn;
  end;	  
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getServiceTypes", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetServiceTypes");
    //writeareatofile(replyarea,"1ServiceTypesReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPSTr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPSTr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");

				NPSTr.Description = descr;
				NPSTr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPSTr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 	LNPGetServiceTypesRequestMn:;
  return;
end;





global updating
procedure NPGetTimeIntervalsRequestMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr,properties,cityCode;
  longint i;
  record NPTimeIntervalsVc NPTIr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetTimeIntervalsRequestMn;
  end;	  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
  
  cityCode = "db5c888c-391c-11dd-90d9-001a92567626";
  properties = "<RecipientCityRef>" & cityCode & "</RecipientCityRef>";
   
	CreateDescriptRequestWithMethod(host, page, NPSettingsb.APIkey, "Common","getTimeIntervals", properties, mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetTimeIntervals");
    //writeareatofile(replyarea,"1TimeIntervalsReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPTIr.Number = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Number"))begin
			RecordNew(NPTIr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Number");

				NPTIr.Number = descr;
				NPTIr.Start = XmlGet(xdata,"root/data/item[" & i & "]/Start"); 
				NPTIr.End = XmlGet(xdata,"root/data/item[" & i & "]/End");
					
				if (RecordStore(NPTIr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 	LNPGetTimeIntervalsRequestMn:;
  return;
end;




global updating
procedure NPGetTraysListMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i;
  record NPTraysListVc NPTLr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb); 
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetTraysListMn;
  end;	 
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getTraysList", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetTraysList");
    //writeareatofile(replyarea,"1TraysListReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPTLr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
			RecordNew(NPTLr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");

				NPTLr.Description = descr;
				NPTLr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
				NPTLr.DescriptionRU = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRU");
				NPTLr.Weight = XmlGet(xdata,"root/data/item[" & i & "]/Weight"); 
					
				if (RecordStore(NPTLr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
  LNPGetTraysListMn:;
  return;
end;



global updating
procedure NPGetTypesOfPayersForRedeliveryMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i;
  record NPTypesOfPayersRedeliveryVc NPTPRr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPGetTypesOfPayersForRedeliveryMn;
  end;	  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
   
	CreateCommonRequest(host, page, NPSettingsb.APIkey, "Common","getTypesOfPayersForRedelivery", "", mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin  
    //messagebox(0,"Connection on!");
    logtext(0,"Hansa World: GetTypesOfPayersForRedelivery");
    //writeareatofile(replyarea,"1TypesOfPayersForRedeliveryReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		NPTPRr.Description = "";
		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
			RecordNew(NPTPRr);
			descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");

				NPTPRr.Description = descr;
				NPTPRr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
					
				if (RecordStore(NPTPRr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
 
  LNPGetTypesOfPayersForRedeliveryMn:;
  return;
end;






procedure CreateCounterpartyRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam,record NPCounterpartyVc NPCr, var area aRequest)
begin
  string 200 getParam, host, page, webAddr;
  area basestring;
  string 50 firstname,lastname,middlename,email,city,ownershipForm;
  string 20 phone,counterpartyProperty,type,edrpou;
  
  lastname = NPCr.LastName;  
  firstname = NPCr.FirstName;
  middlename = NPCr.MiddleName;
  counterpartyProperty = NPCr.CounterpartyProperty;
  city = NPCr.CityRef;
  type = NPCr.CounterpartyType;
  phone = NPCr.Phone;
  email = NPCr.Email;
  edrpou = NPCr.EDRPOU;
  ownershipForm = NPCr.OwnershipForm;
  
     
	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("		<methodProperties>"& chr(13),aRequest);
  AddTextToArea("				<CounterpartyProperty>" & ConvertXml(counterpartyProperty) & "</CounterpartyProperty>" & chr(13),aRequest);
  AddTextToArea("				<CityRef>" & ConvertXml(city) & "</CityRef>" & chr(13),aRequest);
  AddTextToArea("				<CounterpartyType>" & ConvertXml(type) & "</CounterpartyType>" & chr(13),aRequest);    
  AddTextToArea("				<LastName>" & ConvertXml(lastname) & "</LastName>" & chr(13),aRequest);
  AddTextToArea("				<FirstName>" & ConvertXml(firstname) & "</FirstName>" & chr(13),aRequest);
  AddTextToArea("				<MiddleName>" & ConvertXml(middlename) & "</MiddleName>" & chr(13),aRequest);  
  AddTextToArea("				<Phone>" & ConvertXml(phone) & "</Phone>" & chr(13),aRequest);  
  if (nonblank(email)) then begin 
  	AddTextToArea("				<Email>" & ConvertXml(email) & "</Email>" & chr(13),aRequest);
  end;  
  if (nonblank(edrpou)) then begin 
  	AddTextToArea("				<EDRPOU>" & ConvertXml(edrpou) & "</EDRPOU>" & chr(13),aRequest);
  end;
  if (nonblank(ownershipForm)) then begin 
  	AddTextToArea("				<OwnershipForm>" & ConvertXml(ownershipForm) & "</OwnershipForm>" & chr(13),aRequest);
  end;  
        
  AddTextToArea("		</methodProperties>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1CounterpartyCreationRequest.txt",0);	
		  
return;
end;



global updating
function boolean NPCreateCounterparty(record NPCounterpartyVc NPCounterpartyr)
begin
  area request,replyarea,mainRequest;
  boolean res;
  string 10 resStr;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i,j;
  record NPCounterpartyVc NPCr;
  row NPCounterpartyVc NPCrw;
  record NPCityVc NPCityr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPCreateCounterparty;
  end;		
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
  res = true;
  
	CreateCounterpartyRequest(host, page, NPSettingsb.APIkey, "Counterparty","save", "",NPCounterpartyr, mainRequest);

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin  
    //messagebox(0,"Connection on!");
    //writeareatofile(replyarea,"1CounterpatyCreationReply.txt",0);
     
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;
		
		
		resStr = XmlGet(xdata,"root/success");
		if (resStr=="false") then begin
			res = false;
			goto LNPCreateCounterparty;
		end;

		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
			RecordNew(NPCr);

				NPCr.Description = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPCr.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
				NPCr.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
				NPCr.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");
				NPCr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
				NPCr.CounterpartyType = XmlGet(xdata,"root/data/item[" & i & "]/CounterpartyType");
				NPCr.CounterpartyProperty = NPCounterpartyr.CounterpartyProperty;
				NPCr.CityRef = NPCounterpartyr.CityRef;
				NPCr.Phone = NPCounterpartyr.Phone;
				NPCr.Email = NPCounterpartyr.Email; 	 				
				NPCr.EDRPOU = XmlGet(xdata,"root/data/item[" & i & "]/EDRPOU");
				NPCr.OwnershipForm = XmlGet(xdata,"root/data/item[" & i & "]/OwnershipForm");
				NPCr.OwnershipFormDescription = XmlGet(xdata,"root/data/item[" & i & "]/OwnershipFormDescription");
				NPCr.Counterparty = XmlGet(xdata,"root/data/item[" & i & "]/Counterparty");
				NPCityr.Ref = NPCr.CityRef;
				if 	(ReadFirstKey("Ref",NPCityr,1,true)) then begin
					NPCr.CityDescription = NPCityr.City;
				end;
				
				j = 0;
				//Contact Person:
				while(XmlNodeExists(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/Ref")) begin
					NPCrw.Ref = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/Ref");
					NPCrw.LastName = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/LastName");
					NPCrw.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/FirstName");
					NPCrw.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/MiddleName");
					NPCrw.Phones = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/Phones");
					NPCrw.Email = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/Email");
					NPCrw.Owner = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/Owner");
					NPCrw.Description = XmlGet(xdata,"root/data/item[" & i & "]/ContactPerson/data/item[" & j & "]/Description");
					MatRowPut(NPCr,j,NPCrw);
					j = j + 1;
				end;
					
				if (RecordStore(NPCr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;	
 
 	LNPCreateCounterparty:;
 	NPCreateCounterparty = res;
  return;
end;




procedure SaveCounterpartyAddressRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string aParam,record RcVc RepSpec, var area aRequest)
begin
  string 200 getParam, host, page, webAddr,note;
  area basestring;
  string 100 counterpartyRef,streetRef;
  string 10 flat,buildingNumber;
  
	counterpartyRef = RepSpec.f1;  
  streetRef = RepSpec.f2;
  buildingNumber = RepSpec.f3;
  flat = RepSpec.f4;
  note = RepSpec.f5;
     

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("		<methodProperties>"& chr(13),aRequest);
  AddTextToArea("				<CounterpartyRef>" & ConvertXml(counterpartyRef) & "</CounterpartyRef>" & chr(13),aRequest);
  AddTextToArea("				<StreetRef>" & ConvertXml(streetRef) & "</StreetRef>" & chr(13),aRequest);
  AddTextToArea("				<BuildingNumber>" & ConvertXml(buildingNumber) & "</BuildingNumber>" & chr(13),aRequest);    
  
  if (nonblank(flat)) then begin 
  	AddTextToArea("				<Flat>" & ConvertXml(flat) & "</Flat>" & chr(13),aRequest);
  end;  
  if (nonblank(note)) then begin 
  	AddTextToArea("				<Note>" & ConvertXml(note) & "</Note>" & chr(13),aRequest);
  end;

        
  AddTextToArea("		</methodProperties>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1addressCreationRequest.txt",0);	
		  
return;
end;



global updating
procedure NPAddAddressForCounterpartyMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  string 200 getParam,host,page,webaddr,path;
  xml xdata;
  string 255 xpath;
  longint i;
  record NPCounterpartyVc NPCr;
  record NPAddressesVc NPAr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPAddAddressForCounterpartyMn;
  end;	

  //record RcVc RepSpec;
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
  
	RepSpec.f1 ="239de577-df82-11e4-8a92-005056887b8d"; //counterparty reference 
  RepSpec.f2 ="a76c21a3-0c01-11e4-acce-0050568002cf";//street reference
  RepSpec.f3 = "1"; 																//buiilding number
  RepSpec.f4 = "4"; 																//flat
  RepSpec.f5 = "";																				//note
 
   
	SaveCounterpartyAddressRequest(host, page, NPSettingsb.APIkey, "Address","save", "",RepSpec, mainRequest); //get status

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin  
    //messagebox(0,"Connection on!");
    //writeareatofile(replyarea,"1addAddressReply.txt",0);
    
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
			RecordNew(NPAr);

				NPAr.AddressDescription = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPAr.AddressRef = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
				NPAr.CounterpartyRef = RepSpec.f1;

				NPCr.Ref = RepSpec.f1;
				if (ReadFirstKey("Ref",NPCr,1,true)) then begin
					NPAr.CounterpartyDescription = NPCr.Description;
				end;
					
				if (RecordStore(NPAr,true)) then begin		end;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
  LNPAddAddressForCounterpartyMn:;
  return;
end;	



global updating procedure CleanNPAddressesMn() //Edit------------------------------Dima,   24.12.2014
begin
	record NPAddressesVc NPAr;
	boolean TrHs;
	
	TrHs = true;
	while (LoopMain(NPAr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(NPAr);
	    StepBack(NPAr);
	  end;
	end;
	
	return;
end;	


//adds addresses of all counterparties from NPCounterpartyVc
//register NPAddressesVc would be cleaned
global updating
procedure NPRefreshAddressesOfCounterpartiesMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  string 200 getParam,host,page,properties;
  xml xdata;
  longint i;
  string 100 counterpartyRef;
  string 10 result;
  record NPCounterpartyVc NPCr;
  record NPAddressesVc NPAr;
  record NPSettingsBlock NPSettingsb;
  integer repeat;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPRefreshAddresses81u1;
  end;	  

  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";

	CleanNPAddressesMn;
	
	NPCr.CityRef = "";
	while(LoopMain(NPCr,1,true)) begin
	
		SetAreaZeroSize(mainRequest);
  	properties = "<Ref>" & NPCr.Ref & "</Ref>";
		CreateDescriptRequestWithMethod(host, page, NPSettingsb.APIkey, "Counterparty","getCounterpartyAddresses", properties, mainRequest);
		
		LsendRequestAgainAdress:;
		if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin  
  	  	//writeareatofile(replyarea,"1AddressesReply.txt",0);
  	  	
  	  	GetXMLArea(replyarea);
				xdata = ParseXMLArea(replyarea);
				i = 0;
				result = XmlGet(xdata,"root/success");
				if (result == "true") then begin
  	  	
						while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
								RecordNew(NPAr);
  	  			
								NPAr.AddressDescription = XmlGet(xdata,"root/data/item[" & i & "]/Description");
								NPAr.AddressRef = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
								NPAr.CounterpartyRef = NPCr.Ref;
								NPAr.CounterpartyDescription = NPCr.Description;
								
								if (RecordStore(NPAr,true)) then begin		end;
								i = i + 1;
						end;
				end;
			
  	end else begin

				repeat = repeat + 1;
				if(repeat < 3) then begin
					millisleep(300);
					goto LsendRequestAgainAdress;
				end;
				repeat = 0;  			
  	
 				logtext(0,"Connection closed while addresses were refreshed!!------");
 				goto LNPRefreshAddresses81u1;
  	end;

	end;	
	

 	LNPRefreshAddresses81u1:;
  return;
end;

//********************


global updating
procedure NPAddWarehouseMn(record RcVc RepSpec)
begin
  area request,replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 60 cityRef, cityName,number;
  string 255 xpath, descr, descrRU;
  longint i;
  integer repeat;
  record NPWarehouseVc NPWr;
  record NPCityVc NPCr;
  record NPSettingsBlock NPSettingsb;
  
	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPAddWarehouseMn;
  end;		  
  
  repeat = 0;
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
  //cityRef = "ru"; //ua ru en 
  
  NPCr.City = RepSpec.f1;
		if(ReadFirstMain(NPCr,1,true)) begin
			cityRef = NPCr.Ref;
			cityName = NPCr.City;
			SetAreaZeroSize(mainRequest);
			CreateWarehouseRequest(host, page, NPSettingsb.APIkey, "Address","getWarehouses", cityRef, mainRequest); 
			
			LsendRequestAgain: ;
			if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600))then begin 
				logtext(0,"Hansa World: GetWarehouses - " & cityName);
		
				GetXMLArea(replyarea);
				//writeareatofile(replyarea,"1CargoTypeReply2.txt",0);
		
				xdata = ParseXMLArea(replyarea);
				i = 0;

				while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description"))begin
					RecordNew(NPWr);
					descr = XmlGet(xdata,"root/data/item[" & i & "]/Description");
						NPWr.Description = descr;
						number = XmlGet(xdata,"root/data/item[" & i & "]/Number");	//Edit----------------------Dima  29.04.2015
						if (nonblank(number)) then begin 
							NPWr.Number = StringToInt(number);
						end;
						NPWr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref"); 
						NPWr.DescriptionRu = XmlGet(xdata,"root/data/item[" & i & "]/DescriptionRu"); 
						NPWr.TypeOfWarehouse = XmlGet(xdata,"root/data/item[" & i & "]/TypeOfWarehouse"); 
						NPWr.CityRef = cityRef; 
						NPWr.Longitude = XmlGet(xdata,"root/data/item[" & i & "]/Longitude"); 
						NPWr.Latitude = XmlGet(xdata,"root/data/item[" & i & "]/Latitude"); 
						NPWr.City = cityName;
					
						if (RecordStore(NPWr,true)) then begin		end;
		
					i = i + 1;
				end;
		
				end else begin
				repeat = repeat + 1;
				if(repeat < 3) then begin
					millisleep(100);
					goto LsendRequestAgain;
				end;
				repeat = 0;
				
				logtext(0,"Hansa World: No Connection to api.novaposhta.ua "  & cityName);
			end;
		end;
		
 LNPAddWarehouseMn:;
  return;
end;


procedure GetCounterpartiesRequest(string aWeb, string aPage, string aKey,string aModel,string aMethod,string counterpartyProperty, var area aRequest)
begin
  string 200 getParam, host, page, webAddr;
      

	addtexttoarea("POST " & aPage & " HTTP/1.1" & chr(13) & chr(10),aRequest);
 	addtexttoarea("host: " & aWeb & chr(13) & chr(10),aRequest);
 	AddTextToArea("" & chr(13) & chr(10),aRequest);
 	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("   <apiKey>" & ConvertXml(aKey) & "</apiKey>" & chr(13),aRequest);
  AddTextToArea("   <modelName>" & ConvertXml(aModel) & "</modelName>" & chr(13),aRequest);
  AddTextToArea("   <calledMethod>" & ConvertXml(aMethod) & "</calledMethod>" & chr(13),aRequest);
  AddTextToArea("		<methodProperties>"& chr(13),aRequest);
  AddTextToArea("				<CounterpartyProperty>" & ConvertXml(counterpartyProperty) & "</CounterpartyProperty>" & chr(13),aRequest);
  AddTextToArea("		</methodProperties>" & chr(13),aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	//writeareatofile(aRequest,"1CounterpartyCreationRequest.txt",0);	
		  
return;
end;


global updating
procedure  GetRecipientContactPerson(string counterpartyRef,string apiKey)
begin
	area replyarea,mainRequest;
  string 200 getParam,host,page,path,properties;
  xml xdata;
  longint i,j;
  record NPCounterpartyVc NPCr,oldNPCr;
  row NPCounterpartyVc NPCrw; 
  integer repeat;
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
	repeat = 0; 
  
		NPCr.Ref = counterpartyRef;
		if (ReadFirstKey("Ref",NPCr,1,true)) then begin
				RecordCopy(oldNPCr,NPCr);
				//SetAreaZeroSize(mainRequest);

				LogText(0,counterpartyRef);
  			properties = "<Ref>" & counterpartyRef & "</Ref>"; 
				CreateDescriptRequestWithMethod(host, page, apiKey, "Counterparty","getCounterpartyContactPersons", properties, mainRequest);
  						
  			While(repeat<3)  begin  
  			  
  			  if (MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin
  			  		repeat = 3; // break loop
  			  		GetXMLArea(replyarea);
							xdata = ParseXMLArea(replyarea);
							i = 0;
							while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
							
									NPCrw.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
									NPCrw.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
									NPCrw.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");
									NPCrw.Phones = XmlGet(xdata,"root/data/item[" & i & "]/Phones");		
									NPCrw.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
									NPCrw.Email = XmlGet(xdata,"root/data/item[" & i & "]/Email");
									NPCrw.Description = XmlGet(xdata,"root/data/item[" & i & "]/Description");
									MatRowPut(NPCr,i,NPCrw);
									i = i + 1;
							end;
							if (NPCr.CounterpartyType == "PrivatePerson") then begin
									NPCr.Phone = NPCrw.Phones;
									NPCr.Email = NPCrw.Email;
							end;
							RecordUpdate(oldNPCr,NPCr,true);					
  			  end else begin
  								repeat = repeat + 1;
									millisleep(300);
					end;		
  			end; 			
  	end;    
end;


global updating
procedure  GetSenderContactPerson(string counterpartyRef,string apiKey)
begin
	area replyarea,mainRequest;
  string 200 getParam,host,page,path,properties;
  xml xdata;
  longint i,j;
  record NPCounterpartySenderVc NPCSr, oldNPCSr;
	row NPCounterpartySenderVc NPCSrw; 
  integer repeat;
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";
	repeat = 0; 
  
		NPCSr.Ref = counterpartyRef;
		if (ReadFirstKey("Ref",NPCSr,1,true)) then begin
				RecordCopy(oldNPCSr,NPCSr);
				//SetAreaZeroSize(mainRequest);

				LogText(0,counterpartyRef);
  			properties = "<Ref>" & counterpartyRef & "</Ref>"; 
				CreateDescriptRequestWithMethod(host, page, apiKey, "Counterparty","getCounterpartyContactPersons", properties, mainRequest);
  			
  			
  			While(repeat<3)  begin  
  			  
  			  if (MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin
  			  		repeat = 3; // break loop
  			  		GetXMLArea(replyarea);
							xdata = ParseXMLArea(replyarea);
							i = 0;
							while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
							
									NPCSrw.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
									NPCSrw.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
									NPCSrw.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");
									NPCSrw.Phones = XmlGet(xdata,"root/data/item[" & i & "]/Phones");		
									NPCSrw.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
									NPCSrw.Email = XmlGet(xdata,"root/data/item[" & i & "]/Email");
									NPCSrw.Description = XmlGet(xdata,"root/data/item[" & i & "]/Description");
									MatRowPut(NPCSr,i,NPCSrw);
									i = i + 1;
							end;
							if (NPCSr.CounterpartyType == "PrivatePerson") then begin
									NPCSr.Phone = NPCSrw.Phones;
									NPCSr.Email = NPCSrw.Email;
							end;
							RecordUpdate(oldNPCSr,NPCSr,true);				
  			  end else begin
  								repeat = repeat + 1;
									millisleep(300);
									if(repeat == 3)then begin
										logtext(0,"There is no connection!");
									end;
					end;		

  			end;
  			
  	end;  
  
end;


updating
procedure  RefreshCounterpartyContactPerson(array string senders, array string recipients)
begin
	record NPSettingsBlock NPSettingsb;
  longint j;
	BlockLoad(NPSettingsb);		


	for(j=0;j<recipients.length;j=j+1) begin
			GetRecipientContactPerson(recipients[j],NPSettingsb.APIkey);
  end;
  
	for(j=0;j<senders.length;j=j+1) begin
			GetSenderContactPerson(senders[j],NPSettingsb.APIkey)
  end;
  
end;



global updating
procedure NPRefreshCounterparties(record NPCounterpartyVc NPCounterpartyr)
begin
  area replyarea,mainRequest;
  boolean TrHs;
  string 200 getParam,host,page,webaddr,path;
  area basestring;
  xml xdata;
  string 255 xpath, descr;
  longint i,j;
  record NPCounterpartyVc NPCr,oldNPCr;
  record NPCounterpartySenderVc NPCSr, oldNPCSr;
  record NPCityVc NPCityr;
  record NPSettingsBlock NPSettingsb;
  array string 50 senders,recipients;
  boolean exist;

	BlockLoad(NPSettingsb);
  if (blank(NPSettingsb.APIkey)) then begin
  	goto LNPRefreshCounterparties;
  end;		
  
  host = "api.novaposhta.ua";
  page = "/v2.0/xml/";

  //------------------------------------------------------RECIPIENTs------------------------------------------------------- 
	GetCounterpartiesRequest(host, page, NPSettingsb.APIkey, "Counterparty","getCounterparties", "Recipient", mainRequest);

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin  
    //messagebox(0,"Connection on!");
    writeareatofile(replyarea,"1RecipientsReply.txt",0);
     
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
				exist = false;

				NPCr.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
				NPCr.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
				NPCr.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");
				NPCr.CityRef = XmlGet(xdata,"root/data/item[" & i & "]/City");				
				if (ReadFirstKey("FirstName",NPCr,4,true)) then begin
					RecordCopy(oldNPCr,NPCr);
					exist = true;
				end else begin
					RecordNew(NPCr);
				end;	
				NPCr.Description = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPCr.CityRef = XmlGet(xdata,"root/data/item[" & i & "]/City");
				NPCr.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
				NPCr.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
				NPCr.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");		
				NPCr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
				NPCr.CounterpartyType = XmlGet(xdata,"root/data/item[" & i & "]/CounterpartyType");
				NPCr.CounterpartyProperty = "Recipient";	 				
				NPCr.EDRPOU = XmlGet(xdata,"root/data/item[" & i & "]/EDRPOU");
				NPCr.OwnershipForm = XmlGet(xdata,"root/data/item[" & i & "]/OwnershipForm");
				NPCr.OwnershipFormDescription = XmlGet(xdata,"root/data/item[" & i & "]/OwnershipFormDescription");
				NPCr.Counterparty = XmlGet(xdata,"root/data/item[" & i & "]/Counterparty");
				NPCityr.Ref = NPCr.CityRef;
				if 	(ReadFirstKey("Ref",NPCityr,1,true)) then begin
					NPCr.CityDescription = NPCityr.City;
				end;
				if (exist) then begin
					RecordUpdate(oldNPCr,NPCr,true);
				end else begin	
					RecordStore(NPCr,true);
				end;
				recipients[i] = NPCr.Ref;
		
			i = i + 1;
		end;
		
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
  
  
 //------------------------------------------------------SENDERs------------------------------------------------------- 
	 SetAreaZeroSize(mainRequest);
	 SetAreaZeroSize(replyarea);
	GetCounterpartiesRequest(host, page, NPSettingsb.APIkey, "Counterparty","getCounterparties", "Sender", mainRequest);

  if(MySendRawWebRequest(host,"443",true,"POST",page & getParam,"text/xml","",false,mainRequest,replyarea,600)) then begin  
    //messagebox(0,"Connection on!");
    //writeareatofile(replyarea,"1SendersReply.txt",0);
     
    GetXMLArea(replyarea);
    
		xdata = ParseXMLArea(replyarea);
		i = 0;

		while(XmlNodeExists(xdata,"root/data/item[" & i & "]/Description")) begin
				exist = false;

				NPCSr.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
				NPCSr.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
				NPCSr.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");
				NPCSr.CityRef = XmlGet(xdata,"root/data/item[" & i & "]/City");				
				if (ReadFirstKey("FirstName",NPCSr,4,true)) then begin
					RecordCopy(oldNPCSr,NPCSr);
					exist = true;
				end else begin
					RecordNew(NPCSr);
				end;	
				NPCSr.Description = XmlGet(xdata,"root/data/item[" & i & "]/Description");
				NPCSr.CityRef = XmlGet(xdata,"root/data/item[" & i & "]/City");
				NPCSr.FirstName = XmlGet(xdata,"root/data/item[" & i & "]/FirstName");
				NPCSr.LastName = XmlGet(xdata,"root/data/item[" & i & "]/LastName");
				NPCSr.MiddleName = XmlGet(xdata,"root/data/item[" & i & "]/MiddleName");		
				NPCSr.Ref = XmlGet(xdata,"root/data/item[" & i & "]/Ref");
				NPCSr.CounterpartyType = XmlGet(xdata,"root/data/item[" & i & "]/CounterpartyType");
				NPCSr.CounterpartyProperty = "Sender";	 				
				NPCSr.EDRPOU = XmlGet(xdata,"root/data/item[" & i & "]/EDRPOU");
				NPCSr.OwnershipForm = XmlGet(xdata,"root/data/item[" & i & "]/OwnershipForm");
				NPCSr.OwnershipFormDescription = XmlGet(xdata,"root/data/item[" & i & "]/OwnershipFormDescription");
				NPCSr.Counterparty = XmlGet(xdata,"root/data/item[" & i & "]/Counterparty");
				NPCityr.Ref = NPCSr.CityRef;
				if 	(ReadFirstKey("Ref",NPCityr,1,true)) then begin
					NPCSr.CityDescription = NPCityr.City;
				end;
				if (exist) then begin
					RecordUpdate(oldNPCSr,NPCSr,true);
				end else begin	
					RecordStore(NPCSr,true);
				end;
				senders[i] = NPCSr.Ref;
			i = i + 1;
		end;
    end else begin
 		logtext(0,"Hansa World: No Connection to api.novaposhta.ua");
  end;
  
  RefreshCounterpartyContactPerson(senders,recipients);
  LNPRefreshCounterparties:;
  return;
end;


global updating
procedure RefreshAllInnerRegistersNP()
begin
	record RcVc RepSpec;
	RecordNew(RepSpec)
	NPGetCytiesRequestMn(RepSpec);
	NPGetDescriptionRequestMn(RepSpec);
	NPGetCargoTypeRequestMn(RepSpec);
	NPGetBackCargoTypeRequestMn(RepSpec);
	NPgetDocumentStatusesMn(RepSpec);
	NPGetOwnershipFormRequestMn(RepSpec);
	NPGetWarehouseMn(RepSpec);
	NPGetCounterpartyTypesRequestMn(RepSpec);
	NPGetTypesOfPayerRequestMn(RepSpec);
	NPGetPaymentFormsMn(RepSpec);
	NPGetServiceTypesRequestMn(RepSpec);
	NPGetTimeIntervalsRequestMn(RepSpec);
	NPGetTraysListMn(RepSpec);
	NPGetTypesOfPayersForRedeliveryMn(RepSpec);

end;

