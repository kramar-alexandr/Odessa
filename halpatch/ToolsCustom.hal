external function roundmode SetRoundModeD(Integer);// Edit ************************** Monday, 13 October 2014 15:06:01external procedure RecalculateActOkFlag(var record POVc);	//Edit----------------------Dima  12.03.2015global function CreateEAN128(var string str)beginstring 255 res,res1;integer ksum,sum,c,lenth,i;val csum;area arr;  res = "";  sum = 0;  res = res & chr(195) & chr(144);  sum = sum+103;  lenth = len(str);  for(i=0;i<lenth;i=i+1)begin    c = asc(mid(str,i,1));    c = c - 32;    sum = sum + c*(i+1);  end;  csum = sum/103;  if(csum<round(csum,SetRoundModeD(0))) then begin     ksum = round(csum,SetRoundModeD(0))-1;   end else begin    ksum = round(csum,SetRoundModeD(0));  end;  sum = sum-(ksum*103);  res = res & str;  if(sum<95) then begin    If(sum==0) then begin      res = res & chr(195) & chr(148);    end else begin      res = res & chr(sum+32);    end;    end else begin  res = res & chr(195) & chr(sum+41);  end;  //res = res & chr(211);  //res = res & chr(211);  res = res & chr(195) & chr(147);  addtexttoarea(res,arr);  writeareatofile(arr,"888",0);  str = res;return;end;global // Edit ************************** Monday, 13 October 2014 14:42:59procedure CalcEANCHS(var string str)begininteger c1,c2,lenth,i,chsum,litle;val sum;  sum = 0;  lenth = len(str);  if (lenth==12)then begin    for(i=0;i<12;i=i+2)begin      c1 = evaltoval(mid(str,i,1));      c2 = evaltoval(mid(str,i+1,1));      c2=c2*3;      sum = sum+c1+c2;    end;    if(round(sum/10,SetRoundModeD(0))>sum/10) then begin      litle = round(sum/10,SetRoundModeD(0))-1;    end else begin      litle = round(sum/10,SetRoundModeD(0));    end;    chsum  = 10-(10*(sum/10-litle));    if(chsum==10) then begin chsum = 0; end;    str = str & chsum;  end else begin    str = "";  end;  return;end;globalprocedure BarcodeIncrement(var string barcode,Integer increment)begin  integer lenght,i,lastindex,leftover,base,incr;  array integer digit;  boolean testf;        testf = true;    lenght = len(barcode);    incr = increment;    for (i=0;i<lenght;i=i+1) begin      digit[i] = StringToInt(mid(barcode,i,1));      lastindex = i;    end;    digit[lastindex] = digit[lastindex] + incr;    while (digit[lastindex]>9 and testf) begin      leftover = Mod(digit[lastindex],10);      base = digit[lastindex] - leftover;      if (base>0) then begin        digit[lastindex] = leftover;        incr = base/10;        lastindex = lastindex - 1;        digit[lastindex] = digit[lastindex] + incr;      end;      if (lastindex==0 and digit[lastindex]>9) then begin        testf = false;      end;    end;    barcode = "";    if (testf) then begin      for (i=0;i<lenght;i=i+1) begin        barcode = barcode & digit[i];      end;    end;   return; end;global  //Edit***************************Sasha2,12:00 22.01.2015 {updating procedure HandleSetEAN13PU(var record PUVc PUr)begin  row PUVc PUrw;  record INVc INr,IN2r;  integer mrcnt,i;  string 40 barcode,tempean;  boolean TrHs,testf;      mrcnt = MatRowCnt(PUr);    for (i=0;i<mrcnt;i=i+1) begin      MatRowGet(PUr,i,PUrw);      if (NonBlank(PUrw.ArtCode) and blank(PUrw.BarCode)) then begin        INr.Code = PUrw.ArtCode;        if (ReadFirstMain(INr,1,true)) then begin          if (NonBlank(INr.BarCode)) then begin            PUrw.BarCode = INr.BarCode;            MatRowPut(PUr,i,PUrw);          end else begin            IN2r.BarCode = "2";            TrHs = true;            testf = true;            if (blank(tempean)) then begin              while (LoopKey("BarCode",IN2r,1,TrHs)) begin                if (left(IN2r.BarCode,1)!="2") then begin TrHs = false; end;                if (Len(IN2r.BarCode)==13) then begin testf = false; end;                if (Len(IN2r.BarCode)!=13 and testf==false) then begin TrHs = false; end;                if (TrHs) then begin                  tempean = IN2r.BarCode;                end;              end; RESETLOOP(IN2r);            end;            if (tempean=="2999999999991") then begin              goto LHandleSetEAN13PU;            end;            if (blank(tempean) or left(tempean,1)!="2" or len(tempean)!=13) then begin              barcode = "199999999999";            end else begin              barcode = mid(tempean,0,12);            end;            BarcodeIncrement(barcode,1);            if (NonBlank(barcode)) then begin               CalcEANCHS(barcode);              INr.BarCode = barcode;              tempean = barcode;              RECORDSTORE(INr,true);              PUrw.BarCode = barcode;              MatRowPut(PUr,i,PUrw);            end else begin              goto LHandleSetEAN13PU;            end;          end;        end;      end;    end;    LHandleSetEAN13PU:;      return;end; //Edit***************************Sasha2,12:01 22.01.2015 }global updating procedure RecalcINVolumeMn() //Edit***************************Sasha2,13:44 24.06.2014 {begin	record INVc INr;	roundmode rnd;			rnd = DefaultValRoundoff;  	rnd.decimals = 0;  	rnd.mode = kRoundingModeHalfUp;		INr.Code = "";	while(loopmain(INr,1,true))begin		if (INr.Volume > 0) then begin			//INr.Volume = Round(INr.Volume,rnd) / 100000; //Edit***************************Sasha2,17:25 30.07.2014			INr.Volume = INr.Volume / 1000; //Edit***************************Sasha2,11:24 31.07.2014			RECORDSTORE(INr, true);		end;	end;	return;end; //Edit***************************Sasha2,13:45 24.06.2014 }global updating procedure DelLoyaltyCardMn() //Edit***************************Sasha2,13:44 24.06.2014 {begin	record LoyaltyCardVc LoyaltyCardr;	Boolean TrHs;		LoyaltyCardr.SerNr = "";	TrHs = true;	while(loopmain(LoyaltyCardr,1,TrHs))begin		if (TrHs) then begin			RecordDelete(LoyaltyCardr);    		StepBack(LoyaltyCardr);		end;	end;	return;end; //Edit***************************Sasha2,13:45 24.06.2014 }global updating procedure CleaningMn() //Edit------------------------------Dima,   24.12.2014begin	record CLInVc CLInr;	record CLOutVc CLOutr;	record IPVc IPr;	record OPVc OPr;	record IVVc IVr;	record VIVc VIr;	record POVc POr;	record SHVc SHr;	record PUVc PUr;	record SDVc SDr;	record StockMovVc StockMovr;	record RetVc Retr;	record RetPUVc RetPUr;	record ORVc ORr;	record TRVc TRr;	record FBVc FBr;	record ItemHistVc IHr;	record ItemStatusVc ISr;	record PPVc PPr;	record CUVc CUr;	record INVc INr;	Boolean TrHs;			TrHs = true;	while (LoopMain(CLInr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(CLInr);	    StepBack(CLInr);	  end;	end;	TrHs = true;	while (LoopMain(CLOutr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(CLOutr);	    StepBack(CLOutr);	  end;	end;	TrHs = true;	while (LoopMain(IPr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(IPr);	    StepBack(IPr);	  end;	end;	TrHs = true;	while (LoopMain(IVr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(IVr);	    StepBack(IVr);	  end;	end;	TrHs = true;	while (LoopMain(VIr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(VIr);	    StepBack(VIr);	  end;	end;	TrHs = true;	while (LoopMain(POr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(POr);	    StepBack(POr);	  end;	end;	TrHs = true;	while (LoopMain(OPr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(OPr);	    StepBack(OPr);	  end;	end;	TrHs = true;	while (LoopMain(SHr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(SHr);	    StepBack(SHr);	  end;	end;	TrHs = true;	while (LoopMain(PUr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(PUr);	    StepBack(PUr);	  end;	end;	TrHs = true;	while (LoopMain(SDr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(SDr);	    StepBack(SDr);	  end;	end;	TrHs = true;	while (LoopMain(StockMovr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(StockMovr);	    StepBack(StockMovr);	  end;	end;	TrHs = true;	while (LoopMain(Retr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(Retr);	    StepBack(Retr);	  end;	end;	TrHs = true;	while (LoopMain(RetPUr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(RetPUr);	    StepBack(RetPUr);	  end;	end;	TrHs = true;	while (LoopMain(ORr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(ORr);	    StepBack(ORr);	  end;	end;	TrHs = true;	while (LoopMain(TRr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(TRr);	    StepBack(TRr);	  end;	end;	TrHs = true;	while (LoopMain(FBr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(FBr);	    StepBack(FBr);	  end;	end;	TrHs = true;	while (LoopMain(IHr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(IHr);	    StepBack(IHr);	  end;	end;	TrHs = true;	while (LoopMain(ISr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(ISr);	    StepBack(ISr);	  end;	end;	TrHs = true;	while (LoopMain(PPr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(PPr);	    StepBack(PPr);	  end;	end;	TrHs = true;	while (LoopMain(CUr,1,TrHs)) begin	  if (TrHs and (CUr.VEType==0)) then begin	    RecordDelete(CUr);	    StepBack(CUr);	  end;	end;	TrHs = true;	while (LoopMain(INr,1,TrHs)) begin	  if (TrHs) then begin	    RecordDelete(INr);	    StepBack(INr);	  end;	end;return;end;global //Edit***************************Sasha2,16:10 29.01.2015 {updating procedure ReplaceUAHtoUAHRinWEBandRetailCUMn() begin  record CUVc CUr;  boolean testf;        CUr.Code = "";    while (LoopMain(CUr,1,true)) begin      testf = true;      if (CUr.CustCat!="RETAI" and CUr.CustCat!="WEB") then begin testf = false; end;      if (testf) then begin        CUr.CurncyCode = "UAH_R";        RECORDSTORE(CUr,true);      end;    end;  return;end; //Edit***************************Sasha2,16:11 29.01.2015 }global //Edit by Victor 30.01.15	***updating procedure PutQtysToPOMn() begin  record POVc POr;  record INVc INr;  row POVc POrw;  integer rwcnt, i;        POr.SerNr = "";    while (LoopMain(POr,1,true)) begin      rwcnt = MatRowCnt(POr);			for (i=0;i<rwcnt;i=i+1) begin				MatRowGet(POr,i,POrw);				if (nonblank(POrw.ArtCode)) then begin					INr.Code = POrw.ArtCode;					if(ReadfirstMain(INr, 1, true))then begin						POrw.QtyPack = INr.AddUnitCoef3;	   					POrw.QtyBox = INr.AddUnitCoef2;						end;									end;				MatRowPut(POr,i,POrw);			end;				    	RECORDSTORE(POr,true);          end;  return;end;	// ***global updating procedure RestoreLinksFromORtoSHandIVMn() //Edit***************************Sasha2,13:44 24.06.2014 {begin	record ORVc ORr;	record SHVc SHr;	record IVVc IVr;	string 255 rlink;	boolean TrHs;		while (loopmain(ORr,1,true)) begin	 IVr.OrderNr = ORr.SerNr;	 TrHs = true;	 while (LoopKey("OrderNr",IVr,1,TrHs)) begin  	 if (IVr.OrderNr!=ORr.SerNr) then begin TrHs=false; end;  	 if (TrHs) then begin  	    CreateRecordLink(ORr,CurrentCompany,IVr,CurrentCompany);        CreateRecordLink(IVr,CurrentCompany,ORr,CurrentCompany);  	 end;	 end; RESETLOOP(IVr);	 SHr.OrderNr = ORr.SerNr;	 TrHs = true;	 while (LoopKey("OrderKey",SHr,1,TrHs)) begin	   if (SHr.OrderNr!=ORr.SerNr) then begin TrHs=false; end;	   if (TrHs) then begin	     CreateRecordLink(ORr,CurrentCompany,SHr,CurrentCompany);       CreateRecordLink(SHr,CurrentCompany,ORr,CurrentCompany);	   end;	 end; RESETLOOP(SHr);	end;	return;end; //Edit***************************Sasha2,13:45 24.06.2014 }global 	//Edit----------------------Dima  11.02.2015updating procedure PutFlagsForCUWeb() begin  record CUVc CUr;    CUr.CustCat = "WEB";    while (LoopMain(CUr,1,true)) begin      if (CUr.CustCat=="WEB") then begin 					Cur.OnAccount = 1;							Cur.SelfBilling = 1;       		RECORDSTORE(CUr,true);      end;    end;  return;end;global 	//Edit***************************Sasha2,15:21 26.02.2015 {updating procedure CreateLoyaltyForWebClients() begin  record CUVc CUr;  record LoyaltyCardVc LoyaltyCardr;  record IVVc IVr;  Boolean TrHs,TrHs1,testf,testf1;  val sum;    CUr.CustCat = "WEB";    TrHs = true;    while (LoopKey("ActGroup",CUr,1,TrHs)) begin      testf = true;      if (CUr.CustCat!="WEB") then begin TrHs = false; testf = false; end;      if (testf) then begin        LoyaltyCardr.SerNr = CUr.Code;        if (!ReadFirstMain(LoyaltyCardr,1,true)) then begin          RECORDNEW(LoyaltyCardr);          LoyaltyCardr.SerNr = CUr.Code;          LoyaltyCardr.CustCode = CUr.Code;          LoyaltyCardr.CustName = CUr.Name;          LoyaltyCardr.LCMLevel = "1";          //LoyaltyCardr.PointsBalance = StringToVal(Cur.Comment1,M4Val);          IVr.CustCode = CUr.Code;          TrHs1 = true;          sum = 0;          while (LoopKey("CustCode",IVr,1,TrHs1)) begin            testf1 = true;            if (IVr.CustCode!=CUr.Code) then begin TrHs1 = false; testf1 = false; end;            if (IVr.OKFlag==0 or IVr.Invalid!=0) then begin testf1 = false; end;            if (testf1) then begin              if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin                sum = sum - IVr.Sum4;              end else begin                sum = sum + IVr.Sum4;              end;            end;          end; RESETLOOP(IVr);          RECORDSTORE(LoyaltyCardr,true);          LoyaltyCardr.PointsBalance = LoyaltyCardr.PointsBalance + sum;          RECORDSTORE(LoyaltyCardr,true);        end;      end;    end;  return;end; //Edit***************************Sasha2,15:21 26.02.2015 }global		updating procedure RecalculatePOVC_ActOkFlag_Mn()		//Edit----------------------Dima  12.03.2015	begin	record POVc POr;	row POVc POrw;	integer rwcnt,i;	longint totQuant,totShip;		totQuant=0;	totShip=0;		while (LoopMain(POr,1,true)) begin			RecalculateActOkFlag(POr);			RecordStore(POr,true);	end;return;end;