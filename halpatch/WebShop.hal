external procedure ExportStockCSVMn(record RcVc);
external function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);
external procedure ORVc_PasteQuant(var record ORVc,Integer,Boolean,var Boolean);
external procedure ORVc_PastePrice(var record ORVc,Integer,var Boolean);
external procedure ORVc_PasteSum(var record ORVc,Integer,var Boolean);
external procedure ORDchsum(var record ORVc,Integer);
external procedure ORSumup(var record ORVc);
external function Boolean ORDchrsum(var record ORVc,Integer);


SetLangMode(LangRussian,"RUS",0);


// Error codes
// Error1: Order was not created or saved
// Error2: New сontact card was not created
// Error3: <messagestart> tag is missing
// Error4: <messageend> tag is missing
// Error5: no orders in xml data
// Error6: no rows in order or blank artcodes
// Error7: artcode is not exists
// Error8: some artcode warning 
// Error9: order not found


updating Procedure CreateCUFromXML(var record CUVc Cur,xml xmlMessage,integer i,var string errors)
begin
	integer loopName;
	string 255 CCode;
	
	Cur.Code = XmlGetAttribute(xmlMessage,"orders/order" & i,"clientid");
	CCode = Cur.Code;
	loopName = 1;
	while (ReadFirstMain(Cur,1,true)) begin
		loopName = loopName + 1;
		Cur.Code = CCode & loopName;
	end;
	if (loopName > 1) then begin
		if (Len(CCode) > 20) then begin
			Cur.Code = UpperCase(Left(CCode,20 - loopName) & loopName); 
		end else begin
			Cur.Code = UpperCase(CCode & loopName);
		end;
	end else begin
		if (Len(CCode) > 20) then begin
			Cur.Code = UpperCase(Left(CCode,20));
		end else begin
			Cur.Code = UpperCase(CCode);
		end;
	end;
	Cur.Name = XmlGetAttribute(xmlMessage,"orders/order" & i,"name") & " " & XmlGetAttribute(xmlMessage,"orders/order" & i,"name2");
	Cur.eMail = XmlGetAttribute(xmlMessage,"orders/order" & i,"email");
	Cur.Phone = XmlGetAttribute(xmlMessage,"orders/order" & i,"phone");
	Cur.CUType = 1;
	if (!recordStore(Cur,true)) then begin
		if (Blank(errors)) then begin errors = "Error2"; end else begin errors = errors & ",Error2"; end;
		logtext(0,"CUVc create error: " & Cur.Name);
	end;
return;
end;

global webpublic updating Procedure WebGetOrder() //Edit***************************Sasha2,15:18 04.07.2014
begin
  record ORVc ORr;
  row ORVc ORrw;
  record CUVc Cur;
  record ModuleBlock OptFeature;
  record INVc INr;
  record WebShopSettingsBlock WSSB;
  area aPost;
  xml xmlPost;
  integer nodeORCnt,nodeRowCnt,i,j,rowNr,ORCnt;
  val qty,price,sum;
  string 255 artcode,artspec,inwarning,warning,errors;
  Boolean chsum, chsumConfirm;
  
  logText(0,"WebGetOrder");
  webgetpostdata(aPost); //Edit***************************Sasha2,15:18 04.07.2014
  WRITEAREATOFILE(aPost,"post.txt",0);///////////////////////////////
  
  /// Should be cleaned up
  logtext(0,"Set to success always");
  weboutstring("Successful import");
  return;
  ///
  
  xmlPost = PARSEXMLAREA(aPost);
  if (!XmlNodeExists(xmlPost,"messagestart")) then begin
  	logtext(0,"<messagestart> tag is missing. Orders import failed");
  	weboutstring("Error3"); //Edit***************************Sasha2,15:18 04.07.2014
  	return;
  end;
  if (!XmlNodeExists(xmlPost,"messageend")) then begin
  	logtext(0,"<messageend> tag is missing. Orders import failed");
  	weboutstring("Error4"); //Edit***************************Sasha2,15:18 04.07.2014
  	return;
  end;
  
  BlockLoad(WSSB);
  nodeORCnt = XmlCountChildren(xmlPost,"orders");
  ORCnt = 0;
  for (i=0;i<nodeORCnt;i=i+1) begin 
		if (XmlNodeExists(xmlPost,"orders/order" & i)) then begin
			ORCnt = ORCnt + 1;
			ORr.CustOrdNr = XmlGetAttribute(xmlPost,"orders/order" & i,"orderno"); 
			if(readfirstkey("CustOrdNr",ORr,1,true))then begin
				
			end else begin
				recordNew(ORr);
				ORr.SerNr = NextSerNr("ORVc",CurrentDate,-1,false,"");
				ORr.CustOrdNr = XmlGetAttribute(xmlPost,"orders/order" & i,"orderno"); 
			end;
			ORr.OrdDate = CurrentDate;
			Cur.eMail = XmlGetAttribute(xmlPost,"orders/order" & i,"email");
			if (!ReadFirstKey("eMail",Cur,1,true)) then begin
				CreateCUFromXML(CUr,xmlPost,i,errors);
			end;
			ORr.CustCode = Cur.Code;
			ORr.Addr0 = Cur.Name;
			ORr.ShipAddr0 = XmlGetAttribute(xmlPost,"orders/order" & i ,"delivery");
			ORr.ShipAddr1 = XmlGetAttribute(xmlPost,"orders/order" & i ,"country") & ", " & XmlGetAttribute(xmlPost,"orders/order" & i ,"city");
			ORr.ShipAddr2 = XmlGetAttribute(xmlPost,"orders/order" & i ,"address");
			ORr.Comment = XmlGetAttribute(xmlPost,"orders/order" & i ,"ordercomment");
			ORr.OrderClass = "WEB";
			ORr.SalesGroup = "WEB";
			ORr.SalesMan  = CurrentUser;
			ORr.CurncyCode = "UAH";
			ORr.BaseRate1 = 100;
			ORr.BaseRate2 = 100;
			ORr.Location = WSSB.Location;
			ORr.PayDeal = WSSB.PayDeal;
			ORr.ShipDeal = WSSB.ShipDeal;
			ORr.CustomStatusFlag = 0;
  			ORr.TransDate = CurrentDate;
  			ORr.TransTime = CurrentTime;
  			ORr.SyncFlag = 0;
		
			nodeRowCnt = XmlCountChildren(xmlPost,"orders/order" & i );
			rowNr = 0;
			for (j=0;j<nodeRowCnt;j=j+1) begin
				if (XmlNodeExists( xmlPost,"orders/order" & i & "/row" & j )) then begin
					artcode = XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"SKU");
					if (NonBlank(artcode)) then begin
						chsumConfirm = false;
						INr.Code = artcode;
						if (ReadFirstMain(INr,1,true)) then begin
							artspec = XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"Name");
							price = StringToVal(XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"PriceInitial"),M423Val);
							qty = StringToVal(XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"Qty"),M4UVal);
							sum = StringToVal(XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j ,"PriceTotal"),M4Val);
							ORrw.ArtCode = artcode;
							MatRowPut(ORr,rowNr,ORrw);
							ORVc_PasteArtCode(ORr,rowNr,inwarning,warning,false);
							if (nonblank(inwarning)) then begin
								if (Blank(errors)) then begin errors = "Error8"; end else begin errors = errors & ",Error8"; end;
						      logtext(0,"Order #" & ORr.SerNr & ", Artcode #" & ORrw.ArtCode & ": " & inwarning);
						    end;
						    if (nonblank(warning)) then begin
						    	if (Blank(errors)) then begin errors = "Error8"; end else begin errors = errors & ",Error8"; end;
						      logtext(0,"Order #" & ORr.SerNr & ", Artcode #" & ORrw.ArtCode & ": " & warning);
						    end;
							MatRowGet(ORr,rowNr,ORrw);
							if (Blank(ORrw.Spec)) then begin
								ORrw.Spec = artspec;
							end;
							ORrw.Quant = qty;
							MatRowPut(ORr,rowNr,ORrw);
							if (OptFeature.NoQtyDepPrices==0) then begin
						      ORVc_PasteQuant(ORr,rowNr,true,chsum);
						    end else begin
						      chsum = ORDchrsum(ORr,rowNr);
						    end; 
						    if (chsum) then begin
						    	chsumConfirm = true;
						    end;
						    
						    MatRowGet(ORr,rowNr,ORrw);   
							ORrw.Price = price;
							MatRowPut(ORr,rowNr,ORrw);
							
							ORVc_PastePrice(ORr,rowNr,chsum);
						    if (chsum) then begin
								chsumConfirm = true;
						    end;
						    MatRowGet(ORr,rowNr,ORrw);
							ORrw.Sum = sum;
							MatRowPut(ORr,rowNr,ORrw);
							
							ORVc_PasteSum(ORr,rowNr,chsum);
							if (chsum) then begin
						    	chsumConfirm = true;
						    end;
						    if (chsumConfirm) then begin      
						      ORDchsum(ORr,rowNr);
						      ORSumup(ORr);
						    end;
						end else begin
							ORrw.Spec = "Товар с кодом " & artcode & " не существует";
							if (Blank(errors)) then begin errors = "Error7"; end else begin errors = errors & ",Error7"; end;
							logtext(0,"artcode " & artcode & " is not exists");
							MatRowPut(ORr,rowNr,ORrw);
						end;
						rowNr = rowNr + 1;
					end;
				end;
			end;
			if (rowNr == 0) then begin
				if (Blank(errors)) then begin errors = "Error6"; end else begin errors = errors & ",Error6"; end;
				logtext(0,"no rows in order #" & ORr.SerNr);
			end;	
		
			if (recordInsert(ORr,true)) then begin
				logtext(0,"Successful order import #" & ORr.SerNr);
			end else begin
				if (Blank(errors)) then begin errors = "Error1"; end else begin errors = errors & ",Error1"; end;
				logtext(0,"Error1 Order #" & ORr.SerNr);
			end;
		end;
	end;
	if (ORCnt == 0) then begin
		if (Blank(errors)) then begin errors = "Error5"; end else begin errors = errors & ",Error5"; end;
		logtext(0,"No orders in xml data");
	end;	
	if (Blank(errors)) then begin
		weboutstring("Successful import"); //Edit***************************Sasha2,15:18 04.07.2014
		//logText(0,"Successful import order #" & ORr.SerNr);
	end else begin
		weboutstring(errors); //Edit***************************Sasha2,15:18 04.07.2014
	end;

return;
end;

global webpublic Procedure WebExportStockCSVMn()
begin
  record RcVc RepSpec;
  
  ExportStockCSVMn(RepSpec);

return;
end;

global webpublic Procedure WebLookForSync() //Edit***************************Sasha2,17:22 15.07.2014 {
begin
record ORVc ORr;
row ORVc ORrw;
area aSync;
boolean TrHs,testf;
integer i,j,rwcnt,reccnt;
string 10 nextline;

	logtext(0,"WebLookForSync");
	nextline = chr(13) & chr(10);
	AddTextToArea("<?xml version='1.0' encoding='UTF-8'?>" & nextline, aSync);
	AddTextToArea("<messagestart>START</messagestart>" & nextline, aSync);
	AddTextToArea("<orders>" & nextline, aSync);
	
	ORr.SyncFlag = 1;
	TrHs = true;
	j = 0;
	While(loopkey("SyncFlag",ORr,1,TrHs)) begin 
		testf = true;
		if(ORr.SyncFlag!=1)then begin TrHs = false; testf = false; end;
		
		if (testf) then begin
			logtext(0,"Sent order #" & ORr.SerNr & " SF:" & ORr.SyncFlag); //////////////////////
			AddTextToArea(chr(9) & "<order" & j & " orderno='" & ORr.CustOrdNr & "'" & " status='" & ORr.CustomStatusFlag & "'" & ">" & nextline,aSync);
			rwcnt = MatRowCnt(ORr);
			for (i=0;i<rwcnt;i=i+1) begin
				MatRowGet(ORr,i,ORrw);
				AddTextToArea(chr(9) & chr(9) & "<row" & i &  " SKU='" & ORrw.ArtCode & "'" & " Qty='" & ORrw.Quant & "'" & " PriceInitial='" & ORrw.Price & "'" & " PriceTotal='" & ORrw.Sum & "'" & "></row" & i & ">" & nextline,aSync);
			end;
			AddTextToArea(chr(9) & "</order" & j & ">" & nextline,aSync);
			j = j + 1;
		end;
	end; 
	
	AddTextToArea("</orders>" & nextline,aSync);
	AddTextToArea("<messageend>END</messageend>",aSync);
	
	if(j>0)then begin
		WebOutArea(aSync);
		logText(0,"Orders are posted");
		WriteAreaToFile(aSync,"XML.txt",0); /////////////////
	end else begin
		weboutstring("Nothing to sync");
		logtext(0,"Nothing to sync");
	end;

return;
end; //Edit***************************Sasha2,17:22 15.07.2014 }

global webpublic updating Procedure WebSyncConfirmed() //Edit***************************Sasha2,17:21 15.07.2014 {
begin
record ORVc ORr;
area aPost;
xml xmlPost;
integer nodeORCnt,i,ORCnt;
string 255 errors;

	logtext(0,"WebSyncConfirmed");
	webgetpostdata(aPost);
	xmlPost = PARSEXMLAREA(aPost);
	
	if (!XmlNodeExists(xmlPost,"messagestart")) then begin
		logtext(0,"<messagestart> tag is missing. Orders list import failed");
  		weboutstring("Error3"); 
  		return;
	end;
	if (!XmlNodeExists(xmlPost,"messageend")) then begin
  		logtext(0,"<messageend> tag is missing. Orders list import failed");
  		weboutstring("Error4");
  		return;
	end;
	
	nodeORCnt = XmlCountChildren(xmlPost,"orders");
  	ORCnt = 0;
	for (i=0;i<nodeORCnt;i=i+1) begin
		if (XmlNodeExists(xmlPost,"orders/order" & i)) then begin
			ORCnt = ORCnt + 1;
			ORr.CustOrdNr = XmlGetAttribute(xmlPost,"orders/order" & i,"orderno");
			if (ReadFirstKey("CustOrdNr",ORr,1,true)) then begin
				ORr.SyncFlag = 0;
				if (!RecordStore(ORr,true)) then begin
					if (Blank(errors)) then begin errors = "Error1"; end else begin errors = errors & ",Error1"; end;
					logtext(0,"Error1 Order #" & ORr.SerNr);
				end;
			end else begin
				if (Blank(errors)) then begin errors = "Error9"; end else begin errors = errors & ",Error9"; end;
				logtext(0,"Error9 order WEB #" & XmlGetAttribute(xmlPost,"orders/order" & i,"orderno"));
			end;
		end;
	end;
	if (ORCnt == 0) then begin
	if (Blank(errors)) then begin errors = "Error5"; end else begin errors = errors & ",Error5"; end;
		logtext(0,"No orders in xml data");
	end;
	
	if (Blank(errors)) then begin
		weboutstring("Successful");
		logText(0,"Successful synchronization");
	end else begin
		weboutstring(errors);
	end;
return;
end; //Edit***************************Sasha2,17:21 15.07.2014 }