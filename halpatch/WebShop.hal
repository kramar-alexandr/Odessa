external procedure ExportStockCSVMn(record RcVc);
external function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);
external procedure ORVc_PasteQuant(var record ORVc,Integer,Boolean,var Boolean);
external procedure ORVc_PastePrice(var record ORVc,Integer,var Boolean);
external procedure ORVc_PasteSum(var record ORVc,Integer,var Boolean);
external procedure ORDchsum(var record ORVc,Integer);
external procedure ORSumup(var record ORVc);
external function Boolean ORDchrsum(var record ORVc,Integer);
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string); //Edit***************************Sasha2,11:03 14.01.2015
external procedure ORVc_PasteCurncyCode(var record ORVc,string);	//Edit--------------------Dima 23.01.2015
external procedure ExportAllItems(record RepSpec);// Edit ************************** Thursday, 9 April 2015 15:35:46
external procedure RefreshAllInnerRegistersNP;
external updating procedure  SendSMSFromStack();//Edit----------------------Dima  28.08.2015
external function Boolean FindSubString(string,string);	//Edit----------------------Dima  17.09.2015
external updating procedure CheckWaitingTimeForGoods();

SetLangMode(LangRussian,"RUS",0);


// Error codes
// Error1: Order was not created or saved
// Error2: New ñontact card was not created
// Error3: <messagestart> tag is missing
// Error4: <messageend> tag is missing
// Error5: no orders in xml data
// Error6: no rows in order or blank artcodes
// Error7: artcode is not exists
// Error8: some artcode warning 
// Error9: order not found

global updating procedure CustTimeTableAction()
begin
  record RcVc RepSpec;
  time t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,curt,curtnew;
  string 5 hr,mn;
  integer minute;

    t1 = StringToTime("8:00");
    t2 = StringToTime("10:00");
    t3 = StringToTime("12:00");
    t4 = StringToTime("14:00");
    t5 = StringToTime("16:00");
    t6 = StringToTime("18:00");
    t7 = StringToTime("20:00");
    t8 = StringToTime("22:00");
    t9 = StringToTime("00:00");
    
    t10 = StringToTime("3:00");//Nowa poshta

    
    curt = CurrentTime; 
    hr = GetHour(curt);
    if (len(hr)==1) then begin
    	hr = "0" & hr;
    end;
    mn = GetMinute(curt);
    minute = StringToInt(mn);
    if (len(mn)==1) then begin
    	mn = "0" & mn;
    end;
    curtnew = StringToTime(hr & ":" & mn);

    if (curtnew==t1 or curtnew==t2 or curtnew==t3 or curtnew==t4 or curtnew==t5 or curtnew==t6 or curtnew==t7 or curtnew==t8 or curtnew==t9) then begin
    	LogText(0,"CustTimeTableAction at planned time: " & curtnew);
    	ExportStockCSVMn(RepSpec);
    	ExportAllItems(RepSpec);
    end;
    if (curtnew==t10) then begin
    	LogText(0,"CustTimeTableAction at planned time: " & curtnew);
    	RefreshAllInnerRegistersNP;
    end;    
    
		if (Mod(minute,5)==0) then begin		//Edit----------------------Dima  28.08.2015
			SendSMSFromStack;
		end;
		
		if (curtnew==t1 or curtnew==t7) then begin 
			CheckWaitingTimeForGoods
		end;
return;
end;

global procedure ExportStockCSVMn(record RcVc RepSpec)
begin
	record ItemStatusVc ISr,IS2r,IS3r;
	record INVc INr;
	record PLVc PLr;
	record ExportStockCSVBlock ExportStockCSVb;
	area importar;
//	area ftpRoutine;
  string 200 tstr;
	string 10 location,loc1,loc2,loc3,loc4,loc5,qty,price;
	string 10 loc1t,loc2t,loc3t,loc4t,loc5t;
	boolean testf;
	integer inStock,dop_ostatok,pos;
	integer realqty;
	
	BlockLoad(ExportStockCSVb);
	
	if (Blank(ExportStockCSVb.HostIP) or Blank(ExportStockCSVb.FileName)) then begin
	 goto LExportStockCSVMn;
	end;
	
	addtexttoarea("websites;type;sku;price;qty;in_stock;dop_ostatok",importar);
	addtexttoarea(chr(13) & chr(10),importar);
	
	pos = 0;
  ExtractObjWithSeparator(",",ExportStockCSVb.Location,true,pos,location);
  while (nonblank(location)) begin
    switch (location) begin
      case "RYBRAY":loc1 = location;
      							loc1t = location;
      case "3-RAY": loc2 = location;
      							loc2t = location;
      case "4-NIZ": loc3 = location;
      							loc3t = location;
      case "1-KOC": loc4 = location;
      							loc4t = location;
      case "6-KV": 	loc5 = location;
										loc5t = location;
    end;
    ExtractObjWithSeparator(",",ExportStockCSVb.Location,true,pos,location);
  end;
	
	INr.Code = "";
	location = ExportStockCSVb.Location;
	while (loopmain(INr,1,true)) begin
		realqty = 0;
	  testf = true;
	  dop_ostatok = 0;
	  
		ISr.Code = INr.Code;
		ISr.Location = loc1;
		IS2r.Code = INr.Code;
		IS2r.Location = loc2;
		IS3r.Code = INr.Code;
		IS3r.Location = loc3;
		if((readfirstmain(ISr,2,true) and (ISr.Instock-ISr.OrddOut)>0) or (readfirstmain(IS2r,2,true) and (IS2r.Instock-IS2r.OrddOut)>0) or (readfirstmain(IS3r,2,true) and (IS3r.Instock-IS3r.OrddOut)>0)) then begin dop_ostatok = dop_ostatok + 1; end;
		realqty = realqty + ISr.Instock-ISr.OrddOut + IS2r.Instock-IS2r.OrddOut + IS3r.Instock-IS3r.OrddOut;
		
		ISr.Code = INr.Code;
		ISr.Location = loc4;	
					
		PLr.ArtCode = INr.Code;
		PLr.PLCode = ExportStockCSVb.PLCode;
		if(!readfirstmain(PLr,2,true))then begin
			testf = false;
		end else begin
			if (PLr.ExVatPrice < 2500) then begin		
				loc5 = "";
			end;
		end;
		
		IS2r.Code = INr.Code;
		IS2r.Location = loc5;
		
		if((readfirstmain(ISr,2,true) and (ISr.Instock-ISr.OrddOut)>0) or (readfirstmain(IS2r,2,true) and (IS2r.Instock-IS2r.OrddOut)>0)) then begin dop_ostatok = dop_ostatok + 2; end;
		realqty = realqty + ISr.Instock-ISr.OrddOut + IS2r.Instock-IS2r.OrddOut;
		loc5 = loc5t;
		
		if (dop_ostatok>0) then begin	
			if(realqty>10)then begin		
				qty = 200;
			end else begin
				qty = realqty;
			end;
			inStock = 1;
		end else begin	
			qty = 0;
			inStock = 2;
		end;			
		
				
		if (testf==true) then begin
		  price = ValToString(PLr.ExVatPrice,M4Val,"",".",0);
			addtexttoarea("base;simple;" & INr.Code & ";" & price & ";" & qty & ";" & inStock & ";" & dop_ostatok,importar);
			addtexttoarea(chr(13) & chr(10),importar);
		end;

	end;	

	WriteAreaToFile(importar,ExportStockCSVb.FileName,0);
	
	tstr = ExportStockCSVb.HostIP & " " & ExportStockCSVb.Port & " ";
	if (NonBlank(ExportStockCSVb.Login)) then begin
	  tstr = tstr & ExportStockCSVb.Login & " ";
	end else begin
	  tstr = tstr & "anonymous ";
	end;
	if (NonBlank(ExportStockCSVb.Password)) then begin
	  tstr = tstr & ExportStockCSVb.Password & " ";
	end else begin
	  tstr = tstr & "password ";
	end;
	tstr = tstr & ExportStockCSVb.DirName & " " & ExportStockCSVb.FileName;
	
	millisleep(500);
	
	//logtext(0,tstr);
	RunProgram("./ftptransfer.sh", tstr);

LExportStockCSVMn:;

return;
end;


updating Procedure CreateCUFromXML(var record CUVc Cur,xml xmlMessage,integer i,var string errors)
begin
	integer loopName;
	string 255 CCode;
	
	Cur.Code = XmlGetAttribute(xmlMessage,"orders/order" & i,"clientid");
	CCode = Cur.Code;
	loopName = 1;
	while (ReadFirstMain(Cur,1,true)) begin
		loopName = loopName + 1;
		Cur.Code = CCode & loopName;
	end;
	if (loopName > 1) then begin
		if (Len(CCode) > 20) then begin
			Cur.Code = UpperCase(Left(CCode,20 - loopName) & loopName); 
		end else begin
			Cur.Code = UpperCase(CCode & loopName);
		end;
	end else begin
		if (Len(CCode) > 20) then begin
			Cur.Code = UpperCase(Left(CCode,20));
		end else begin
			Cur.Code = UpperCase(CCode);
		end;
	end;
	Cur.Name = XmlGetAttribute(xmlMessage,"orders/order" & i,"name") & " " & XmlGetAttribute(xmlMessage,"orders/order" & i,"name2");
	Cur.eMail = XmlGetAttribute(xmlMessage,"orders/order" & i,"email");
	Cur.Phone = XmlGetAttribute(xmlMessage,"orders/order" & i,"phone");
	Cur.CustCat = "WEB";	//Edit--------------------Dima 08.01.2015
	Cur.CUType = 1;
	Cur.CurncyCode = "UAH_R";
	Cur.PLCode = "RRP";
	Cur.VATCode = "0%";
	Cur.OnAccount = 1;		//Edit----------------------Dima  11.02.2015
	Cur.SelfBilling = 1;	//Edit----------------------Dima  11.02.2015
	if (!recordStore(Cur,true)) then begin
		if (Blank(errors)) then begin errors = "Error2"; end else begin errors = errors & ",Error2"; end;
		logtext(0,"CUVc create error: " & Cur.Name);
	end;
return;
end;

global webpublic updating Procedure WebGetOrder() //Edit***************************Sasha2,15:18 04.07.2014
begin
  record ORVc ORr;
  row ORVc ORrw;
  record CUVc Cur;
  record ModuleBlock OptFeature;
  record INVc INr;
  record WebShopSettingsBlock WSSB;
  area aPost;
  xml xmlPost;
  integer nodeORCnt,nodeRowCnt,i,j,rowNr,ORCnt;
  val qty,price,sum;
  string 255 artcode,artspec,inwarning,warning,errors;
  Boolean chsum, chsumConfirm;
  string 10 rebgroup;
  record RebVc Rebr,Reb2r;

  
  logText(0,"WebGetOrder");
  webgetpostdata(aPost); //Edit***************************Sasha2,15:18 04.07.2014
  WRITEAREATOFILE(aPost,"post.txt",0);///////////////////////////////
  
  xmlPost = PARSEXMLAREA(aPost);
  if (!XmlNodeExists(xmlPost,"messagestart")) then begin
  	logtext(0,"<messagestart> tag is missing. Orders import failed");
  	if (Blank(errors)) then begin errors = "Error3"; end else begin errors = errors & ",Error3"; end;
  	goto LWebGetOrder;
  end;
  if (!XmlNodeExists(xmlPost,"messageend")) then begin
  	logtext(0,"<messageend> tag is missing. Orders import failed");
  	if (Blank(errors)) then begin errors = "Error4"; end else begin errors = errors & ",Error4"; end;
  	goto LWebGetOrder;
  end;
  
  BlockLoad(WSSB);
  nodeORCnt = XmlCountChildren(xmlPost,"orders");
  ORCnt = 0;
  for (i=0;i<nodeORCnt;i=i+1) begin 
  	rebgroup = "";
		if (XmlNodeExists(xmlPost,"orders/order" & i)) then begin
			ORCnt = ORCnt + 1;
			ORr.CustOrdNr = XmlGetAttribute(xmlPost,"orders/order" & i,"orderno"); 
			if(readfirstkey("CustOrdNr",ORr,1,true))then begin
				
			end else begin
				recordNew(ORr);
				ORr.SerNr = NextSerNr("ORVc",CurrentDate,-1,false,"");
				ORr.CustOrdNr = XmlGetAttribute(xmlPost,"orders/order" & i,"orderno"); 
			end;
			ORr.OrdDate = CurrentDate;
			Cur.eMail = XmlGetAttribute(xmlPost,"orders/order" & i,"email");
			
			rebgroup = XmlGetAttribute(xmlPost,"orders/order" & i,"group_id");
			
			if (!ReadFirstKey("eMail",Cur,1,true)) then begin
				CreateCUFromXML(CUr,xmlPost,i,errors);
			end else begin
				if(nonblank(CUr.RebCode))then begin
					if(CUr.CustCat=="WEB")then begin
						Rebr.Code = CUr.RebCode;
						readfirstmain(Rebr,1,true);
						switch(rebgroup)begin
							case"6":Reb2r.Code = "5%";
											readfirstmain(Reb2r,1,true);// Edit ************************** Thursday, 22 October 2015 10:08:00
											if(Rebr.vra0<Reb2r.vra0)then begin CUr.RebCode = "5%"; end;
							case"5":Reb2r.Code = "10%";
											readfirstmain(Reb2r,1,true);// Edit ************************** Thursday, 22 October 2015 10:07:59
											if(Rebr.vra0<Reb2r.vra0)then begin CUr.RebCode = "10%"; end;
							case"4":Reb2r.Code = "15%";
											readfirstmain(Reb2r,1,true);// Edit ************************** Thursday, 22 October 2015 10:07:58
											if(Rebr.vra0<Reb2r.vra0)then begin CUr.RebCode = "15%"; end;
						end;
						recordStore(CUr,true);
					end;
				end else begin
					if(CUr.CustCat=="WEB")then begin
						switch(rebgroup)begin
							case"6":CUr.RebCode = "5%";
							case"5":CUr.RebCode = "10%";
							case"4":CUr.RebCode = "15%";
						end;
						recordStore(CUr,true);
					end;
				end;
			end;
			ORr.CustCode = Cur.Code;
			ORr.Addr0 = Cur.Name;
			ORr.ShipAddr0 = XmlGetAttribute(xmlPost,"orders/order" & i ,"delivery");
			ORr.ShipAddr1 = XmlGetAttribute(xmlPost,"orders/order" & i ,"country") & ", " & XmlGetAttribute(xmlPost,"orders/order" & i ,"city");
			ORr.ShipAddr2 = XmlGetAttribute(xmlPost,"orders/order" & i ,"address");
			ORr.Comment = XmlGetAttribute(xmlPost,"orders/order" & i ,"ordercomment");
			ORr.OrderClass = "WEB";
			ORr.SalesGroup = "WEB";
			ORr.SalesMan  = CurrentUser;
			ORr.CurncyCode = "UAH_R";
			//ORr.BaseRate1 = 100;
			//ORr.BaseRate2 = 100;
			ORr.Location = WSSB.Location;
			ORr.PayDeal = WSSB.PayDeal;
			ORr.ShipDeal = WSSB.ShipDeal;
			ORr.CustomStatusFlag = 0;
  		ORr.TransDate = CurrentDate;
  		ORr.TransTime = CurrentTime;
  		ORr.SyncFlag = 0;
			ORVc_PasteCurncyCode(ORr,"USD");		//Edit--------------------Dima 23.01.2015
			if (FindSubString("àìîâûâîç",ORr.ShipAddr0)) then begin
				ORr.SelfDelivery = 1;
			end;
			ORr.Advance = 0; //Edit----------------------Dima  18.12.2015			
			

			nodeRowCnt = XmlCountChildren(xmlPost,"orders/order" & i );
			rowNr = 0;
			for (j=0;j<nodeRowCnt;j=j+1) begin
				if (XmlNodeExists( xmlPost,"orders/order" & i & "/row" & j )) then begin
					artcode = XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"SKU");
					if (NonBlank(artcode)) then begin
						chsumConfirm = false;
						INr.Code = artcode;
						if (ReadFirstMain(INr,1,true)) then begin
							artspec = XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"Name");
							price = StringToVal(XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"PriceInitial"),M423Val);
							qty = StringToVal(XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j,"Qty"),M4UVal);
							sum = StringToVal(XmlGetAttribute(xmlPost,"orders/order" & i & "/row" & j ,"PriceTotal"),M4Val);
							ORrw.ArtCode = artcode;
							MatRowPut(ORr,rowNr,ORrw);
							ORVc_PasteArtCode(ORr,rowNr,inwarning,warning,false);
							if (nonblank(inwarning)) then begin
							  //if (Blank(errors)) then begin errors = "Error8"; end else begin errors = errors & ",Error8"; end;
						      logtext(0,"Order #" & ORr.SerNr & ", Artcode #" & ORrw.ArtCode & ": " & inwarning);
						    end;
						    if (nonblank(warning)) then begin
						      //if (Blank(errors)) then begin errors = "Error8"; end else begin errors = errors & ",Error8"; end;
						      logtext(0,"Order #" & ORr.SerNr & ", Artcode #" & ORrw.ArtCode & ": " & warning);
						    end;
							MatRowGet(ORr,rowNr,ORrw);
							if (Blank(ORrw.Spec)) then begin
								ORrw.Spec = artspec;
							end;
							ORrw.Quant = qty;
							ORrw.NecessaryQuant = qty;
							MatRowPut(ORr,rowNr,ORrw);
							if (OptFeature.NoQtyDepPrices==0) then begin
						      ORVc_PasteQuant(ORr,rowNr,true,chsum);
						    end else begin
						      chsum = ORDchrsum(ORr,rowNr);
						    end; 
						    if (chsum) then begin
						    	chsumConfirm = true;
						    end;
						    
						    MatRowGet(ORr,rowNr,ORrw);   
							ORrw.Price = price;
							MatRowPut(ORr,rowNr,ORrw);
							
							ORVc_PastePrice(ORr,rowNr,chsum);
						    if (chsum) then begin
								chsumConfirm = true;
						    end;
						    MatRowGet(ORr,rowNr,ORrw);
							ORrw.Sum = sum;
							MatRowPut(ORr,rowNr,ORrw);
							
							ORVc_PasteSum(ORr,rowNr,chsum);
							if (chsum) then begin
						    	chsumConfirm = true;
						    end;
						    if (chsumConfirm) then begin      
						      ORDchsum(ORr,rowNr);
						      ORSumup(ORr);
						    end;
						end else begin
							ORrw.Spec = "îâàð ñ êîäîì " & artcode & " íå ñóùåñòâóåò";
							//if (Blank(errors)) then begin errors = "Error7"; end else begin errors = errors & ",Error7"; end;
							logtext(0,"artcode " & artcode & " is not exists");
							MatRowPut(ORr,rowNr,ORrw);
						end;
						rowNr = rowNr + 1;
					end;
				end;
			end;
			if (rowNr == 0) then begin
				//if (Blank(errors)) then begin errors = "Error6"; end else begin errors = errors & ",Error6"; end;
				logtext(0,"no rows in order #" & ORr.SerNr);
			end;	
		
			if (recordInsert(ORr,true)) then begin
				logtext(0,"Successful order import #" & ORr.SerNr);
			end else begin
				if (Blank(errors)) then begin errors = "Error1"; end else begin errors = errors & ",Error1"; end;
				logtext(0,"Error1 Order #" & ORr.SerNr);
			end;
		end;
	end;
	if (ORCnt == 0) then begin
		//if (Blank(errors)) then begin errors = "Error5"; end else begin errors = errors & ",Error5"; end;
		logtext(0,"No orders in xml data");
	end;
	
LWebGetOrder:;	
		
	if (Blank(errors)) then begin
		weboutstring("Successful import"); //Edit***************************Sasha2,15:18 04.07.2014
	end else begin
		weboutstring(errors); //Edit***************************Sasha2,15:18 04.07.2014
	end;

return;
end;

global webpublic Procedure WebExportStockCSVMn()
begin
  record RcVc RepSpec;
  
  ExportStockCSVMn(RepSpec);

return;
end;

global webpublic Procedure WebLookForSync() //Edit***************************Sasha2,17:22 15.07.2014 {
begin
record ORVc ORr;
row ORVc ORrw;
area aSync;
boolean TrHs,testf;
integer i,j,rwcnt,reccnt;
string 10 nextline;

	logtext(0,"WebLookForSync");
	nextline = chr(13) & chr(10);
	AddTextToArea("<?xml version='1.0' encoding='UTF-8'?>" & nextline, aSync);
	AddTextToArea("<messagestart>START</messagestart>" & nextline, aSync);
	AddTextToArea("<orders>" & nextline, aSync);
	
	ORr.SyncFlag = 1;
	TrHs = true;
	j = 0;
	While(loopkey("SyncFlag",ORr,1,TrHs)) begin 
		testf = true;
		if(ORr.SyncFlag!=1)then begin TrHs = false; testf = false; end;
		
		if (testf) then begin
			logtext(0,"Sent order #" & ORr.SerNr & " SF:" & ORr.SyncFlag); //////////////////////
			AddTextToArea(chr(9) & "<order" & j & " orderno='" & ORr.CustOrdNr & "'" & " status='" & ORr.CustomStatusFlag & "'" & ">" & nextline,aSync);
			/*rwcnt = MatRowCnt(ORr);
			for (i=0;i<rwcnt;i=i+1) begin
				MatRowGet(ORr,i,ORrw);
				AddTextToArea(chr(9) & chr(9) & "<row" & i &  " SKU='" & ORrw.ArtCode & "'" & " Qty='" & ORrw.Quant & "'" & " PriceInitial='" & ORrw.Price & "'" & " PriceTotal='" & ORrw.Sum & "'" & "></row" & i & ">" & nextline,aSync);
			end;*/
			AddTextToArea(chr(9) & "</order" & j & ">" & nextline,aSync);
			j = j + 1;
		end;
	end; 
	
	AddTextToArea("</orders>" & nextline,aSync);
	AddTextToArea("<messageend>END</messageend>",aSync);
	
	if(j>0)then begin
		WebOutArea(aSync);
		logText(0,"Orders are posted");
		WriteAreaToFile(aSync,"XML.txt",0); /////////////////
	end else begin
		weboutstring("Nothing to sync");
		logtext(0,"Nothing to sync");
	end;

return;
end; //Edit***************************Sasha2,17:22 15.07.2014 }

global webpublic updating Procedure WebSyncConfirmed() //Edit***************************Sasha2,17:21 15.07.2014 {
begin
record ORVc ORr;
area aPost;
xml xmlPost;
integer nodeORCnt,i,ORCnt;
string 255 errors;

	logtext(0,"WebSyncConfirmed");
	webgetpostdata(aPost);
	xmlPost = PARSEXMLAREA(aPost);
	
	if (!XmlNodeExists(xmlPost,"messagestart")) then begin
		logtext(0,"<messagestart> tag is missing. Orders list import failed");
		if (Blank(errors)) then begin errors = "Error3"; end else begin errors = errors & ",Error3"; end; 
  		goto LWebSyncConfirmed;
	end;
	if (!XmlNodeExists(xmlPost,"messageend")) then begin
  		logtext(0,"<messageend> tag is missing. Orders list import failed");
  		if (Blank(errors)) then begin errors = "Error4"; end else begin errors = errors & ",Error4"; end;
  		goto LWebSyncConfirmed;
	end;
	
	nodeORCnt = XmlCountChildren(xmlPost,"orders");
  	ORCnt = 0;
	for (i=0;i<nodeORCnt;i=i+1) begin
		if (XmlNodeExists(xmlPost,"orders/order" & i)) then begin
			ORCnt = ORCnt + 1;
			ORr.CustOrdNr = XmlGetAttribute(xmlPost,"orders/order" & i,"orderno");
			if (ReadFirstKey("CustOrdNr",ORr,1,true)) then begin
				ORr.SyncFlag = 0;
				if (!RecordStore(ORr,true)) then begin
					if (Blank(errors)) then begin errors = "Error1"; end else begin errors = errors & ",Error1"; end;
					logtext(0,"Error1 Order #" & ORr.SerNr);
				end;
			end else begin
				if (Blank(errors)) then begin errors = "Error9"; end else begin errors = errors & ",Error9"; end;
				logtext(0,"Error9 order WEB #" & XmlGetAttribute(xmlPost,"orders/order" & i,"orderno"));
			end;
		end;
	end;
	if (ORCnt == 0) then begin
		if (Blank(errors)) then begin errors = "Error5"; end else begin errors = errors & ",Error5"; end;
		logtext(0,"No orders in xml data");
	end;

LWebSyncConfirmed:;

	if (Blank(errors)) then begin
		weboutstring("Successful");
		logText(0,"Successful synchronization");
	end else begin
		weboutstring(errors);
	end;
return;
end; //Edit***************************Sasha2,17:21 15.07.2014 }