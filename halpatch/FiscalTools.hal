external function val AbsoluteVal(val);

procedure CreateFiscalFile(area filedata)
begin
	record FiscalSettingsBlock Fiskalblock;
	longint tick;
	
	BlockLoad(Fiskalblock);
	
	tick = GetCurTick;
	if (DirExists(Fiskalblock.StoragePath))	then begin
		WriteAreaToFile(filedata,Fiskalblock.StoragePath & "\\" & Fiskalblock.FileName & tick & ".txt",0);
	end else begin
		MessageBox(31065,"");
	end;

end;


function string 10 FormatFiscalDate(date d)
begin
	integer i;
	string 10 res;
	
	
	i = GetDay(d);
	res = i;
	if (i<10) then begin 
		res = "0" & i;
	end;	
	i = GetMonth(d);
	if (i<10) then begin 
		res = res & "0" & i;
	end else begin	
		res = res & i;
	end;
	i = GetYear(d);
	res = res & i;

FormatFiscalDate = res;
return;
end;




global
procedure MakeFiscalReceipt(record IVVc IVr)
begin
	row IVVc IVrw;
	area filedata;
	integer i,rwcnt;
	string 5 d,nalogGroup;
	string 255 rowStr,name;
	string 10 articul,saleCommand,payCommand,refundCommand,command;
	integer printStatus,paymentStatus,quant;
	longint rowSum;
	
  d = "!===!"; 	//divider

  saleCommand = "SaleEx";
  payCommand = "Payment";
  refundCommand  = "PayMoney";  
  printStatus = 0;
  nalogGroup = "1";
	rwcnt = MatRowCnt(IVr);
	
	
	for(i=0;i<rwcnt;i=i+1) begin
		MatRowGet(IVr,i,IVrw);
		if (IVrw.stp == kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode)) then begin	
			if (IVrw.Quant>0) then begin
				command = saleCommand;
			end else begin	
				command = refundCommand;		
			end;
				rowSum = AbsoluteVal(IVrw.Sum) * 100;
				quant = AbsoluteVal(IVrw.Quant);
				articul = IVr.SerNr & i;
				//rowStr = saleCommand & d & quant & d & printStatus & d &  rowSum & d & nalogGroup & d & IVrw.Spec & d & articul & d; 
				rowStr = command & d & quant & d & printStatus  & d &  "false" & d &  rowSum & d & nalogGroup & d &  "false" & d & IVrw.Spec & d & articul & d; 
				AddTextToArea(rowStr,filedata);			
		end;
		if (IVrw.stp == kInvoiceRowTypeGiftVoucherSold) then begin
			rowSum = IVrw.Sum * 100;
			quant = 1;
			name = IVrw.Spec;
			articul = IVr.SerNr & i;
			if (blank(name)) then begin name = USetStr(31064); end;
			rowStr = saleCommand & d & quant & d & printStatus  & d &  "false" & d &  rowSum & d & nalogGroup & d &  "false" & d & IVrw.Spec & d & articul & d; 
			AddTextToArea(rowStr,filedata);
		end;		
		if (IVrw.stp==kInvoiceRowTypeCashPayment) then begin
			paymentStatus = 3;
			rowSum = AbsoluteVal(IVrw.Sum) * 100;
//			rowStr = payCommand & d & paymentStatus & d & rowSum & d &  "false" & d & "true" & d & "" & d ;
				rowStr = payCommand & d & paymentStatus & d & rowSum & d &  "false" & d & "true" & d ; 
			AddTextToArea(rowStr,filedata);
		end;
		if (IVrw.stp==kInvoiceRowTypeCreditCardPayment) then begin
			paymentStatus = 0;
			rowSum = AbsoluteVal(IVrw.Sum) * 100;
//				rowStr = payCommand & d & paymentStatus & d & rowSum & d &  "false" & d & "true" & d & "" & d ;
			rowStr = payCommand & d & paymentStatus & d & rowSum & d &  "true" & d & "true" & d ; 
			AddTextToArea(rowStr,filedata);
		end;		
		
	end;	
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
	
return;	
end;



global procedure MakeXReport()
begin
	string 255 command,password,d;
	area filedata;
	
	d = "!===!"; 	//divider	
//	command = "FPDayReport";
	command = "DayReport";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
return;
end;



global procedure MakeZReport()
begin
	string 255 command,password,d;
	area filedata;
	
	d = "!===!"; 	//divider	
	command = "DayClrReport";
	password = "";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
return;
end;


global procedure MakePeriodicReport()
begin
	string 255 command,password,d;
	area filedata;
	string 10 sdate,edate,temp;
	integer wn;
	record RcVc RepSpec;
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);

	sdate = FormatFiscalDate(RepSpec.sStartDate);
	edate = FormatFiscalDate(RepSpec.sEndDate);
	
	d = "!===!"; 	//divider	
	command = "periodreport";

	AddTextToArea(command & d & sdate & d & edate,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
	

return;
end;




global procedure MakePeriodicShortReport()
begin
	string 255 command,password,d;
	area filedata;
	string 10 sdate,edate,temp;
	integer wn;
	record RcVc RepSpec;
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);

	sdate = FormatFiscalDate(RepSpec.sStartDate);
	edate = FormatFiscalDate(RepSpec.sEndDate);
	
	d = "!===!"; 	//divider	
	command = "periodreportshort";

	AddTextToArea(command & d & sdate & d & edate,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);	

return;
end;


global procedure MakeResetOrder()
begin
	string 255 command,password,d;
	area filedata;
	
	d = "!===!"; 	//divider	
	command = "ResetOrder";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
return;
end;


global procedure MakeNullCheck()
begin
	string 255 command,password,d;
	area filedata;
	
	d = "!===!"; 	//divider	
	command = "NullCheck";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
return;
end;

global procedure MakeLastCheck()
begin
	string 255 command,password,d;
	area filedata;
	
	d = "!===!"; 	//divider	
	command = "CopyLastCheck";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	CreateFiscalFile(filedata);
return;
end;




global
function Boolean FiscalPrintingTClassOnOpenWindow(Integer wn)
begin
  record RcVc RepSpec;
  date d;
  string 10 sd;
  
  sd = DateToString(CurrentDate,"DD/MM/YYYY");
  GetWindowRecord(wn,RepSpec);
	RepSpec.sStartDate = sd;
	RepSpec.sEndDate = sd;
  PutWindowRecord(wn,RepSpec); 
  
  FiscalPrintingTClassOnOpenWindow = false;
  return;
end;